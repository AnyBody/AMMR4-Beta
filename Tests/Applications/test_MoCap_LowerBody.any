//# Note. Since these tests include main files from other
//# applications they alter the ANYBODY_PATH_MAINFILEDIR and 
//# ANYBODY_PATH_MAINFILE preprocessor flags. 
//#
//# If these flags are important to the model they must be mocked by the
//# test framework. This can be done by adding the following test directives. 
//# path = {'ANYBODY_PATH_MAINFILEDIR':'../../Application/Examples/MoCapModel',
//#         'ANYBODY_PATH_MAINFILE':'../../Application/Examples/MoCapModel/MoCap_LowerBody.main.any' }
//#
//save_study = "Main.Studies.InverseDynamicStudy"
//define = [
//  { 'MotionAndParameterOptimizationModel':'1',
//    'InverseDynamicModel':'0'},
//  { 'MotionAndParameterOptimizationModel':'0',
//    'InverseDynamicModel':'1'},
//]

#include "../libdef.any"

#ifndef TEST_NAME
#define MotionAndParameterOptimizationModel 1
#define InverseDynamicModel 0
#endif


#if MotionAndParameterOptimizationModel == 1
#define OutputFileNamePrefix "_TEST_LowerBody"
#endif

#include "../../Application/Examples/Deprecated/MoCapModel/MoCap_LowerBody.main.any"

Main = 
{
  
#ifndef CREATE_IMAGE
#if InverseDynamicModel == 1
  AnyOperation& RunTest = Main.InverseDynamicAnalysisSequence;
#endif
#else
#endif


#if MotionAndParameterOptimizationModel == 1
Main.Studies = {
//Dummy study to fool saving data for test comparison
  AnyBodyStudy InverseDynamicStudy = {Gravity = {0,0,0};};
};
AnyOperation& RunTest = Main.Studies.InverseDynamicStudy.Kinematics;
#endif

};
