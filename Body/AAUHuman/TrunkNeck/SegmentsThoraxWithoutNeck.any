/**
Definitions of Segments in the Thorax Part of the Spine.

Abbrevitations:
ALL = Anterior Longitudinal Ligament
PLL = Posterior Longitudinal Ligament
LS = Ligamentum Supraspinale
LI = Ligamentum Interspinalia

MF = Multifidi
ILpl = Iliocostalis Lumborum pars lumborum (part of Erector Spinae)
LTpl = Longissimus Thoracis pars lumborum (part of Erector Spinae)
ILpt = Iliocostalis Lumborum pars thoracis (part of Erector Spinae)
LTpt = Longissimus Thoracis pars thoracis (part of Erector Spinae)
PM = Psoas Major
QL = Quadratus Lumborum
RA = Rectus Abdominis
OE = Obliquus Externus
OI = Obliquus Internus

C = Costae (ribben)
CI = Crista Iliaca (hoftebenskammen)
CP = Crista Pubica
SIPS = Spina iliaca posterior superior (den øverste og bagerste spids på os Ilium) 
SIPI = Spina iliaca Posterior inferior   (den nederste og bagerste spids på os Ilium)
T = Thoracal hvirvel
L = Lumbal hvirvel
S = Sacral segment
*/
AnyFolder SegmentsThorax = { 
  
  AnySeg SkullSeg = {
    
    AnyFunTransform3D &Scale =..ScalingTrunk.Head.ScaleFunction;
    
    r0=.ThoraxSeg.C1HatNode.sRel*.ThoraxSeg.Axes0'+.ThoraxSeg.r0; 
    
    AnyVar MassS = ..Scaling.MassScaling.Head.MassScale;
    
    AnyVar MassStandard = ..StandardParameters.HeadWithoutNeck.Mass;
    Mass = MassS*MassStandard;
    
    Jii = {181.0,173.0,236.0}/10000;
    
    sCoM = Scale({0.0,0.0,0.0}); //Moet nog defenieerd worden
      JaboutCoMOnOff = On;
    AnyRefNode C1C0JntNode = {
      sRel = .Scale({0.0,0.0,0.0});
      AnyDrawNodes DrwNode = {
        ScaleXYZ = {0.003,0.003,0.003};
        RGB = {0, 1, 0};
      };
    };
    
    AnyRefNode NeckNode={
      sRel=.Scale({0.0,0.0,0.0});
    };
    
    //Lumped Hyoid
    AnyRefNode LumpedHyoidT1C0NodeR = {sRel = .Scale({0.006+0.018,-0.006+0.005,0.018});};
    AnyRefNode LumpedHyoidT1C0NodeL = {sRel = {.LumpedHyoidT1C0NodeR.sRel[0],.LumpedHyoidT1C0NodeR.sRel[1],.LumpedHyoidT1C0NodeR.sRel[2]*-1};};
    
    //Longus Colli nodes
    AnyRefNode LongusColliT1C0NodeR = {sRel = .Scale({0.020,-0.010,0.008});};
    AnyRefNode LongusColliT1C0NodeL = {sRel = {.LongusColliT1C0NodeR.sRel[0],.LongusColliT1C0NodeR.sRel[1],.LongusColliT1C0NodeR.sRel[2]*-1};};    
    
    //Longus cappitis nodes
    AnyRefNode LongusCapitisC0NodeR = {sRel = .Scale({0.030,-0.010,0.008});};
    AnyRefNode LongusCapitisC0NodeL = {sRel = {.LongusCapitisC0NodeR.sRel[0],.LongusCapitisC0NodeR.sRel[1],.LongusCapitisC0NodeR.sRel[2]*-1};};
    
    //Sternocleidomastoid nodes
    //AnyRefNode SternocleidomastoidSternumC0NodeR = {sRel = .Scale({0.0,-0.025+0.005,0.074});};
    AnyRefNode SternocleidomastoidSternumC0NodeR = {sRel = .Scale({-0.034+0.018+0.01,-0.025+0.005,0.074});};
    AnyRefNode SternocleidomastoidSternumC0NodeL = {sRel = {.SternocleidomastoidSternumC0NodeR.sRel[0],.SternocleidomastoidSternumC0NodeR.sRel[1],.SternocleidomastoidSternumC0NodeR.sRel[2]*-1};};

    //AnyRefNode SternocleidomastoidClavicleC0NodeR = {sRel = .Scale({0.0,-0.025+0.005,0.074});};
    AnyRefNode SternocleidomastoidClavicleC0NodeR = {sRel = .Scale({-0.034+0.018+0.01,-0.025+0.005,0.074});};
    AnyRefNode SternocleidomastoidClavicleC0NodeL = {sRel = {.SternocleidomastoidClavicleC0NodeR.sRel[0],.SternocleidomastoidClavicleC0NodeR.sRel[1],.SternocleidomastoidSternumC0NodeR.sRel[2]*-1};};
    
    //Splenius capitis nodes
    AnyRefNode SpleniusCapitisNodeR = {sRel = .Scale({-0.029+0.018,-0.037+0.005,0.064});}; //original
    AnyRefNode SpleniusCapitisNodeL = {sRel = {.SpleniusCapitisNodeR.sRel[0],.SpleniusCapitisNodeR.sRel[1],.SpleniusCapitisNodeR.sRel[2]*-1};};
    
    //Semispinalis capitis nodes
    AnyRefNode SemispinalisCapitisNodeR = {sRel = .Scale({-0.106+0.018,-0.004+0.005,0.028});};
    AnyRefNode SemispinalisCapitisNodeL = {sRel = {.SemispinalisCapitisNodeR.sRel[0],.SemispinalisCapitisNodeR.sRel[1],.SemispinalisCapitisNodeR.sRel[2]*-1};};
    
    //Longissimus capitis nodes
    AnyRefNode LongissimusCapitisNodeR = {sRel = .Scale({-0.027+0.018,-0.030+0.005,0.062});
      AnyDrawNodes DrwNode = {
        ScaleXYZ = {0.003,0.003,0.003};
        RGB = {0, 0, 1};
      };
    };
    AnyRefNode LongissimusCapitisNodeL = {sRel = {.LongissimusCapitisNodeR.sRel[0],.LongissimusCapitisNodeR.sRel[1],.LongissimusCapitisNodeR.sRel[2]*-1};};
    
    AnyRefNode drworientation = {
      sRel = .Scale({0.0, 0.0, 0.0});
      ARel = {{0, 0, -1}, {0, 1, 0}, {1, 0, 0}};
      
      AnyDrawSurf DrwSurf1 = {
        FileName = "..\Trunk\BonesSpine\Skull";
        RGB = ....ColorRef.Segments;
        Transparency = Main.DrawSettings.BonesTransparency.Skull;
        ScaleXYZ = {1, 1, 1};
        AnyFunTransform3D &Scale =..Scale; 
      };
      
    };  
    AnyRefNode  Right={};
    AnyRefNode Left={};    
  };
  
  AnySeg ThoraxSeg = {
    
    r0=..SegmentsLumbar.L1Seg.T12L1JntNode.sRel*..SegmentsLumbar.L1Seg.Axes0'+..SegmentsLumbar.L1Seg.r0-T12L1JntNode.sRel*Axes0';
    
    AnyFunTransform3D &Scale =..ScalingTrunk.Trunk.ScaleFunction;
    AnyVar MassS = ..Scaling.MassScaling.Trunk.MassScale;
    
    //Mass = 0.216*..BodyParRef.BodyMass; //Mass of Thorax concentrated in the CoM of the Thorax (Winter, 1990)
    
    AnyVar MassStandard = ..StandardParameters.Trunk.Mass;
    Mass = MassS*MassStandard;
    
    AnyVar UBHeight =  0.50; //Upperbody height
    AnyVar Radius = (Mass/(pi*UBHeight*1000))^0.5;
    AnyVar Ixx = 0.25*Mass*Radius^2 + 1/12*Mass*UBHeight^2;
    AnyVar Izz = Ixx;
    AnyVar Iyy = 0.5*Mass*Radius^2;
    
    Jii = {Ixx,Iyy,Izz};
    
    sCoM = Scale({0.060,0.303,0});
      JaboutCoMOnOff = On;
    //Incisura jungularis right and left
    //the nodes are used for attachment of ShoulderArm block
    AnyRefNode ij = {
      
      //This is the standard value for the ij it must be used in order to scale the model
      //since nodes are inserted into this node.
      //If the position of ij are to be adjusted it should be done by changing sRelStd 
      AnyVec3 sRelStd = {0.085,0.42,0.0};  
      
      sRel = .Scale(sRelStd);
      
      
      AnyVar angle = -5*pi/180;
      
      ARel= {
        {0,sin(angle), -cos(angle)},
        {0,cos(angle), sin(angle)},
        {1.000000, 0.000000, 0.000000}};      
      
      
      //ARel = {{0, 0, -1}, {0, 1, 0}, {1, 0, 0}};
    };
    
    AnyRefNode iji = {
      AnyVar angle = -5*pi/180;
      
      //This is the standard value for the ij it must be used in order to scale the model
      //since nodes are inserted into this node.
      //If the position of ij are to be adjusted it should be done by changing sRelS 
      AnyVec3 sRelStd = {0.085,0.42,0.0};  
      
      sRel = .Scale(sRelStd);
      
      ARel= {
        {0,sin(angle), -cos(angle)},
        {0,cos(angle), sin(angle)},
        {1.000000, 0.000000, 0.000000}};      
      
      //      ARel = {{0, 0, -1}, {0, 1, 0}, {1, 0, 0}};
    };
    
    AnyRefNode C1HatNode = {
      sRel=.Scale({0.026,0.6,0});
    };
    
    AnyRefNode T12L1JntNode = {sRel = .Scale({0.022,0.154,0.0});};
    
    AnyRefNode T1C7JntNode = {
      sRel = .Scale({0.011,0.461,0.0});
      AnyDrawNodes DrwNode = {
        ScaleXYZ = {0.003,0.003,0.003};
        RGB = {1, 0, 0};
      };
    };    
    
    AnyRefNode ForceVectorNode = {sRel = .Scale({-0.017,0.527,0.0});};
    
    // Ligament Nodes    
    AnyRefNode ALLNodeInferior = {sRel = .Scale({0.038,0.166,0});};
    
    AnyRefNode PLLNodeInferior = {sRel = .Scale({0.009,0.15,0});}; //on T12
    AnyRefNode PLLViaNode = {sRel = .Scale({0.004,0.164,0});}; //on T12
    
    AnyRefNode PLLNodeInferiorT11 = {sRel = .Scale({-0.003,0.18,0});}; //on T11
    
    AnyVec3 LSNodeT12_0 = {-0.030,0.128,0};
    AnyRefNode LSNodeT12 = {sRel = .Scale(.LSNodeT12_0);};
    AnyRefNode LSNodeT11 = {sRel = .Scale({-0.042,0.160,0});};
    
    AnyRefNode LINodeInferior = {sRel = .Scale({-0.020,0.126,0});}; //on T12
    
    //Lumped Hyoid
    AnyRefNode LumpedHyoidT1C0NodeR = {sRel = .Scale({0.06,0.420,0.018});};
    AnyRefNode LumpedHyoidT1C0NodeL = {sRel = {.LumpedHyoidT1C0NodeR.sRel[0],.LumpedHyoidT1C0NodeR.sRel[1],.LumpedHyoidT1C0NodeR.sRel[2]*-1};};
        
    //Longi Colli node
    AnyRefNode LongusColliT1NodeR = {sRel = .Scale({0.022,0.448,0.008});};
    AnyRefNode LongusColliT1NodeL = {sRel = {.LongusColliT1NodeR.sRel[0],.LongusColliT1NodeR.sRel[1],.LongusColliT1NodeR.sRel[2]*-1};};
    
    //Scalenus anterior nodes
    AnyRefNode ScalenusAnteriorT1C4NodeR = {sRel = .Scale({0.040,0.432,0.045});};
    AnyRefNode ScalenusAnteriorT1C4NodeL = {sRel = {.ScalenusAnteriorT1C4NodeR.sRel[0],.ScalenusAnteriorT1C4NodeR.sRel[1],.ScalenusAnteriorT1C4NodeR.sRel[2]*-1};};    
    
    //Scalenus medius nodes
    AnyRefNode ScalenusMediusT1C3NodeR = {sRel = .Scale({0.032,0.442,0.053});};
    AnyRefNode ScalenusMediusT1C3NodeL = {sRel = {.ScalenusMediusT1C3NodeR.sRel[0],.ScalenusMediusT1C3NodeR.sRel[1],.ScalenusMediusT1C3NodeR.sRel[2]*-1};};    
    
    //Scalenus Posterior nodes
    AnyRefNode ScalenusPosteriorT1C5NodeR = {sRel = .Scale({0.022,0.417,0.098});};
    AnyRefNode ScalenusPosteriorT1C5NodeL = {sRel = {.ScalenusPosteriorT1C5NodeR.sRel[0],.ScalenusPosteriorT1C5NodeR.sRel[1],.ScalenusPosteriorT1C5NodeR.sRel[2]*-1};};
    
    //Sternocleidomastoid
    AnyRefNode SternocleidomastoidSternumC0NodeR = {sRel = .Scale({0.06,0.420,0.018});};
    AnyRefNode SternocleidomastoidSternumC0NodeL = {sRel = {.SternocleidomastoidSternumC0NodeR.sRel[0],.SternocleidomastoidSternumC0NodeR.sRel[1],.SternocleidomastoidSternumC0NodeR.sRel[2]*-1};};

    AnyRefNode SternocleidomastoidClavicleC0NodeR = {sRel = .Scale({0.057,0.435,0.061});};
    AnyRefNode SternocleidomastoidClavicleC0NodeL = {sRel = {.SternocleidomastoidClavicleC0NodeR.sRel[0],.SternocleidomastoidClavicleC0NodeR.sRel[1],.SternocleidomastoidClavicleC0NodeR.sRel[2]*-1};};
    
    //Splenius capitis nodes
    AnyRefNode SpleniusCapitisT2C0NodeR = {sRel = .Scale({-0.038,0.440,0.0});};
    AnyRefNode SpleniusCapitisT2C0NodeL = {sRel = {.SpleniusCapitisT2C0NodeR.sRel[0],.SpleniusCapitisT2C0NodeR.sRel[1],.SpleniusCapitisT2C0NodeR.sRel[2]*-1};};
    
    //Splenius cervicis nodes
    AnyRefNode SpleniusCervicisNodeR = {sRel = .Scale({-0.055,0.392,0.0});};
    AnyRefNode SpleniusCervicisNodeL = {sRel = {.SpleniusCervicisNodeR.sRel[0],.SpleniusCervicisNodeR.sRel[1],.SpleniusCervicisNodeR.sRel[2]*-1};};
    
    //Semispinalis capitis nodes
    AnyRefNode SemispinalisCapitisT3C0NodeR = {sRel = .Scale({-0.034,0.427,0.033});};
    AnyRefNode SemispinalisCapitisT3C0NodeL = {sRel = {.SemispinalisCapitisT3C0NodeR.sRel[0],.SemispinalisCapitisT3C0NodeR.sRel[1],.SemispinalisCapitisT3C0NodeR.sRel[2]*-1};};
    
    //Semispinalis cervicis nodes
    AnyRefNode SemispinalisCervicisT1C2NodeR = {sRel = .Scale({-0.021,0.474,0.035});};
    AnyRefNode SemispinalisCervicisT1C2NodeL = {sRel = {.SemispinalisCervicisT1C2NodeR.sRel[0],.SemispinalisCervicisT1C2NodeR.sRel[1],.SemispinalisCervicisT1C2NodeR.sRel[2]*-1};};
    
    AnyRefNode SemispinalisCervicisT2C3NodeR = {sRel = .Scale({-0.024,0.451,0.031});};
    AnyRefNode SemispinalisCervicisT2C3NodeL = {sRel = {.SemispinalisCervicisT2C3NodeR.sRel[0],.SemispinalisCervicisT2C3NodeR.sRel[1],.SemispinalisCervicisT2C3NodeR.sRel[2]*-1};};
    
    AnyRefNode SemispinalisCervicisT3C4NodeR = {sRel = .Scale({-0.034,0.427,0.033});};
    AnyRefNode SemispinalisCervicisT3C4NodeL = {sRel = {.SemispinalisCervicisT3C4NodeR.sRel[0],.SemispinalisCervicisT3C4NodeR.sRel[1],.SemispinalisCervicisT3C4NodeR.sRel[2]*-1};};
    
    AnyRefNode SemispinalisCervicisT4C5NodeR = {sRel = .Scale({-0.043,0.403,0.033});};
    AnyRefNode SemispinalisCervicisT4C5NodeL = {sRel = {.SemispinalisCervicisT4C5NodeR.sRel[0],.SemispinalisCervicisT4C5NodeR.sRel[1],.SemispinalisCervicisT4C5NodeR.sRel[2]*-1};};
    
    AnyRefNode SemispinalisCervicisT5C6NodeR = {sRel = .Scale({-0.047,0.377,0.033});};
    AnyRefNode SemispinalisCervicisT5C6NodeL = {sRel = {.SemispinalisCervicisT5C6NodeR.sRel[0],.SemispinalisCervicisT5C6NodeR.sRel[1],.SemispinalisCervicisT5C6NodeR.sRel[2]*-1};};
    
    AnyRefNode SemispinalisCervicisT6C7NodeR = {sRel = .Scale({-0.054,0.348,0.033});};
    AnyRefNode SemispinalisCervicisT6C7NodeL = {sRel = {.SemispinalisCervicisT6C7NodeR.sRel[0],.SemispinalisCervicisT6C7NodeR.sRel[1],.SemispinalisCervicisT6C7NodeR.sRel[2]*-1};};
    
    //Longissimus capitis nodes
    AnyRefNode LongissimusCapitisT2C0NodeR = {sRel = .Scale({-0.024,0.451,0.031});};
    AnyRefNode LongissimusCapitisT2C0NodeL = {sRel = {.LongissimusCapitisT2C0NodeR.sRel[0],.LongissimusCapitisT2C0NodeR.sRel[1],.LongissimusCapitisT2C0NodeR.sRel[2]*-1};};
    
    //Longissimus cervicis nodes
    AnyRefNode LongissimusCervicisT2NodeR = {sRel = .Scale({-0.024,0.451,0.031});};
    AnyRefNode LongissimusCervicisT2NodeL = {sRel = {.LongissimusCervicisT2NodeR.sRel[0],.LongissimusCervicisT2NodeR.sRel[1],.LongissimusCervicisT2NodeR.sRel[2]*-1};};

    //Multifidus cervicis nodes
    AnyRefNode MultifidusCervicisT1C4NodeR = {sRel = .Scale({-0.021,0.474,0.035});};
    AnyRefNode MultifidusCervicisT1C4NodeL = {sRel = {.MultifidusCervicisT1C4NodeR.sRel[0],.MultifidusCervicisT1C4NodeR.sRel[1],.MultifidusCervicisT1C4NodeR.sRel[2]*-1};};

    AnyRefNode MultifidusCervicisT1C5NodeR = {sRel = .Scale({-0.021,0.474,0.035});};
    AnyRefNode MultifidusCervicisT1C5NodeL = {sRel = {.MultifidusCervicisT1C5NodeR.sRel[0],.MultifidusCervicisT1C5NodeR.sRel[1],.MultifidusCervicisT1C5NodeR.sRel[2]*-1};};

    AnyRefNode MultifidusCervicisT2C5NodeR = {sRel = .Scale({-0.024,0.451,0.031});};
    AnyRefNode MultifidusCervicisT2C5NodeL = {sRel = {.MultifidusCervicisT2C5NodeR.sRel[0],.MultifidusCervicisT2C5NodeR.sRel[1],.MultifidusCervicisT2C5NodeR.sRel[2]*-1};};

    AnyRefNode MultifidusCervicisT2C6NodeR = {sRel = .Scale({-0.024,0.451,0.031});};
    AnyRefNode MultifidusCervicisT2C6NodeL = {sRel = {.MultifidusCervicisT2C6NodeR.sRel[0],.MultifidusCervicisT2C6NodeR.sRel[1],.MultifidusCervicisT2C6NodeR.sRel[2]*-1};};

    AnyRefNode MultifidusCervicisT3C6NodeR = {sRel = .Scale({-0.034,0.427,0.033});};
    AnyRefNode MultifidusCervicisT3C6NodeL = {sRel = {.MultifidusCervicisT3C6NodeR.sRel[0],.MultifidusCervicisT3C6NodeR.sRel[1],.MultifidusCervicisT3C6NodeR.sRel[2]*-1};};

    AnyRefNode MultifidusCervicisT3C7NodeR = {sRel = .Scale({-0.034,0.427,0.033});};
    AnyRefNode MultifidusCervicisT3C7NodeL = {sRel = {.MultifidusCervicisT3C7NodeR.sRel[0],.MultifidusCervicisT3C7NodeR.sRel[1],.MultifidusCervicisT3C7NodeR.sRel[2]*-1};};

    AnyRefNode MultifidusCervicisT4C7NodeR = {sRel = .Scale({-0.043,0.403,0.033});};
    AnyRefNode MultifidusCervicisT4C7NodeL = {sRel = {.MultifidusCervicisT4C7NodeR.sRel[0],.MultifidusCervicisT4C7NodeR.sRel[1],.MultifidusCervicisT4C7NodeR.sRel[2]*-1};};
    
    // Erector Spinae Nodes
    
    // Define static AnyVecs for the the coordinates of the upper attachment points of the ES
    // The lower attachment points are defined in PelvisSeg.any
    AnyVec3 ILptC5SIPSNodeR0 = {-0.049,0.357,0.060};
    AnyRefNode ILptC5SIPSNodeR = {sRel = .Scale(.ILptC5SIPSNodeR0);};
    AnyRefNode ILptC5SIPSNodeL = {sRel = {.ILptC5SIPSNodeR.sRel[0],.ILptC5SIPSNodeR.sRel[1], -.ILptC5SIPSNodeR.sRel[2]};};
    
    AnyVar ILptC5SIPSZ = (ILptC5SIPSNodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC5SIPSNodeR0[2])/(ILptC5SIPSNodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC5SIPSNodeR0[1]);
    AnyRefNode ILptC5SIPSVia1NodeR = {sRel = .Scale({-0.050,0.336,(.ILptC5SIPSNodeR0[2] - .ILptC5SIPSZ*(.ILptC5SIPSNodeR0[1] - 0.336))});};
    AnyRefNode ILptC5SIPSVia1NodeL = {sRel = {.ILptC5SIPSVia1NodeR.sRel[0],.ILptC5SIPSVia1NodeR.sRel[1], -.ILptC5SIPSVia1NodeR.sRel[2]};};
    
    AnyRefNode ILptC5SIPSVia2NodeR = {sRel = .Scale({-0.052,0.317,(.ILptC5SIPSNodeR0[2] - .ILptC5SIPSZ*(.ILptC5SIPSNodeR0[1] - 0.317))});};
    AnyRefNode ILptC5SIPSVia2NodeL = {sRel = {.ILptC5SIPSVia2NodeR.sRel[0],.ILptC5SIPSVia2NodeR.sRel[1], -.ILptC5SIPSVia2NodeR.sRel[2]};};
    
    AnyRefNode ILptC5SIPSVia3NodeR = {sRel = .Scale({-0.053,0.283,(.ILptC5SIPSNodeR0[2] - .ILptC5SIPSZ*(.ILptC5SIPSNodeR0[1] - 0.283))});};
    AnyRefNode ILptC5SIPSVia3NodeL = {sRel = {.ILptC5SIPSVia3NodeR.sRel[0],.ILptC5SIPSVia3NodeR.sRel[1], -.ILptC5SIPSVia3NodeR.sRel[2]};};
    
    AnyRefNode ILptC5SIPSVia4NodeR = {sRel = .Scale({-0.053,0.252,(.ILptC5SIPSNodeR0[2] - .ILptC5SIPSZ*(.ILptC5SIPSNodeR0[1] - 0.252))});};
    AnyRefNode ILptC5SIPSVia4NodeL = {sRel = {.ILptC5SIPSVia4NodeR.sRel[0],.ILptC5SIPSVia4NodeR.sRel[1], -.ILptC5SIPSVia4NodeR.sRel[2]};};
    
    AnyRefNode ILptC5SIPSVia5NodeR = {sRel = .Scale({-0.051,0.223,(.ILptC5SIPSNodeR0[2] - .ILptC5SIPSZ*(.ILptC5SIPSNodeR0[1] - 0.223))});};
    AnyRefNode ILptC5SIPSVia5NodeL = {sRel = {.ILptC5SIPSVia5NodeR.sRel[0],.ILptC5SIPSVia5NodeR.sRel[1], -.ILptC5SIPSVia5NodeR.sRel[2]};};
    
    AnyRefNode ILptC5SIPSVia6NodeR = {sRel = .Scale({.LSNodeT12_0[0]+0.005,.LSNodeT12_0[1],(.ILptC5SIPSNodeR0[2] - .ILptC5SIPSZ*(.ILptC5SIPSNodeR0[1] - .LSNodeT12_0[1]))});};
    AnyRefNode ILptC5SIPSVia6NodeL = {sRel = {.ILptC5SIPSVia6NodeR.sRel[0],.ILptC5SIPSVia6NodeR.sRel[1],.ILptC5SIPSVia6NodeR.sRel[2]*-1};};
    
  
    
    AnyVec3 ILptC6SIPSNodeR0 = {-0.050,0.332,0.060};
    AnyRefNode ILptC6SIPSNodeR = {sRel = .Scale(.ILptC6SIPSNodeR0);};    
    AnyRefNode ILptC6SIPSNodeL = {sRel = {.ILptC6SIPSNodeR.sRel[0],.ILptC6SIPSNodeR.sRel[1], -.ILptC6SIPSNodeR.sRel[2]};};
    
    AnyVar ILptC6SIPSZ = (ILptC6SIPSNodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC6SIPSNodeR0[2])/(ILptC6SIPSNodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC6SIPSNodeR0[1]);
    AnyRefNode ILptC6SIPSVia1NodeR = {sRel = .Scale({-0.052,0.315,(.ILptC6SIPSNodeR0[2] - .ILptC6SIPSZ*(.ILptC6SIPSNodeR0[1] - 0.315))});};
    AnyRefNode ILptC6SIPSVia1NodeL = {sRel = {.ILptC6SIPSVia1NodeR.sRel[0],.ILptC6SIPSVia1NodeR.sRel[1], -.ILptC6SIPSVia1NodeR.sRel[2]};};
    
    AnyRefNode ILptC6SIPSVia2NodeR = {sRel = .Scale({-0.054,0.283,(.ILptC6SIPSNodeR0[2] - .ILptC6SIPSZ*(.ILptC6SIPSNodeR0[1] - 0.283))});};
    AnyRefNode ILptC6SIPSVia2NodeL = {sRel = {.ILptC6SIPSVia2NodeR.sRel[0],.ILptC6SIPSVia2NodeR.sRel[1], -.ILptC6SIPSVia2NodeR.sRel[2]};};
    
    AnyRefNode ILptC6SIPSVia3NodeR = {sRel = .Scale({-0.053,0.250,(.ILptC6SIPSNodeR0[2] - .ILptC6SIPSZ*(.ILptC6SIPSNodeR0[1] - 0.250))});};
    AnyRefNode ILptC6SIPSVia3NodeL = {sRel = {.ILptC6SIPSVia3NodeR.sRel[0],.ILptC6SIPSVia3NodeR.sRel[1], -.ILptC6SIPSVia3NodeR.sRel[2]};};
    
    AnyRefNode ILptC6SIPSVia4NodeR = {sRel = .Scale({-0.051,0.222,(.ILptC6SIPSNodeR0[2] - .ILptC6SIPSZ*(.ILptC6SIPSNodeR0[1] - 0.222))});};
    AnyRefNode ILptC6SIPSVia4NodeL = {sRel = {.ILptC6SIPSVia4NodeR.sRel[0],.ILptC6SIPSVia4NodeR.sRel[1], -.ILptC6SIPSVia4NodeR.sRel[2]};};
    
    AnyRefNode ILptC6SIPSVia5NodeR = {sRel = .Scale({.LSNodeT12_0[0]+0.005,.LSNodeT12_0[1],(.ILptC6SIPSNodeR0[2] - .ILptC6SIPSZ*(.ILptC6SIPSNodeR0[1] - .LSNodeT12_0[1]))});};
    AnyRefNode ILptC6SIPSVia5NodeL = {sRel = {.ILptC6SIPSVia5NodeR.sRel[0],.ILptC6SIPSVia5NodeR.sRel[1], -.ILptC6SIPSVia5NodeR.sRel[2]};};
    
    
    
    AnyVec3 ILptC7CINodeR0 = {-0.052,0.310,0.060};
    AnyRefNode ILptC7CINodeR = {sRel = .Scale(.ILptC7CINodeR0);};
    AnyRefNode ILptC7CINodeL = {sRel = {.ILptC7CINodeR.sRel[0],.ILptC7CINodeR.sRel[1], -.ILptC7CINodeR.sRel[2]};};
    
    AnyVar ILptC7CIZ = (ILptC7CINodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC7CINodeR0[2])/(ILptC7CINodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC7CINodeR0[1]);
    AnyRefNode ILptC7CIVia1NodeR = {sRel = .Scale({-0.054,0.282,(.ILptC7CINodeR0[2] - .ILptC7CIZ*(.ILptC7CINodeR0[1] - 0.282))});};
    AnyRefNode ILptC7CIVia1NodeL = {sRel = {.ILptC7CIVia1NodeR.sRel[0],.ILptC7CIVia1NodeR.sRel[1], -.ILptC7CIVia1NodeR.sRel[2]};};
    
    AnyRefNode ILptC7CIVia2NodeR = {sRel = .Scale({-0.053,0.249,(.ILptC7CINodeR0[2] - .ILptC7CIZ*(.ILptC7CINodeR0[1] - 0.249))});};
    AnyRefNode ILptC7CIVia2NodeL = {sRel = {.ILptC7CIVia2NodeR.sRel[0],.ILptC7CIVia2NodeR.sRel[1], -.ILptC7CIVia2NodeR.sRel[2]};};
    
    AnyRefNode ILptC7CIVia3NodeR = {sRel = .Scale({-0.051,0.220,(.ILptC7CINodeR0[2] - .ILptC7CIZ*(.ILptC7CINodeR0[1] - 0.220))});};
    AnyRefNode ILptC7CIVia3NodeL = {sRel = {.ILptC7CIVia3NodeR.sRel[0],.ILptC7CIVia3NodeR.sRel[1], -.ILptC7CIVia3NodeR.sRel[2]};};
    
    AnyRefNode ILptC7CIVia4NodeR = {sRel = .Scale({.LSNodeT12_0[0]+0.005,.LSNodeT12_0[1],(.ILptC7CINodeR0[2] - .ILptC7CIZ*(.ILptC7CINodeR0[1] - .LSNodeT12_0[1]))});};
    AnyRefNode ILptC7CIVia4NodeL = {sRel = {.ILptC7CIVia4NodeR.sRel[0],.ILptC7CIVia4NodeR.sRel[1], -.ILptC7CIVia4NodeR.sRel[2]};};
    
    
    AnyVec3 ILptC8CINodeR0 = {-0.054,0.276,0.060};
    AnyRefNode ILptC8CINodeR = {sRel = .Scale(.ILptC8CINodeR0);};
    AnyRefNode ILptC8CINodeL = {sRel = {.ILptC8CINodeR.sRel[0],.ILptC8CINodeR.sRel[1], -.ILptC8CINodeR.sRel[2]};};
    
    AnyVar ILptC8CIZ = (ILptC8CINodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC8CINodeR0[2])/(ILptC8CINodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC8CINodeR0[1]);
    AnyRefNode ILptC8CIVia1NodeR = {sRel = .Scale({-0.053,0.245,(.ILptC8CINodeR0[2] - .ILptC8CIZ*(.ILptC8CINodeR0[1] - 0.245))});};
    AnyRefNode ILptC8CIVia1NodeL = {sRel = {.ILptC8CIVia1NodeR.sRel[0],.ILptC8CIVia1NodeR.sRel[1], -.ILptC8CIVia1NodeR.sRel[2]};};
    
    AnyRefNode ILptC8CIVia2NodeR = {sRel = .Scale({-0.051,0.218,(.ILptC8CINodeR0[2] - .ILptC8CIZ*(.ILptC8CINodeR0[1] - 0.218))});};
    AnyRefNode ILptC8CIVia2NodeL = {sRel = {.ILptC8CIVia2NodeR.sRel[0],.ILptC8CIVia2NodeR.sRel[1], -.ILptC8CIVia2NodeR.sRel[2]};};
    
    AnyRefNode ILptC8CIVia3NodeR = {sRel = .Scale({.LSNodeT12_0[0]+0.005,.LSNodeT12_0[1],(.ILptC8CINodeR0[2] - .ILptC8CIZ*(.ILptC8CINodeR0[1] - .LSNodeT12_0[1]))});};
    AnyRefNode ILptC8CIVia3NodeL = {sRel = {.ILptC8CIVia3NodeR.sRel[0],.ILptC8CIVia3NodeR.sRel[1],.ILptC8CIVia3NodeR.sRel[2]*-1};};
    
    
    AnyVec3 ILptC9CINodeR0 = {-0.053,0.238,0.060};
    AnyRefNode ILptC9CINodeR = {sRel = .Scale(.ILptC9CINodeR0);};
    AnyRefNode ILptC9CINodeL = {sRel = {.ILptC9CINodeR.sRel[0],.ILptC9CINodeR.sRel[1],.ILptC9CINodeR.sRel[2]*-1};};
    
    AnyVar ILptC9CIZ = (ILptC9CINodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC9CINodeR0[2])/(ILptC9CINodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC9CINodeR0[1]);
    AnyRefNode ILptC9CIVia1NodeR = {sRel = .Scale({-0.050,0.216,(.ILptC9CINodeR0[2] - .ILptC9CIZ*(.ILptC9CINodeR0[1] - 0.216))});};
    AnyRefNode ILptC9CIVia1NodeL = {sRel = {.ILptC9CIVia1NodeR.sRel[0],.ILptC9CIVia1NodeR.sRel[1], -.ILptC9CIVia1NodeR.sRel[2]};};
    
    AnyRefNode ILptC9CIVia2NodeR = {sRel = .Scale({.LSNodeT12_0[0]+0.005,.LSNodeT12_0[1],(.ILptC9CINodeR0[2] - .ILptC9CIZ*(.ILptC9CINodeR0[1] - .LSNodeT12_0[1]))});};
    AnyRefNode ILptC9CIVia2NodeL = {sRel = {.ILptC9CIVia2NodeR.sRel[0],.ILptC9CIVia2NodeR.sRel[1], -.ILptC9CIVia2NodeR.sRel[2]};};
    
    
    AnyVec3 ILptC10CINodeR0 = {-0.050,0.207,0.060};
    AnyRefNode ILptC10CINodeR = {sRel = .Scale(.ILptC10CINodeR0);};
    AnyRefNode ILptC10CINodeL = {sRel = {.ILptC10CINodeR.sRel[0],.ILptC10CINodeR.sRel[1], -.ILptC10CINodeR.sRel[2]};};
    
    AnyVar ILptC10CIZ = (ILptC10CINodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC10CINodeR0[2])/(ILptC10CINodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC10CINodeR0[1]);
    AnyRefNode ILptC10CIVia1NodeR = {sRel = .Scale({.LSNodeT12_0[0]+0.005,.LSNodeT12_0[1],(.ILptC10CINodeR0[2] - .ILptC10CIZ*(.ILptC10CINodeR0[1] - .LSNodeT12_0[1]))});};
    AnyRefNode ILptC10CIVia1NodeL = {sRel = {.ILptC10CIVia1NodeR.sRel[0],.ILptC10CIVia1NodeR.sRel[1], -.ILptC10CIVia1NodeR.sRel[2]};};
    
    
    AnyVec3 ILptC11CINodeR0 = {-0.035,0.177,0.060};
    AnyRefNode ILptC11CINodeR = {sRel = .Scale(.ILptC11CINodeR0);};
    AnyRefNode ILptC11CINodeL = {sRel = {.ILptC11CINodeR.sRel[0],.ILptC11CINodeR.sRel[1], -.ILptC11CINodeR.sRel[2]};};
    
    AnyVar ILptC11CIZ = (ILptC11CINodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC11CINodeR0[2])/(ILptC11CINodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC11CINodeR0[1]);
    
    
    AnyVec3 ILptC12CINodeR0 = {-0.009,0.146,0.060};
    AnyRefNode ILptC12CINodeR = {sRel = .Scale(.ILptC12CINodeR0);};
    AnyRefNode ILptC12CINodeL = {sRel = {.ILptC12CINodeR.sRel[0],.ILptC12CINodeR.sRel[1], -.ILptC12CINodeR.sRel[2]};};
    
    AnyVar ILptC12CIZ = (ILptC12CINodeR0[2]-..SegmentsLumbar.PelvisSeg.ILptC12CINodeR0[2])/(ILptC12CINodeR0[1]-..SegmentsLumbar.PelvisSeg.ILptC12CINodeR0[1]);
    
    
    AnyVec3 LTptT1L1NodeR0 = {-0.024,0.465,0.040};
    AnyRefNode LTptT1L1NodeR = {sRel = .Scale(.LTptT1L1NodeR0);};
    AnyRefNode LTptT1L1NodeL = {sRel = {.LTptT1L1NodeR.sRel[0],.LTptT1L1NodeR.sRel[1], -.LTptT1L1NodeR.sRel[2]};};
    
    AnyVar LTptT1L1Z = (LTptT1L1NodeR0[2]-..SegmentsLumbar.L1Seg.LTptT1L1NodeR0[2])/(LTptT1L1NodeR0[1]-..SegmentsLumbar.L1Seg.LTptT1L1NodeR0[1]);
    AnyRefNode LTptT1L1Via1NodeR = {sRel = .Scale({-0.022,0.442,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.442))});};
    AnyRefNode LTptT1L1Via1NodeL = {sRel = {.LTptT1L1Via1NodeR.sRel[0],.LTptT1L1Via1NodeR.sRel[1], -.LTptT1L1Via1NodeR.sRel[2]};};    
    
    AnyRefNode LTptT1L1Via2NodeR = {sRel = .Scale({-0.032,0.420,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.420))});};
    AnyRefNode LTptT1L1Via2NodeL = {sRel = {.LTptT1L1Via2NodeR.sRel[0],.LTptT1L1Via2NodeR.sRel[1], -.LTptT1L1Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT1L1Via3NodeR = {sRel = .Scale({-0.045,0.402,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.402))});};
    AnyRefNode LTptT1L1Via3NodeL = {sRel = {.LTptT1L1Via3NodeR.sRel[0],.LTptT1L1Via3NodeR.sRel[1], -.LTptT1L1Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT1L1Via4NodeR = {sRel = .Scale({-0.050,0.376,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.376))});};
    AnyRefNode LTptT1L1Via4NodeL = {sRel = {.LTptT1L1Via4NodeR.sRel[0],.LTptT1L1Via4NodeR.sRel[1], -.LTptT1L1Via4NodeR.sRel[2]};};
    
    AnyRefNode LTptT1L1Via5NodeR = {sRel = .Scale({-0.057,0.347,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.347))});};
    AnyRefNode LTptT1L1Via5NodeL = {sRel = {.LTptT1L1Via5NodeR.sRel[0],.LTptT1L1Via5NodeR.sRel[1], -.LTptT1L1Via5NodeR.sRel[2]};};
    
    AnyRefNode LTptT1L1Via6NodeR = {sRel = .Scale({-0.054,0.317,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.317))});};
    AnyRefNode LTptT1L1Via6NodeL = {sRel = {.LTptT1L1Via6NodeR.sRel[0],.LTptT1L1Via6NodeR.sRel[1], -.LTptT1L1Via6NodeR.sRel[2]};};    
    
    AnyRefNode LTptT1L1Via7NodeR = {sRel = .Scale({-0.051,0.288,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.288))});};
    AnyRefNode LTptT1L1Via7NodeL = {sRel = {.LTptT1L1Via7NodeR.sRel[0],.LTptT1L1Via7NodeR.sRel[1], -.LTptT1L1Via7NodeR.sRel[2]};};    
    
    AnyRefNode LTptT1L1Via8NodeR = {sRel = .Scale({-0.045,0.263,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.263))});};
    AnyRefNode LTptT1L1Via8NodeL = {sRel = {.LTptT1L1Via8NodeR.sRel[0],.LTptT1L1Via8NodeR.sRel[1], -.LTptT1L1Via8NodeR.sRel[2]};};    
    
    AnyRefNode LTptT1L1Via9NodeR = {sRel = .Scale({-0.035,0.223,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.223))});};
    AnyRefNode LTptT1L1Via9NodeL = {sRel = {.LTptT1L1Via9NodeR.sRel[0],.LTptT1L1Via9NodeR.sRel[1], -.LTptT1L1Via9NodeR.sRel[2]};};
    
    AnyRefNode LTptT1L1Via10NodeR = {sRel = .Scale({-0.028,0.186,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.186))});};
    AnyRefNode LTptT1L1Via10NodeL = {sRel = {.LTptT1L1Via10NodeR.sRel[0],.LTptT1L1Via10NodeR.sRel[1], -.LTptT1L1Via10NodeR.sRel[2]};};
    
    AnyRefNode LTptT1L1Via11NodeR = {sRel = .Scale({-0.020,0.158,(.LTptT1L1NodeR0[2] - .LTptT1L1Z*(.LTptT1L1NodeR0[1] - 0.158))});};
    AnyRefNode LTptT1L1Via11NodeL = {sRel = {.LTptT1L1Via11NodeR.sRel[0],.LTptT1L1Via11NodeR.sRel[1], -.LTptT1L1Via11NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT2L2NodeR0 = {-0.022,0.442,0.040};
    AnyRefNode LTptT2L2NodeR = {sRel = .Scale(.LTptT2L2NodeR0);};
    AnyRefNode LTptT2L2NodeL = {sRel = {.LTptT2L2NodeR.sRel[0],.LTptT2L2NodeR.sRel[1], -.LTptT2L2NodeR.sRel[2]};};
    
    AnyVar LTptT2L2Z = (LTptT2L2NodeR0[2]-..SegmentsLumbar.L2Seg.LTptT2L2NodeR0[2])/(LTptT2L2NodeR0[1]-..SegmentsLumbar.L2Seg.LTptT2L2NodeR0[1]);
    
    AnyRefNode LTptT2L2Via1NodeR = {sRel = .Scale({-0.035,0.421,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.421))});};
    AnyRefNode LTptT2L2Via1NodeL = {sRel = {.LTptT2L2Via1NodeR.sRel[0],.LTptT2L2Via1NodeR.sRel[1], -.LTptT2L2Via1NodeR.sRel[2]};};   
    
    AnyRefNode LTptT2L2Via2NodeR = {sRel = .Scale({-0.044,0.393,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.393))});};
    AnyRefNode LTptT2L2Via2NodeL = {sRel = {.LTptT2L2Via2NodeR.sRel[0],.LTptT2L2Via2NodeR.sRel[1], -.LTptT2L2Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via3NodeR = {sRel = .Scale({-0.050,0.376,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.376))});};
    AnyRefNode LTptT2L2Via3NodeL = {sRel = {.LTptT2L2Via3NodeR.sRel[0],.LTptT2L2Via3NodeR.sRel[1], -.LTptT2L2Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via4NodeR = {sRel = .Scale({-0.058,0.345,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.345))});};
    AnyRefNode LTptT2L2Via4NodeL = {sRel = {.LTptT2L2Via4NodeR.sRel[0],.LTptT2L2Via4NodeR.sRel[1], -.LTptT2L2Via4NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via5NodeR = {sRel = .Scale({-0.057,0.318,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.318))});};
    AnyRefNode LTptT2L2Via5NodeL = {sRel = {.LTptT2L2Via5NodeR.sRel[0],.LTptT2L2Via5NodeR.sRel[1], -.LTptT2L2Via5NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via6NodeR = {sRel = .Scale({-0.053,0.288,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.288))});};
    AnyRefNode LTptT2L2Via6NodeL = {sRel = {.LTptT2L2Via6NodeR.sRel[0],.LTptT2L2Via6NodeR.sRel[1], -.LTptT2L2Via6NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via7NodeR = {sRel = .Scale({-0.047,0.264,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.264))});};
    AnyRefNode LTptT2L2Via7NodeL = {sRel = {.LTptT2L2Via7NodeR.sRel[0],.LTptT2L2Via7NodeR.sRel[1], -.LTptT2L2Via7NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via8NodeR = {sRel = .Scale({-0.042,0.228,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.228))});};
    AnyRefNode LTptT2L2Via8NodeL = {sRel = {.LTptT2L2Via8NodeR.sRel[0],.LTptT2L2Via8NodeR.sRel[1], -.LTptT2L2Via8NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via9NodeR = {sRel = .Scale({-0.026,0.190,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.190))});};
    AnyRefNode LTptT2L2Via9NodeL = {sRel = {.LTptT2L2Via9NodeR.sRel[0],.LTptT2L2Via9NodeR.sRel[1], -.LTptT2L2Via9NodeR.sRel[2]};};
    
    AnyRefNode LTptT2L2Via10NodeR = {sRel = .Scale({-0.017,0.155,(.LTptT2L2NodeR0[2] - .LTptT2L2Z*(.LTptT2L2NodeR0[1] - 0.155))});};
    AnyRefNode LTptT2L2Via10NodeL = {sRel = {.LTptT2L2Via10NodeR.sRel[0],.LTptT2L2Via10NodeR.sRel[1], -.LTptT2L2Via10NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT3L3NodeR0 = {-0.035,0.418,0.040};
    AnyRefNode LTptT3L3NodeR = {sRel = .Scale(.LTptT3L3NodeR0);};
    AnyRefNode LTptT3L3NodeL = {sRel = {.LTptT3L3NodeR.sRel[0],.LTptT3L3NodeR.sRel[1], -.LTptT3L3NodeR.sRel[2]};};
    
    AnyVar LTptT3L3Z = (LTptT3L3NodeR0[2]-..SegmentsLumbar.L3Seg.LTptT3L3NodeR0[2])/(LTptT3L3NodeR0[1]-..SegmentsLumbar.L3Seg.LTptT3L3NodeR0[1]);
    
    AnyRefNode LTptT3L3Via1NodeR = {sRel = .Scale({-0.041,0.394,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.394))});};
    AnyRefNode LTptT3L3Via1NodeL = {sRel = {.LTptT3L3Via1NodeR.sRel[0],.LTptT3L3Via1NodeR.sRel[1], -.LTptT3L3Via1NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via2NodeR = {sRel = .Scale({-0.049,0.372,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.372))});};
    AnyRefNode LTptT3L3Via2NodeL = {sRel = {.LTptT3L3Via2NodeR.sRel[0],.LTptT3L3Via2NodeR.sRel[1], -.LTptT3L3Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via3NodeR = {sRel = .Scale({-0.057,0.346,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.346))});};
    AnyRefNode LTptT3L3Via3NodeL = {sRel = {.LTptT3L3Via3NodeR.sRel[0],.LTptT3L3Via3NodeR.sRel[1], -.LTptT3L3Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via4NodeR = {sRel = .Scale({-0.057,0.318,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.318))});};
    AnyRefNode LTptT3L3Via4NodeL = {sRel = {.LTptT3L3Via4NodeR.sRel[0],.LTptT3L3Via4NodeR.sRel[1], -.LTptT3L3Via4NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via5NodeR = {sRel = .Scale({-0.056,0.289,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.289))});};
    AnyRefNode LTptT3L3Via5NodeL = {sRel = {.LTptT3L3Via5NodeR.sRel[0],.LTptT3L3Via5NodeR.sRel[1], -.LTptT3L3Via5NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via6NodeR = {sRel = .Scale({-0.050,0.263,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.263))});};
    AnyRefNode LTptT3L3Via6NodeL = {sRel = {.LTptT3L3Via6NodeR.sRel[0],.LTptT3L3Via6NodeR.sRel[1], -.LTptT3L3Via6NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via7NodeR = {sRel = .Scale({-0.042,0.233,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.233))});};
    AnyRefNode LTptT3L3Via7NodeL = {sRel = {.LTptT3L3Via7NodeR.sRel[0],.LTptT3L3Via7NodeR.sRel[1], -.LTptT3L3Via7NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via8NodeR = {sRel = .Scale({-0.027,0.189,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.189))});};
    AnyRefNode LTptT3L3Via8NodeL = {sRel = {.LTptT3L3Via8NodeR.sRel[0],.LTptT3L3Via8NodeR.sRel[1], -.LTptT3L3Via8NodeR.sRel[2]};};
    
    AnyRefNode LTptT3L3Via9NodeR = {sRel = .Scale({-0.016,0.150,(.LTptT3L3NodeR0[2] - .LTptT3L3Z*(.LTptT3L3NodeR0[1] - 0.150))});};
    AnyRefNode LTptT3L3Via9NodeL = {sRel = {.LTptT3L3Via9NodeR.sRel[0],.LTptT3L3Via9NodeR.sRel[1], -.LTptT3L3Via9NodeR.sRel[2]};};
    
    AnyVec3 LTptT4L4NodeR0 = {-0.041,0.390,0.040};
    AnyRefNode LTptT4L4NodeR = {sRel = .Scale(.LTptT4L4NodeR0);};
    AnyRefNode LTptT4L4NodeL = {sRel = {.LTptT4L4NodeR.sRel[0],.LTptT4L4NodeR.sRel[1], -.LTptT4L4NodeR.sRel[2]};};
    
    AnyVar LTptT4L4Z = (LTptT4L4NodeR0[2]-..SegmentsLumbar.L4Seg.LTptT4L4NodeR0[2])/(LTptT4L4NodeR0[1]-..SegmentsLumbar.L4Seg.LTptT4L4NodeR0[1]);
    
    AnyRefNode LTptT4L4Via1NodeR = {sRel = .Scale({-0.045,0.366,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.366))});};
    AnyRefNode LTptT4L4Via1NodeL = {sRel = {.LTptT4L4Via1NodeR.sRel[0],.LTptT4L4Via1NodeR.sRel[1], -.LTptT4L4Via1NodeR.sRel[2]};};
    
    AnyRefNode LTptT4L4Via2NodeR = {sRel = .Scale({-0.051,0.347,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.347))});};
    AnyRefNode LTptT4L4Via2NodeL = {sRel = {.LTptT4L4Via2NodeR.sRel[0],.LTptT4L4Via2NodeR.sRel[1], -.LTptT4L4Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT4L4Via3NodeR = {sRel = .Scale({-0.057,0.318,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.318))});};
    AnyRefNode LTptT4L4Via3NodeL = {sRel = {.LTptT4L4Via3NodeR.sRel[0],.LTptT4L4Via3NodeR.sRel[1], -.LTptT4L4Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT4L4Via4NodeR = {sRel = .Scale({-0.058,0.289,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.289))});};
    AnyRefNode LTptT4L4Via4NodeL = {sRel = {.LTptT4L4Via4NodeR.sRel[0],.LTptT4L4Via4NodeR.sRel[1], -.LTptT4L4Via4NodeR.sRel[2]};};
    
    AnyRefNode LTptT4L4Via5NodeR = {sRel = .Scale({-0.053,0.267,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.267))});};
    AnyRefNode LTptT4L4Via5NodeL = {sRel = {.LTptT4L4Via5NodeR.sRel[0],.LTptT4L4Via5NodeR.sRel[1], -.LTptT4L4Via5NodeR.sRel[2]};};
    
    AnyRefNode LTptT4L4Via6NodeR = {sRel = .Scale({-0.044,0.234,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.234))});};
    AnyRefNode LTptT4L4Via6NodeL = {sRel = {.LTptT4L4Via6NodeR.sRel[0],.LTptT4L4Via6NodeR.sRel[1], -.LTptT4L4Via6NodeR.sRel[2]};};
    
    AnyRefNode LTptT4L4Via7NodeR = {sRel = .Scale({-0.033,0.197,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.197))});};
    AnyRefNode LTptT4L4Via7NodeL = {sRel = {.LTptT4L4Via7NodeR.sRel[0],.LTptT4L4Via7NodeR.sRel[1], -.LTptT4L4Via7NodeR.sRel[2]};};
    
    AnyRefNode LTptT4L4Via8NodeR = {sRel = .Scale({-0.017,0.156,(.LTptT4L4NodeR0[2] - .LTptT4L4Z*(.LTptT4L4NodeR0[1] - 0.156))});};
    AnyRefNode LTptT4L4Via8NodeL = {sRel = {.LTptT4L4Via8NodeR.sRel[0],.LTptT4L4Via8NodeR.sRel[1], -.LTptT4L4Via8NodeR.sRel[2]};};    
    
    
    AnyVec3 LTptT5L5NodeR0 = {-0.044,0.360,0.040};
    AnyRefNode LTptT5L5NodeR = {sRel = .Scale(.LTptT5L5NodeR0);};
    AnyRefNode LTptT5L5NodeL = {sRel = {.LTptT5L5NodeR.sRel[0],.LTptT5L5NodeR.sRel[1], -.LTptT5L5NodeR.sRel[2]};};
    
    AnyVar LTptT5L5Z = (LTptT5L5NodeR0[2]-..SegmentsLumbar.L5Seg.LTptT5L5NodeR0[2])/(LTptT5L5NodeR0[1]-..SegmentsLumbar.L5Seg.LTptT5L5NodeR0[1]);
    
    AnyRefNode LTptT5L5Via1NodeR = {sRel = .Scale({-0.047,0.343,(.LTptT5L5NodeR0[2] - .LTptT5L5Z*(.LTptT5L5NodeR0[1] - 0.343))});};
    AnyRefNode LTptT5L5Via1NodeL = {sRel = {.LTptT5L5Via1NodeR.sRel[0],.LTptT5L5Via1NodeR.sRel[1], -.LTptT5L5Via1NodeR.sRel[2]};};
    
    AnyRefNode LTptT5L5Via2NodeR = {sRel = .Scale({-0.054,0.317,(.LTptT5L5NodeR0[2] - .LTptT5L5Z*(.LTptT5L5NodeR0[1] - 0.317))});};
    AnyRefNode LTptT5L5Via2NodeL = {sRel = {.LTptT5L5Via2NodeR.sRel[0],.LTptT5L5Via2NodeR.sRel[1], -.LTptT5L5Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT5L5Via3NodeR = {sRel = .Scale({-0.057,0.289,(.LTptT5L5NodeR0[2] - .LTptT5L5Z*(.LTptT5L5NodeR0[1] - 0.289))});};
    AnyRefNode LTptT5L5Via3NodeL = {sRel = {.LTptT5L5Via3NodeR.sRel[0],.LTptT5L5Via3NodeR.sRel[1], -.LTptT5L5Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT5L5Via4NodeR = {sRel = .Scale({-0.049,0.261,(.LTptT5L5NodeR0[2] - .LTptT5L5Z*(.LTptT5L5NodeR0[1] - 0.261))});};
    AnyRefNode LTptT5L5Via4NodeL = {sRel = {.LTptT5L5Via4NodeR.sRel[0],.LTptT5L5Via4NodeR.sRel[1], -.LTptT5L5Via4NodeR.sRel[2]};};
    
    AnyRefNode LTptT5L5Via5NodeR = {sRel = .Scale({-0.042,0.234,(.LTptT5L5NodeR0[2] - .LTptT5L5Z*(.LTptT5L5NodeR0[1] - 0.234))});};
    AnyRefNode LTptT5L5Via5NodeL = {sRel = {.LTptT5L5Via5NodeR.sRel[0],.LTptT5L5Via5NodeR.sRel[1], -.LTptT5L5Via5NodeR.sRel[2]};};
    
    AnyRefNode LTptT5L5Via6NodeR = {sRel = .Scale({-0.032,0.196,(.LTptT5L5NodeR0[2] - .LTptT5L5Z*(.LTptT5L5NodeR0[1] - 0.196))});};
    AnyRefNode LTptT5L5Via6NodeL = {sRel = {.LTptT5L5Via6NodeR.sRel[0],.LTptT5L5Via6NodeR.sRel[1], -.LTptT5L5Via6NodeR.sRel[2]};};
    
    AnyRefNode LTptT5L5Via7NodeR = {sRel = .Scale({-0.022,0.156,(.LTptT5L5NodeR0[2] - .LTptT5L5Z*(.LTptT5L5NodeR0[1] - 0.156))});};
    AnyRefNode LTptT5L5Via7NodeL = {sRel = {.LTptT5L5Via7NodeR.sRel[0],.LTptT5L5Via7NodeR.sRel[1], -.LTptT5L5Via7NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT6S1NodeR0 = {-0.041,0.335,0.040};
    AnyRefNode LTptT6S1NodeR = {sRel = .Scale(.LTptT6S1NodeR0);};
    AnyRefNode LTptT6S1NodeL = {sRel = {.LTptT6S1NodeR.sRel[0],.LTptT6S1NodeR.sRel[1], -.LTptT6S1NodeR.sRel[2]};};
    
    AnyVar LTptT6S1Z = (LTptT6S1NodeR0[2]-..SegmentsLumbar.PelvisSeg.LTptT6S1NodeR0[2])/(LTptT6S1NodeR0[1]-..SegmentsLumbar.PelvisSeg.LTptT6S1NodeR0[1]);
    
    AnyRefNode LTptT6S1Via1NodeR = {sRel = .Scale({-0.047,0.312,(.LTptT6S1NodeR0[2] - .LTptT6S1Z*(.LTptT6S1NodeR0[1] - 0.312))});};
    AnyRefNode LTptT6S1Via1NodeL = {sRel = {.LTptT6S1Via1NodeR.sRel[0],.LTptT6S1Via1NodeR.sRel[1], -.LTptT6S1Via1NodeR.sRel[2]};};
    
    AnyRefNode LTptT6S1Via2NodeR = {sRel = .Scale({-0.052,0.288,(.LTptT6S1NodeR0[2] - .LTptT6S1Z*(.LTptT6S1NodeR0[1] - 0.288))});};
    AnyRefNode LTptT6S1Via2NodeL = {sRel = {.LTptT6S1Via2NodeR.sRel[0],.LTptT6S1Via2NodeR.sRel[1], -.LTptT6S1Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT6S1Via3NodeR = {sRel = .Scale({-0.048,0.260,(.LTptT6S1NodeR0[2] - .LTptT6S1Z*(.LTptT6S1NodeR0[1] - 0.260))});};
    AnyRefNode LTptT6S1Via3NodeL = {sRel = {.LTptT6S1Via3NodeR.sRel[0],.LTptT6S1Via3NodeR.sRel[1], -.LTptT6S1Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT6S1Via4NodeR = {sRel = .Scale({-0.046,0.234,(.LTptT6S1NodeR0[2] - .LTptT6S1Z*(.LTptT6S1NodeR0[1] - 0.234))});};
    AnyRefNode LTptT6S1Via4NodeL = {sRel = {.LTptT6S1Via4NodeR.sRel[0],.LTptT6S1Via4NodeR.sRel[1], -.LTptT6S1Via4NodeR.sRel[2]};};
    
    AnyRefNode LTptT6S1Via5NodeR = {sRel = .Scale({-0.031,0.196,(.LTptT6S1NodeR0[2] - .LTptT6S1Z*(.LTptT6S1NodeR0[1] - 0.196))});};
    AnyRefNode LTptT6S1Via5NodeL = {sRel = {.LTptT6S1Via5NodeR.sRel[0],.LTptT6S1Via5NodeR.sRel[1], -.LTptT6S1Via5NodeR.sRel[2]};};
    
    AnyRefNode LTptT6S1Via6NodeR = {sRel = .Scale({-0.022,0.158,(.LTptT6S1NodeR0[2] - .LTptT6S1Z*(.LTptT6S1NodeR0[1] - 0.158))});};
    AnyRefNode LTptT6S1Via6NodeL = {sRel = {.LTptT6S1Via6NodeR.sRel[0],.LTptT6S1Via6NodeR.sRel[1], -.LTptT6S1Via6NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT7S2NodeR0 = {-0.047,0.314,0.040};
    AnyRefNode LTptT7S2NodeR = {sRel = .Scale(.LTptT7S2NodeR0);};
    AnyRefNode LTptT7S2NodeL = {sRel = {.LTptT7S2NodeR.sRel[0],.LTptT7S2NodeR.sRel[1], -.LTptT7S2NodeR.sRel[2]};};
    
    AnyVar LTptT7S2Z = (LTptT7S2NodeR0[2]-..SegmentsLumbar.PelvisSeg.LTptT7S2NodeR0[2])/(LTptT7S2NodeR0[1]-..SegmentsLumbar.PelvisSeg.LTptT7S2NodeR0[1]);
    
    AnyRefNode LTptT7S2Via1NodeR = {sRel = .Scale({-0.052,0.288,(.LTptT7S2NodeR0[2] - .LTptT7S2Z*(.LTptT7S2NodeR0[1] - 0.288))});};
    AnyRefNode LTptT7S2Via1NodeL = {sRel = {.LTptT7S2Via1NodeR.sRel[0],.LTptT7S2Via1NodeR.sRel[1], -.LTptT7S2Via1NodeR.sRel[2]};};
    
    AnyRefNode LTptT7S2Via2NodeR = {sRel = .Scale({-0.049,0.260,(.LTptT7S2NodeR0[2] - .LTptT7S2Z*(.LTptT7S2NodeR0[1] - 0.260))});};
    AnyRefNode LTptT7S2Via2NodeL = {sRel = {.LTptT7S2Via2NodeR.sRel[0],.LTptT7S2Via2NodeR.sRel[1], -.LTptT7S2Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT7S2Via3NodeR = {sRel = .Scale({-0.048,0.233,(.LTptT7S2NodeR0[2] - .LTptT7S2Z*(.LTptT7S2NodeR0[1] - 0.233))});};
    AnyRefNode LTptT7S2Via3NodeL = {sRel = {.LTptT7S2Via3NodeR.sRel[0],.LTptT7S2Via3NodeR.sRel[1], -.LTptT7S2Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT7S2Via4NodeR = {sRel = .Scale({-0.033,0.202,(.LTptT7S2NodeR0[2] - .LTptT7S2Z*(.LTptT7S2NodeR0[1] - 0.202))});};
    AnyRefNode LTptT7S2Via4NodeL = {sRel = {.LTptT7S2Via4NodeR.sRel[0],.LTptT7S2Via4NodeR.sRel[1], -.LTptT7S2Via4NodeR.sRel[2]};};
    
    AnyRefNode LTptT7S2Via5NodeR = {sRel = .Scale({-0.021,0.165,(.LTptT7S2NodeR0[2] - .LTptT7S2Z*(.LTptT7S2NodeR0[1] - 0.165))});};
    AnyRefNode LTptT7S2Via5NodeL = {sRel = {.LTptT7S2Via5NodeR.sRel[0],.LTptT7S2Via5NodeR.sRel[1], -.LTptT7S2Via5NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT8S3NodeR0 = {-0.050,0.280,0.040};
    AnyRefNode LTptT8S3NodeR = {sRel = .Scale(.LTptT8S3NodeR0);};
    AnyRefNode LTptT8S3NodeL = {sRel = {.LTptT8S3NodeR.sRel[0],.LTptT8S3NodeR.sRel[1], -.LTptT8S3NodeR.sRel[2]};};
    
    AnyVar LTptT8S3Z = (LTptT8S3NodeR0[2]-..SegmentsLumbar.PelvisSeg.LTptT8S3NodeR0[2])/(LTptT8S3NodeR0[1]-..SegmentsLumbar.PelvisSeg.LTptT8S3NodeR0[1]);
    
    AnyRefNode LTptT8S3Via1NodeR = {sRel = .Scale({-0.050,0.256,(.LTptT8S3NodeR0[2] - .LTptT8S3Z*(.LTptT8S3NodeR0[1] - 0.256))});};
    AnyRefNode LTptT8S3Via1NodeL = {sRel = {.LTptT8S3Via1NodeR.sRel[0],.LTptT8S3Via1NodeR.sRel[1], -.LTptT8S3Via1NodeR.sRel[2]};};
    
    AnyRefNode LTptT8S3Via2NodeR = {sRel = .Scale({-0.048,0.229,(.LTptT8S3NodeR0[2] - .LTptT8S3Z*(.LTptT8S3NodeR0[1] - 0.229))});};
    AnyRefNode LTptT8S3Via2NodeL = {sRel = {.LTptT8S3Via2NodeR.sRel[0],.LTptT8S3Via2NodeR.sRel[1], -.LTptT8S3Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT8S3Via3NodeR = {sRel = .Scale({-0.034,0.201,(.LTptT8S3NodeR0[2] - .LTptT8S3Z*(.LTptT8S3NodeR0[1] - 0.201))});};
    AnyRefNode LTptT8S3Via3NodeL = {sRel = {.LTptT8S3Via3NodeR.sRel[0],.LTptT8S3Via3NodeR.sRel[1], -.LTptT8S3Via3NodeR.sRel[2]};};
    
    AnyRefNode LTptT8S3Via4NodeR = {sRel = .Scale({-0.023,0.159,(.LTptT8S3NodeR0[2] - .LTptT8S3Z*(.LTptT8S3NodeR0[1] - 0.159))});};
    AnyRefNode LTptT8S3Via4NodeL = {sRel = {.LTptT8S3Via4NodeR.sRel[0],.LTptT8S3Via4NodeR.sRel[1], -.LTptT8S3Via4NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT9S4NodeR0 = {-0.050,0.251,0.040};
    AnyRefNode LTptT9S4NodeR = {sRel = .Scale(.LTptT9S4NodeR0);};
    AnyRefNode LTptT9S4NodeL = {sRel = {.LTptT9S4NodeR.sRel[0],.LTptT9S4NodeR.sRel[1], -.LTptT9S4NodeR.sRel[2]};};
    
    AnyVar LTptT9S4Z = (LTptT9S4NodeR0[2]-..SegmentsLumbar.PelvisSeg.LTptT9S4NodeR0[2])/(LTptT9S4NodeR0[1]-..SegmentsLumbar.PelvisSeg.LTptT9S4NodeR0[1]);
    
    AnyRefNode LTptT9S4Via1NodeR = {sRel = .Scale({-0.051,0.228,(.LTptT9S4NodeR0[2] - .LTptT9S4Z*(.LTptT9S4NodeR0[1] - 0.228))});};
    AnyRefNode LTptT9S4Via1NodeL = {sRel = {.LTptT9S4Via1NodeR.sRel[0],.LTptT9S4Via1NodeR.sRel[1], -.LTptT9S4Via1NodeR.sRel[2]};};
    
    AnyRefNode LTptT9S4Via2NodeR = {sRel = .Scale({-0.037,0.200,(.LTptT9S4NodeR0[2] - .LTptT9S4Z*(.LTptT9S4NodeR0[1] - 0.200))});};
    AnyRefNode LTptT9S4Via2NodeL = {sRel = {.LTptT9S4Via2NodeR.sRel[0],.LTptT9S4Via2NodeR.sRel[1], -.LTptT9S4Via2NodeR.sRel[2]};};
    
    AnyRefNode LTptT9S4Via3NodeR = {sRel = .Scale({-0.023,0.152,(.LTptT9S4NodeR0[2] - .LTptT9S4Z*(.LTptT9S4NodeR0[1] - 0.152))});};
    AnyRefNode LTptT9S4Via3NodeL = {sRel = {.LTptT9S4Via3NodeR.sRel[0],.LTptT9S4Via3NodeR.sRel[1], -.LTptT9S4Via3NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT10SacrumNodeR0 = {-0.050,0.222,0.040};
    AnyRefNode LTptT10SacrumNodeR = {sRel = .Scale(.LTptT10SacrumNodeR0);};
    AnyRefNode LTptT10SacrumNodeL = {sRel = {.LTptT10SacrumNodeR.sRel[0],.LTptT10SacrumNodeR.sRel[1], -.LTptT10SacrumNodeR.sRel[2]};};
    
    AnyVar LTptT10SacrumZ = (LTptT10SacrumNodeR0[2]-..SegmentsLumbar.PelvisSeg.LTptT10SacrumNodeR0[2])/(LTptT10SacrumNodeR0[1]-..SegmentsLumbar.PelvisSeg.LTptT10SacrumNodeR0[1]);
    
    AnyRefNode LTptT10SacrumVia1NodeR = {sRel = .Scale({-0.037,0.197,(.LTptT10SacrumNodeR0[2] - .LTptT10SacrumZ*(.LTptT10SacrumNodeR0[1] - 0.197))});};
    AnyRefNode LTptT10SacrumVia1NodeL = {sRel = {.LTptT10SacrumVia1NodeR.sRel[0],.LTptT10SacrumVia1NodeR.sRel[1], -.LTptT10SacrumVia1NodeR.sRel[2]};};
    
    AnyRefNode LTptT10SacrumVia2NodeR = {sRel = .Scale({-0.023,0.147,(.LTptT10SacrumNodeR0[2] - .LTptT10SacrumZ*(.LTptT10SacrumNodeR0[1] - 0.147))});};
    AnyRefNode LTptT10SacrumVia2NodeL = {sRel = {.LTptT10SacrumVia2NodeR.sRel[0],.LTptT10SacrumVia2NodeR.sRel[1], -.LTptT10SacrumVia2NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT11SacrumNodeR0 = {-0.033,0.189,0.040};
    AnyRefNode LTptT11SacrumNodeR = {sRel = .Scale(.LTptT11SacrumNodeR0);};
    AnyRefNode LTptT11SacrumNodeL = {sRel = {.LTptT11SacrumNodeR.sRel[0],.LTptT11SacrumNodeR.sRel[1], -.LTptT11SacrumNodeR.sRel[2]};};
    
    AnyVar LTptT11SacrumZ = (LTptT11SacrumNodeR0[2]-..SegmentsLumbar.PelvisSeg.LTptT11SacrumNodeR0[2])/(LTptT11SacrumNodeR0[1]-..SegmentsLumbar.PelvisSeg.LTptT11SacrumNodeR0[1]);
    
    AnyRefNode LTptT11SacrumVia1NodeR = {sRel = .Scale({-0.023,0.149,(.LTptT11SacrumNodeR0[2] - .LTptT11SacrumZ*(.LTptT11SacrumNodeR0[1] - 0.149))});};
    AnyRefNode LTptT11SacrumVia1NodeL = {sRel = {.LTptT11SacrumVia1NodeR.sRel[0],.LTptT11SacrumVia1NodeR.sRel[1], -.LTptT11SacrumVia1NodeR.sRel[2]};};
    
    
    AnyVec3 LTptT12SacrumNodeR0 = {-0.011,0.161,0.040};
    AnyRefNode LTptT12SacrumNodeR = {sRel = .Scale(.LTptT12SacrumNodeR0);};
    AnyRefNode LTptT12SacrumNodeL = {sRel = {.LTptT12SacrumNodeR.sRel[0],.LTptT12SacrumNodeR.sRel[1], -.LTptT12SacrumNodeR.sRel[2]};};
    
    AnyVar LTptT12SacrumZ = (LTptT12SacrumNodeR0[2]-..SegmentsLumbar.PelvisSeg.LTptT12SacrumNodeR0[2])/(LTptT12SacrumNodeR0[1]-..SegmentsLumbar.PelvisSeg.LTptT12SacrumNodeR0[1]);
    // End of Erector Spinae Nodes
    
    // Psoas Major Nodes
    //    AnyVec3 PMT12I_TMNodeR0 = {0.020,0.153,0.019};
    AnyVec3 PMT12I_TMNodeR0 = {0.030,0.153,0.019}; //STC
    
    AnyRefNode PMT12I_TMNodeR = {sRel = .Scale(.PMT12I_TMNodeR0);};
    AnyRefNode PMT12I_TMNodeL = {sRel = {.PMT12I_TMNodeR.sRel[0],.PMT12I_TMNodeR.sRel[1], -.PMT12I_TMNodeR.sRel[2]};};
    
    AnyVar PMT12I_TMZ = (PMT12I_TMNodeR0[2]-..SegmentsLumbar.PelvisSeg.IliopubicEminenceViaNodeR0[2])/(PMT12I_TMNodeR0[1]-..SegmentsLumbar.PelvisSeg.IliopubicEminenceViaNodeR0[1]);
    // End of Psoas Major Nodes
    
    // Quadratus Lumborum Nodes
    AnyRefNode QLC12_CINodeR = {sRel = .Scale({-0.010,0.147,0.057});};
    AnyRefNode QLC12_CINodeL = {sRel = {.QLC12_CINodeR.sRel[0],.QLC12_CINodeR.sRel[1], -.QLC12_CINodeR.sRel[2]};};
    // End of Quadratus Lumborum Nodes
    
    // Rectus Abdominis Nodes
    AnyRefNode RACP_CO5NodeR = {sRel = .Scale({0.130,0.287,0.050});};
    AnyRefNode RACP_CO5NodeL = {sRel = {.RACP_CO5NodeR.sRel[0],.RACP_CO5NodeR.sRel[1], -.RACP_CO5NodeR.sRel[2]};};
    
    AnyRefNode RACP_CO6NodeR = {sRel = .Scale({0.141,0.266,0.035});};
    AnyRefNode RACP_CO6NodeL = {sRel = {.RACP_CO6NodeR.sRel[0],.RACP_CO6NodeR.sRel[1], -.RACP_CO6NodeR.sRel[2]};};
    
    AnyRefNode RACP_CO6Node = {sRel = .Scale({0.141,0.266,0.0});};
    
    
    AnyRefNode RACP_CO7NodeR = {sRel = .Scale({0.143,0.236,0.012});};
    AnyRefNode RACP_CO7NodeL = {sRel = {.RACP_CO7NodeR.sRel[0],.RACP_CO7NodeR.sRel[1], -.RACP_CO7NodeR.sRel[2]};};
    
    AnyRefNode RACP_CO5ViaNodeR = {sRel = .Scale({0.153,0.236,0.04});};
    AnyRefNode RACP_CO5ViaNodeL = {sRel = {.RACP_CO5ViaNodeR.sRel[0],.RACP_CO5ViaNodeR.sRel[1], -.RACP_CO5ViaNodeR.sRel[2]};};
    
    AnyRefNode RACP_CO6ViaNodeR = {sRel = .Scale({0.153,0.236,0.03});};
    AnyRefNode RACP_CO6ViaNodeL = {sRel = {.RACP_CO6ViaNodeR.sRel[0],.RACP_CO6ViaNodeR.sRel[1], -.RACP_CO6ViaNodeR.sRel[2]};};
    
    // End of Rectus Abdominis Nodes
    
    // Obliquus Externus Nodes
    AnyRefNode OEC7_RSNodeR = {sRel = .Scale({0.145,0.218+0.005,0.110+0.01});};
    AnyRefNode OEC7_RSNodeL = {sRel = {.OEC7_RSNodeR.sRel[0],.OEC7_RSNodeR.sRel[1], -.OEC7_RSNodeR.sRel[2]};};
    
    //AnyRefNode OEC7_RSNodeR = {sRel = .Scale({0.145,0.218+0.005,0.110+0.01});};
    //AnyRefNode OEC7_RSNodeL = {sRel = {.OEC7_RSNodeR.sRel[0],.OEC7_RSNodeR.sRel[1], -.OEC7_RSNodeR.sRel[2]};};
    
    AnyRefNode OEC8_RSNodeR = {sRel = .Scale({0.148,0.183,0.123});};
    AnyRefNode OEC8_RSNodeL = {sRel = {.OEC8_RSNodeR.sRel[0],.OEC8_RSNodeR.sRel[1], -.OEC8_RSNodeR.sRel[2]};};    
    
    AnyRefNode OEC9_RSNodeR = {sRel = .Scale({0.130,0.149,0.132});};
    AnyRefNode OEC9_RSNodeL = {sRel = {.OEC9_RSNodeR.sRel[0],.OEC9_RSNodeR.sRel[1], -.OEC9_RSNodeR.sRel[2]};};
    
    AnyRefNode OEC10_RSNodeR = {sRel = .Scale({0.108,0.122,0.123});};
    
    AnyRefNode OEC10_RSNodeL = {sRel = {.OEC10_RSNodeR.sRel[0],.OEC10_RSNodeR.sRel[1], -.OEC10_RSNodeR.sRel[2]};};    
    
    AnyRefNode OEC11_CINodeR = {sRel = .Scale({0.055,0.117,0.120});};
    AnyRefNode OEC11_CINodeL = {sRel = {.OEC11_CINodeR.sRel[0],.OEC11_CINodeR.sRel[1], -.OEC11_CINodeR.sRel[2]};};
    
    AnyRefNode OEC12_CINodeR = {sRel = .Scale({0.012,0.128,0.082});};
    AnyRefNode OEC12_CINodeL = {sRel = {.OEC12_CINodeR.sRel[0],.OEC12_CINodeR.sRel[1], -.OEC12_CINodeR.sRel[2]};};
    // End of Obliquus Externus Nodes
    
    // Obliquus Internus Nodes
    AnyRefNode OICI_C12NodeR = {sRel = .Scale({0.003,0.130,0.075});};
    AnyRefNode OICI_C12NodeL = {sRel = {.OICI_C12NodeR.sRel[0],.OICI_C12NodeR.sRel[1], -.OICI_C12NodeR.sRel[2]};};    
    
    AnyRefNode OICI_C11NodeR = {sRel = .Scale({0.046,0.114,0.121});};
    AnyRefNode OICI_C11NodeL = {sRel = {.OICI_C11NodeR.sRel[0],.OICI_C11NodeR.sRel[1], -.OICI_C11NodeR.sRel[2]};};
    
    AnyRefNode OICI_C10NodeR = {sRel = .Scale({0.108,0.118,0.126});};
    AnyRefNode OICI_C10NodeL = {sRel = {.OICI_C10NodeR.sRel[0],.OICI_C10NodeR.sRel[1], -.OICI_C10NodeR.sRel[2]};};
    // End of Obliquus Internus Nodes
    
    AnyDrawSurf DrwSurf = {
      FileName = "..\Trunk\BonesSpine\ThoraxSegWithoutNeck";
      RGB = ...ColorRef.Segments;
      ScaleXYZ={1.0,1.0,1.0};
      Transparency = Main.DrawSettings.BonesTransparency.Thorax;
      AnyFunTransform3D &Scale =.Scale;
    };
    
  }; // End of ThoraxSeg
  
};

















