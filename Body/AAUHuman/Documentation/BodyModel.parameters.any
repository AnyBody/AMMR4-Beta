//
// !!! THIS FILE IS A TEMPLATE, SHOWING HOW YOUR MODEL COULD BE CUSTOMIZED BY CHANGING BODY MODEL PARAMETERS.
// !!! IT IS RECOMMENDED TO COPY THIS FILE INTO YOUR APPLICATION FOLDER OR COPY NECESSARY
// !!! LINES INTO THE MAIN FILE OF YOUR APPLICATION BEFORE INCLUDING "HumanModel.any" !!!  
// !!! PLEASE NOTE THAT SOME OBVIOUS OPTIONS (ON, OFF, etc) ARE NOT SHOWN HERE !!! 
//

// Definition of an anthropometric scaling law
//#define BM_SCALING CONST_SCALING_STANDARD
//Possible values:  CONST_SCALING_CUSTOM  CONST_SCALING_STANDARD  CONST_SCALING_UNIFORM  CONST_SCALING_LENGTHMASS  CONST_SCALING_LENGTHMASSFAT  CONST_SCALING_UNIFORM_EXTMEASUREMENTS  CONST_SCALING_LENGTHMASS_EXTMEASUREMENTS  CONST_SCALING_LENGTHMASSFAT_EXTMEASUREMENTS  

// File with all anthropometric measurements
//#path BM_SCALING_ANTHRO_FILE "<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.AnyMan.any"


// Custom anthopometric scaling law, used when BM_SCALING is CONST_SCALING_CUSTOM.
//#path BM_SCALING_MY_FILE "<ANYBODY_PATH_BODY>\Scaling\MyScalingLaw.any"


// Switch for automatic display of all configuration values
//#define BM_CONFIG_MESSAGES OFF


// Switch for enabling configuration value information in the model tree
//#define BM_CONFIG_VALUES OFF


// A file with draw settings
//#path BM_DRAWSETTINGS_FILE "<ANYBODY_PATH_BODY>\DrawSettings\DrawSettings.any"


// A flag to switch on/off inclusion of the draw settings (may be needed in case of two human models)
//#define BM_DRAWSETTINGS_SKIP OFF


// Switch defining left leg model and its presence
//#define BM_LEG_LEFT CONST_LEG_MODEL_TLEM
//Possible values:  CONST_LEG_MODEL_OFF  CONST_LEG_MODEL_Leg  CONST_LEG_MODEL_TLEM  

// Switch defining right leg model and its presence
//#define BM_LEG_RIGHT CONST_LEG_MODEL_TLEM
//Possible values:  CONST_LEG_MODEL_OFF  CONST_LEG_MODEL_Leg  CONST_LEG_MODEL_TLEM  

// Index parameter to specify muscle strength for lower extremities
//#define BM_LEG_STRENGTH_INDEX 1.0


// Parameter to define muscle behavior of both right and left leg
//#define BM_LEG_MUSCLES_BOTH CONST_MUSCLES_SIMPLE
//Possible values:  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  CONST_MUSCLES_3E_HILL  

// Parameter to define muscle behavior of the left leg
//#define BM_LEG_MUSCLES_LEFT BM_LEG_MUSCLES_BOTH
//Possible values:  BM_LEG_MUSCLES_BOTH  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  CONST_MUSCLES_3E_HILL  

// Parameter to define muscle behavior of the right leg
//#define BM_LEG_MUSCLES_RIGHT BM_LEG_MUSCLES_BOTH
//Possible values:  BM_LEG_MUSCLES_BOTH  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  CONST_MUSCLES_3E_HILL  

// Reserved parameter for the trunk manipulation, is always switched ON.
//#define BM_TRUNK ON


// Index parameter to specify strength for trunk muscles.
//#define BM_TRUNK_STRENGTH_INDEX 1.0


// Switch for detailed neck model.
//#define BM_TRUNK_NECK OFF


// Definition of the trunk muscles type.
//#define BM_TRUNK_MUSCLES CONST_MUSCLES_SIMPLE
//Possible values:  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  

// Switch for the trunk model disk stiffness being present or not.
//#define BM_TRUNK_DISC_STIFFNESS_NORMAL OFF


// Keyword for the trunk neck model muscle type.
//#define BM_TRUNK_NECK_MUSCLES CONST_MUSCLES_NONE
//Possible values:  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  

// Switch for the use of simple muscle on the neck in the trunk neck model.
//#define BM_TRUNK_NECK_SIMPLE_MUSCLES_ONLY_ON_NECK OFF


// Switch for the trunk neck model disk stiffness being present or not.
//#define BM_TRUNK_NECK_DISC_STIFFNESS_NORMAL OFF


// A switch to use a kinematic rhythm for lumbar spine.
//#define BM_SPINE_RHYTHM ON


// A switch to control presence of lumbar spine ligaments.
//#define BM_TRUNK_LUMBAR_LIGAMENTS OFF


// Index parameter to specify muscle strength for upper extremities.
//#define BM_ARM_STRENGTH_INDEX 1.0


// Switch for the left arm model being present or not.
//#define BM_ARM_LEFT ON


// Keyword for the type of left hand.
//#define BM_ARM_DETAIL_HAND_LEFT CONST_HAND_SIMPLE
//Possible values:  CONST_HAND_SIMPLE  CONST_HAND_DETAILED  

// Switch for the shoulder rhythm constraints for the left arm being present or not.
//#define BM_ARM_SHOULDER_RHYTHM_LEFT OFF


// Switch for the right arm model being present or not.
//#define BM_ARM_RIGHT ON


// Keyword for the type of right hand.
//#define BM_ARM_DETAIL_HAND_RIGHT CONST_HAND_SIMPLE
//Possible values:  CONST_HAND_SIMPLE  CONST_HAND_DETAILED  

// Switch for the shoulder rhythm constraints for the right arm being present or not.
//#define BM_ARM_SHOULDER_RHYTHM_RIGHT OFF


// Keyword for the muscle model type for both left and right arms.
//#define BM_ARM_MUSCLES_BOTH CONST_MUSCLES_SIMPLE
//Possible values:  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  CONST_MUSCLES_3E_HILL  

// Keyword for the muscle model type for the left arm.
//#define BM_ARM_MUSCLES_LEFT BM_ARM_MUSCLES_BOTH
//Possible values:  BM_ARM_MUSCLES_BOTH  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  CONST_MUSCLES_3E_HILL  

// Keyword for the muscle model type for only the left neck muscle.
//#define BM_ARM_MUSCLES_ONLY_ON_NECK_LEFT CONST_MUSCLES_NONE
//Possible values:  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  

// Keyword for the muscle model for both the right arm.
//#define BM_ARM_MUSCLES_RIGHT BM_ARM_MUSCLES_BOTH
//Possible values:  BM_ARM_MUSCLES_BOTH  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  CONST_MUSCLES_3E_HILL  

// Keyword for the muscle model type for only the right neck muscle.
//#define BM_ARM_MUSCLES_ONLY_ON_NECK_RIGHT CONST_MUSCLES_NONE
//Possible values:  CONST_MUSCLES_NONE  CONST_MUSCLES_SIMPLE  

// Keyword to choose the option of the joint axes defintion based on the anatomical landmarks.
//#define BM_BONY_LANDMARK_DEFINED_JOINTAXIS OFF


// File name of the mannequin definition file. Default is a file in the body model, but this can be copied to and modified in your model directory.
//#path BM_MANNEQUIN_FILE "<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.mannequin.any"


// Setting of the default value for all mannequin drivers.
//#define BM_MANNEQUIN_DRIVER_DEFAULT ON


// By default constraint type of mannequin drivers will be soft.
//#define BM_MANNEQUIN_DRIVER_WEAK_SWITCH ON


// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_POS_X BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Y BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Z BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_X BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_NECK BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT
//Possible values:  BM_MANNEQUIN_DRIVER_DEFAULT  ON  OFF  

// A switch to use different ref. frame than the default global reference frame
//#define BM_GLOBAL_REFERENCE_FRAME_SWITCH OFF


// An object path leading to the selected global reference frame
//#define BM_GLOBAL_REFERENCE_FRAME ..GenericGlobalRefFrame


