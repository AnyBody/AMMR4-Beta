
// This include file contains all the muscle parameter 
// data of the lower extremity. Please note that it is 
// necessary to calibrate the model. This data is not 
// calibrated!

// A lot of information in this file is obtained from:
// http: // isb.ri.ccf.org/data/delp/Muscle_parameter_table.txt

//All additional muscles from the Klein Horsman dataset that were not decribed in the former model, have been inserted.
//Some muscles of the former model are divided into more seperate parts. 
//For each muscle(part), PCSA,AnyVar LfbarTemp, Lt0 and pennation angle are defined, based on the Klein Horsman dataset. The muscles
//that were defined already in the former model will keep their definitions of the parameters: Epsilonbar, K1, K2, Fcfast,
//Jt, Jpe and PEFactor. This will also be the case for the muscles that were divided into more seperate parts, for example
//the SoleusLateralis and SoleusMedialis will have the same definition of the parameters Epsilonbar up till PEFactor as the 
//Soleus in the former model. 
//An extra parameter, PCSA, became available from the dataset. Therefore, a new F0 will be calculated for each muscle
//using F0 = PCSAfactor * PCSA. This factor will be defined first and will be referred to later, so it can be changed easily. 
//
//
//Oktober 2007, Karin Gorter

//Ward et al 2009
//Clin Orthop Relat Res (2009) 467:1074-1082
//Are Current Measurements of Lower Extremity Muscle
//Architecture Accurate?
//Samuel R. Ward PT, PhD, Carolyn M. Eng BS,
//Laura H. Smallwood BS, PA, Richard L. Lieber PhD


AnyVar StrengthScaleShank = .StrengthScaling.Shank.StrengthScale;
AnyVar StrengthScaleThigh = .StrengthScaling.Thigh.StrengthScale;
AnyVar StrengthScalePelvis = .Scaling.StrengthScaling.Pelvis.StrengthScale;
AnyVar FiberLengthScaleShank = .FiberLengthScaling.Shank.FiberLengthScale;
AnyVar FiberLengthScaleThigh = .FiberLengthScaling.Thigh.FiberLengthScale;
AnyVar FiberLengthScalePelvis = .FiberLengthScaling.Thigh.FiberLengthScale;//.Scaling.FiberLengthScaling.Pelvis.FiberLengthScale;

AnyVar PCSAfactor = 27*.....HumanModel.StrengthParameters.StrengthIndexLeg; // = PCSAfactor in N/cm^2 , the PCSA itself is given in cm^2 so F0 is in Newton`s.
//Klein Horsman used a PCSAfactor of 27 N/cm^2

AnyFolder CadaverMusPar = {
#include "CadaverMuscleParameters.any"
};


AnyMuscleModel3E  AdductorBrevisProximal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisProximal;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorBrevisProximal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisProximal;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorBrevisMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisMid;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorBrevisMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisMid;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorBrevisDistal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisDistal;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorBrevisDistal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisDistal;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorLongus4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorLongus5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorLongus6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusDistal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusDistal;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusDistal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusDistal;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusDistal3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusDistal;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusMid3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusMid4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusMid5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusMid6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusProximal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusProximal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusProximal3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  AdductorMagnusProximal4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  BicepsFemorisCaputLongum1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputLongum;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  BicepsFemorisCaputBreve1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  BicepsFemorisCaputBreve2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  BicepsFemorisCaputBreve3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ExtensorDigitorumLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorDigitorumLongus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ExtensorDigitorumLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorDigitorumLongus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ExtensorDigitorumLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorDigitorumLongus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ExtensorHallucisLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorHallucisLongus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ExtensorHallucisLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorHallucisLongus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ExtensorHallucisLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorHallucisLongus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  FlexorDigitorumLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorDigitorumLongus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  FlexorDigitorumLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorDigitorumLongus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  FlexorDigitorumLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorDigitorumLongus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  FlexorHallucisLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorHallucisLongus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  FlexorHallucisLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorHallucisLongus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  FlexorHallucisLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorHallucisLongus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GastrocnemiusLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GastrocnemiusLateralis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GastrocnemiusMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GastrocnemiusMedialis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GemellusInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GemellusInferior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GemellusSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GemellusSuperior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusSuperior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusSuperior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusSuperior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusSuperior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusInferior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusInferior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusInferior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMaximusInferior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusAnterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusAnterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusAnterior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusAnterior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusAnterior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusAnterior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusPosterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusPosterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusPosterior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusPosterior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusPosterior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMediusPosterior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMinimusAnterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusAnterior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMinimusMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusMid;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  GluteusMinimusPosterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusPosterior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Gracilis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Gracilis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Gracilis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Gracilis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusLateralis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusLateralis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusLateralis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusLateralis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusLateralis;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusMid3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusMedialis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  IliacusMedialis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorExternusInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusInferior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorExternusInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusInferior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorExternusSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusSuperior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorExternusSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusSuperior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorExternusSuperior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusSuperior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorInternus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorInternus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  ObturatorInternus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Pectineus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Pectineus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Pectineus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Pectineus4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusBrevis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusBrevis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusBrevis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusBrevis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusBrevis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusBrevis;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusLongus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusLongus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusLongus;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusTertius1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusTertius;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusTertius2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusTertius;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PeroneusTertius3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusTertius;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Piriformis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Piriformis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Plantaris1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Plantaris;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Popliteus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Popliteus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Popliteus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Popliteus;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PsoasMinor1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMinor;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PsoasMajor1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PsoasMajor2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  PsoasMajor3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  QuadratusFemoris1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  QuadratusFemoris2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  QuadratusFemoris3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  QuadratusFemoris4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(4*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  RectusFemoris1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.RectusFemoris;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  RectusFemoris2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.RectusFemoris;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SartoriusProximal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SartoriusProximal;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SartoriusDistal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SartoriusDistal;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Semimembranosus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Semimembranosus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  Semitendinosus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Semitendinosus;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(1*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SoleusMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusMedialis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SoleusMedialis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusMedialis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SoleusMedialis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusMedialis;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SoleusLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusLateralis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SoleusLateralis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusLateralis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  SoleusLateralis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusLateralis;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TensorFasciaeLatae1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TensorFasciaeLatae;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TensorFasciaeLatae2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TensorFasciaeLatae;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisAnterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisAnterior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisAnterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisAnterior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisAnterior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisAnterior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisPosteriorMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorMedialis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisPosteriorMedialis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorMedialis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisPosteriorMedialis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorMedialis;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisPosteriorLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorLateralis;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisPosteriorLateralis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorLateralis;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  TibialisPosteriorLateralis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorLateralis;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(3*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusIntermedius1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusIntermedius2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusIntermedius3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusIntermedius4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusIntermedius5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusIntermedius6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisInferior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisInferior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisInferior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisInferior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisSuperior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusLateralisSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisSuperior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisInferior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisInferior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisMid;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisMid;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(2*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyInt MuscleElemNo = 1; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyInt MuscleElemNo = 2; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisSuperior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyInt MuscleElemNo = 3; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisSuperior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyInt MuscleElemNo = 4; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisSuperior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyInt MuscleElemNo = 5; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};
AnyMuscleModel3E  VastusMedialisSuperior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyInt MuscleElemNo = 6; // The element number for the muscle
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(6*MuscleParameters.OptimalFiberlength);// Muscle volume is devided between muscle branches, and devided by fiber length to calculate PCSA
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Can not be zero)
   Gammabar = MuscleParameters.Pennationangle*(3.14/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
};