
#class_template ForcePlateType4AutoDetection (PlateName, Folder,AnySeg &Limb1,AnySeg &Limb2, No,VerticalDirection,HeightTolerance,VelThreshold, Fx, Fy, Fz, Mx,My,Mz ){
  
  
  #var AnyFloat Cal;  // Variable with obligatory initialization
  
  
  AnyFixedRefFrame Corners ={
    AnyVar CoordinateSystemSize= 0.1;
    
    AnyRefNode c01={
      AnyInt i=0;
      AnyInt plnr=No;
      sRel=0.001*{Folder.Groups.FORCE_PLATFORM.CORNERS.Data[plnr][i][0],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][1],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][2]};
      AnyDrawNode drw={ScaleXYZ=0.01*{1,1,1};RGB={1,0,0};};
      AnyDrawVector  DrawName = {
        Vec = {0.0,0,0};  //use zero length
        Line.Thickness = 0.025; //arbitary value
        Text = "1"; //make reference to name
        Line.RGB={1,0,0};//make reference to color
      };
    };
    
    AnyRefNode c02={
      AnyInt i=1;
      AnyInt plnr=No;
      sRel=0.001*{Folder.Groups.FORCE_PLATFORM.CORNERS.Data[plnr][i][0],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][1],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][2]};
      AnyDrawNode drw={ScaleXYZ=0.01*{1,1,1};RGB={1,0,0};};
      AnyDrawVector  DrawName = {
        Vec = {0.0,0,0};  //use zero length
        Line.Thickness = 0.025; //arbitary value
        Text = "2"; //make reference to name
        Line.RGB={1,0,0};//make reference to color
      };
    };
    
    AnyRefNode c03={
      AnyInt i=2;
      AnyInt plnr=No;
      sRel=0.001*{Folder.Groups.FORCE_PLATFORM.CORNERS.Data[plnr][i][0],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][1],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][2]};
      AnyDrawNode drw={ScaleXYZ=0.01*{1,1,1};RGB={1,0,0};};
      
      AnyDrawVector  DrawName = {
        Vec = {0.0,0,0};  //use zero length
        Line.Thickness = 0.025; //arbitary value
        Text = "3"; //make reference to name
        Line.RGB={1,0,0};//make reference to color
      };
    };
    
    AnyRefNode c04={
      AnyInt i=3;
      AnyInt plnr=No;
      sRel=0.001*{Folder.Groups.FORCE_PLATFORM.CORNERS.Data[plnr][i][0],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][1],Folder.Groups.FORCE_PLATFORM.CORNERS.Data[No][i][2]};
      AnyDrawNode drw={ScaleXYZ=0.01*{1,1,1};RGB={1,0,0};};
      AnyDrawVector  DrawName = {
        Vec = {0.0,0,0};  //use zero length
        Line.Thickness = 0.025; //arbitary value
        Text = "4"; //make reference to name
        Line.RGB={1,0,0};//make reference to color
      };
      
    };
    
    
    AnyRefNode PlateCenter={
      sRel=0.25*(.c01.sRel+.c02.sRel+.c03.sRel+.c04.sRel);
      AnyVec3 p1=sRel;
      AnyVec3 p2=0.5*(.c01.sRel+.c04.sRel);
      AnyVec3 p3=0.5*(.c01.sRel+.c02.sRel);
      ARel =RotMat(p1,p2,p3);
      
      //      AnyDrawRefFrame drw={ScaleXYZ=..CoordinateSystemSize*{1,1,1};RGB={0,1,0};};
      
    };
    
  };
  
  
  
  
  AnySeg ForcePlate={
    Mass=0.0;
    Jii={0,0,0};
    r0=.Corners.PlateCenter.sRel;
    
    //Rotational tranformation matrix for a coordinate system defined by three points. The first point is the origin of the system; the second gives the direction of the first (x) axis. Together all three points must span a plane which will be the plane of the first (x) and the second (y) axes, having the third (z) axis as normal. 
    AnyVec3 p1=.Corners.PlateCenter.sRel;
    AnyVec3 p2=0.5*(.Corners.c01.sRel+.Corners.c04.sRel);
    AnyVec3 p3=0.5*(.Corners.c01.sRel+.Corners.c02.sRel);
    Axes0 =RotMat(p1,p2,p3);
    
    
    //Transducer location      
    AnyRefNode TransducerLocation ={
      AnyFloat Origins= Folder.Groups.FORCE_PLATFORM.ORIGIN.Data;
      AnyVar ydist=-Origins[0][0]*Main.ModelSetup.C3DFileData.PointsScaleFactor; //distance from y axis on transducer to y axis of center of plate
      AnyVar xdist=-Origins[0][1]*Main.ModelSetup.C3DFileData.PointsScaleFactor;//distance from x axis on transducer to x axis of center of plate
      AnyVar zdist=-Origins[0][2]*Main.ModelSetup.C3DFileData.PointsScaleFactor;//distance from z axis on transducer to z surface of plate
      
      sRel={xdist,ydist,zdist};
      AnyDrawRefFrame drw={ScaleXYZ=0.4*{1,1,1};RGB={1,0,0};};
      
    };
    
    
    AnyRefNode PlateGraphics ={
      sRel={0,0,0.05};
      
      AnyVec3 Size={vnorm(..Corners.c01.sRel-..Corners.c02.sRel,2),vnorm(..Corners.c02.sRel-..Corners.c03.sRel,2),0.1};
      
      AnyDrawSurf DrwBox = {
        FileName = "box";
        RGB = 0.45*{1,1,1};
        ScaleXYZ=.Size/0.30;
        Opacity =0.4;
        Face=-1;
      };
      
    };
    
    AnyFloat Origins= Folder.Groups.FORCE_PLATFORM.ORIGIN.Data;
    AnyVar ydist=Origins[0][0]; //distance from y axis on transducer to y axis of center of plate
    AnyVar xdist=Origins[0][1];//distance from x axis on transducer to x axis of center of plate
    AnyVar zdist=Origins[0][2];//distance from z axis on transducer to z surface of plate
  };  
  
  AnyKinEqSimpleDriver ForcePlateDriver ={
    AnyKinLinear ForcePlateLin={
      AnyRefNode &ref1=..Corners.PlateCenter;
      AnySeg &ref2=..ForcePlate;
      Ref=0;
    };
    
    AnyKinRotational ForcePlateRot={
      AnyRefNode &ref1=..Corners.PlateCenter;
      AnySeg &ref2=..ForcePlate;
      Type=RotAxesAngles;
    };
    DriverPos={0,0,0,0,0,0}; 
    DriverVel={0,0,0,0,0,0};
    Reaction.Type = {Off,Off,Off,Off,Off,Off};
  };
  
  
  
  
  AnyInt   EndFrame =Folder.Header.FirstFrameNo-1+(Folder.Header.LastFrameNo-Folder.Header.FirstFrameNo+1)* Folder.Header.NoAnalogSamplesPer3DFrame;
  AnyFloatVar  tStart = Folder.Header.FirstFrameNo/Folder.Header.VideoFrameRate;
  AnyFloatVar   tEnd =  Folder.Header.LastFrameNo/Folder.Header.VideoFrameRate;
  
  AnyInt AnalogData=EndFrame-Folder.Header.FirstFrameNo;
  AnyFloat Time=tStart+(iarr(0,AnalogData)*(tEnd-tStart)/AnalogData);
  
  
  /// A lowpass butterworth filter
  AnyFunButterworthFilter LowPassFilter = 
  {
    FilterForwardBackwardOnOff = On;
    AutomaticInitialConditionOnOff = On;
    N = 2;
    AnyVar CutOffFrequency=15;
    AnyVar SampleFreq=Main.ModelSetup.C3DFileData.Header.VideoFrameRate* Main.ModelSetup.C3DFileData.Header.NoAnalogSamplesPer3DFrame   ;
    W = {1/(SampleFreq*0.5)*CutOffFrequency};
    Type = LowPass;
  };
  
  
  
  AnyFunInterpol load ={
    Type=PiecewiseLinear;
    T=.Time;
    Data=.Cal'*{Fx,Fy,Fz,Mx,My,Mz};
    //  Data=.Cal'*{.LowPassFilter(Fx),.LowPassFilter(Fy),.LowPassFilter(Fz),.LowPassFilter(Mx),.LowPassFilter(My),.LowPassFilter(Mz)};
    
  }; 
  
  
  AnyVar FzTotal=load(ForcePlateDriver.t)[2];
  AnyVar OnOff=iffun(gtfun(-FzTotal,10.0),1.0,0.0);
  
  AnyForce3D Force ={
    
    AnyRefFrame  &ref=.ForcePlate.TransducerLocation ;
    Flocal=.OnOff*{.load(.ForcePlateDriver.t)[0],.load(.ForcePlateDriver.t)[1],.load(.ForcePlateDriver.t)[2]};
    AnyDrawVector DrawForce =     {
      AnyRefFrame &ref=.ref;
      Vec=.Flocal*1/1000;
      PointAway = Off;
      DrawCoord = Off;
      
      Line.RGB ={0,0,1};
      Line.Thickness = 0.01;
      Line.End.Thickness = 2*0.01;
      Line.End.Length = 4*0.01;
      GlobalCoord=Off;
    };
    
    
  };  
  
  
  AnyMoment3D Moment ={
    
    AnyRefFrame  &ref=.ForcePlate.TransducerLocation ;
    Mlocal=.OnOff*{.load(.ForcePlateDriver.t)[3],.load(.ForcePlateDriver.t)[4],.load(.ForcePlateDriver.t)[5]}*Main.ModelSetup.C3DFileData.PointsScaleFactor;
    AnyDrawVector DrawMoment =     {
      AnyRefFrame &ref=.ref;
      Vec=.Mlocal*1/1000;
      PointAway = Off;
      DrawCoord = Off;
      
      Line.RGB ={1,0,0};
      Line.Thickness = 0.01;
      Line.End.Thickness = 2*0.01;
      Line.End.Length = 4*0.01;
      GlobalCoord=Off;
    };
    
    
  };  
  
  AnyFolder CenterOfPressure ={
    
    
    AnyDrawVector vector =   {
      AnyVar time=..ForcePlateDriver.t;
      AnyVector Load=..load(time);
      AnyVar OnOff=iffun(gtfun(Load[2],-10.0),0.0,1.0);
      
      AnyVar fx= Load[0];
      AnyVar fy= Load[1];
      AnyVar fz= Load[2];
      
      AnyVar lx=..ForcePlate.ydist;
      AnyVar ly=..ForcePlate.xdist;
      AnyVar lz=..ForcePlate.zdist;
      
      AnyVar mx= Load[3]*Main.ModelSetup.C3DFileData.PointsScaleFactor;
      AnyVar my= Load[4]*Main.ModelSetup.C3DFileData.PointsScaleFactor;
      AnyVar mz= Load[5]*Main.ModelSetup.C3DFileData.PointsScaleFactor;
      
      AnyVar fzz =iffun(gtfun(  (fz^2)^0.5,0),fz,fz+1000000);
      
      AnyVar Vx= my/fzz;
      AnyVar Vy= -mx/fzz;
      AnyVar Vz= 0;
      
      
      Vec = -..OnOff*{ Vx,Vy,Vz    };
      GlobalCoord=Off;
      PointAway = On;
      DrawCoord = Off;
      Line.Style=Line3DStyleFull;
      Line.RGB = {0,1,0};
      Line.Thickness = 0.000001;
      
      Line.End.Thickness = 2*0.015; 
      Line.End.Length = 4*0.015;  
      Line.End.Style=Line3DCapStyleEllipsoid;
      //
      Line.Start.Thickness = 0*0.015; 
      Line.Start.Length = 0*0.015;  
      Line.Start.Style=Line3DCapStyleEllipsoid;
      
      
      AnyRefFrame &ref = ..ForcePlate;
    };
  };
  
  AnyFolder ContactDetectionLimb1 ={
    
    
    
    AnyVec3 P1= .Limb1.HeelContactNodeLow.r;
    AnyVar P1Vel= vnorm(.Limb1.HeelContactNodeLow.rDot,2);
    
    
    AnyVec3 P2= .Limb1.ToeLateralContactNode.r;
    AnyVar P2Vel= vnorm(.Limb1.HeelContactNodeLow.rDot,2);
    
    
    #if VerticalDirection=="X"
    AnyIntArray Index={1,2,0};
    #endif
    
    #if VerticalDirection=="Y" 
    AnyIntArray Index={0,2,1};
    #endif
    
    
    #if VerticalDirection=="Z" 
    AnyIntArray Index={0,1,2};
    #endif
    
    AnyFolder NodeWithInBox={
      
      // A
      // l
      // l 
      // 
      //
      // 1 ----------- 2    ---> X
      //
      //
      //     p1 or p2
      //
      //
      // 4 ----------- 3
      
      //2 decide if node is inside bc
      //3 decide if node is within contact limits of plate
      
      AnyVec3 n1=..Corners.c01.r;
      AnyVec3 n3=..Corners.c03.r;
 
      AnyVar  P1Cond1Pos = iffun(ltfun( .P1[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P1Cond2Pos = iffun(gtfun( .P1[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P1Cond3Pos = iffun(ltfun( .P1[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P1Cond4Pos = iffun(gtfun( .P1[.Index[1]],  n3[.Index[1]]),  1,  0);
      
      AnyVar  P1Cond1Neg = iffun(gtfun( .P1[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P1Cond2Neg = iffun(ltfun( .P1[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P1Cond3Neg = iffun(gtfun( .P1[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P1Cond4Neg = iffun(ltfun( .P1[.Index[1]],  n3[.Index[1]]),  1,  0);

      AnyVar  P1Cond5 = iffun(ltfun( .P1[.Index[2]],  n1[.Index[2]]+HeightTolerance),  1, 0 );
      AnyVar  P1Cond6 = iffun(gtfun( .P1[.Index[2]],  n1[.Index[2]]-HeightTolerance),  1, 0 );
      
      AnyVar  P1WithinBoxPos=  andfun(andfun(andfun(P1Cond1Pos,P1Cond2Pos),andfun(P1Cond3Pos, P1Cond4Pos)),andfun(P1Cond5,P1Cond6));
      AnyVar  P1WithinBoxNeg=  andfun(andfun(andfun(P1Cond1Neg,P1Cond2Neg),andfun(P1Cond3Neg, P1Cond4Neg)),andfun(P1Cond5,P1Cond6));
      AnyVar  P1WithinBox=  orfun(P1WithinBoxPos,P1WithinBoxNeg);
      AnyVar  P1OutsideBox=  iffun(P1WithinBox,0,1);
      
      
      AnyVar  P2Cond1Pos = iffun(ltfun( .P2[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P2Cond2Pos = iffun(gtfun( .P2[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P2Cond3Pos = iffun(ltfun( .P2[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P2Cond4Pos = iffun(gtfun( .P2[.Index[1]],  n3[.Index[1]]),  1,  0);

      AnyVar  P2Cond1Neg = iffun(gtfun( .P2[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P2Cond2Neg = iffun(ltfun( .P2[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P2Cond3Neg = iffun(gtfun( .P2[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P2Cond4Neg = iffun(ltfun( .P2[.Index[1]],  n3[.Index[1]]),  1,  0);
      
      AnyVar  P2Cond5 = iffun(ltfun( .P2[.Index[2]],  n1[.Index[2]]+HeightTolerance),  1, 0 );
      AnyVar  P2Cond6 = iffun(gtfun( .P2[.Index[2]],  n1[.Index[2]]-HeightTolerance),  1, 0 );

      AnyVar  P2WithinBoxPos=  andfun(andfun(andfun(P2Cond1Pos,P2Cond2Pos),andfun(P2Cond3Pos, P2Cond4Pos)),andfun(P2Cond5,P2Cond6));
      AnyVar  P2WithinBoxNeg=  andfun(andfun(andfun(P2Cond1Neg,P2Cond2Neg),andfun(P2Cond3Neg, P2Cond4Neg)),andfun(P2Cond5,P2Cond6));
      AnyVar  P2WithinBox=  orfun(P2WithinBoxPos,P2WithinBoxNeg);
      
      AnyVar  P2OutsideBox=  iffun(P2WithinBox,0,1);
      
      
      AnyVar WithinBox =orfun(P1WithinBox,P2WithinBox);
      AnyVar OutsideBox=  iffun(WithinBox,0,1);
      
      AnyVar WithinBoxAndVelBelowThreshold =WithinBox*iffun(ltfun(.P1Vel,VelThreshold),1,0);
      AnyVar OutsideBoxOrVelHigherThanThreshold=  iffun(WithinBoxAndVelBelowThreshold ,0,1);
      
    };  
    
    AnyMuscleModelUsr1 InContactMuscle = {
      F0 = 0;
      S = .NodeWithInBox.WithinBoxAndVelBelowThreshold *10000;
    };
    
    AnyMuscleModelUsr1 NoContactMuscle = {
      AnyVar Limb2Contact=iffun(eqfun(..ContactDetectionLimb2.NodeWithInBox.WithinBoxAndVelBelowThreshold ,1.0),0.0,1.0); //equal 0 if limb2 in contact
      S =Limb2Contact*.NodeWithInBox.OutsideBoxOrVelHigherThanThreshold*10000;
      F0 = 0;
    };
    
    
    AnyFolder PlateFootReactions={
      
      AnyKinLinear Lin={
        Ref=0;
        AnySeg &ref2=...ForcePlate;
        AnySeg &ref1=...Limb1;
      };
      
      AnyKinRotational Rot={
        AnySeg &ref2=...ForcePlate;
        AnySeg &ref1=...Limb1;
        Type=PlanarAngles;
      };
      
      
      AnyKinMeasureOrg lx={    AnyKinLinear &ref=.Lin;MeasureOrganizer ={0};   };
      AnyKinMeasureOrg ly={    AnyKinLinear &ref=.Lin;MeasureOrganizer ={1};   };
      AnyKinMeasureOrg lz={    AnyKinLinear &ref=.Lin;MeasureOrganizer ={2};   };
      AnyKinMeasureOrg rx={    AnyKinRotational &ref=.Rot;MeasureOrganizer ={0};   };
      AnyKinMeasureOrg ry={    AnyKinRotational &ref=.Rot;MeasureOrganizer ={1};   };
      AnyKinMeasureOrg rz={    AnyKinRotational &ref=.Rot;MeasureOrganizer ={2};   };
      
      AnyGeneralMuscle FxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..InContactMuscle;    };
      
      AnyGeneralMuscle MxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..InContactMuscle;    };
    };
    
    AnyFolder PlateGroundReactions={
      
      AnyKinLinear Lin={
        Ref=0;
        AnySeg &ref2=...ForcePlate;
      };
      
      AnyKinRotational Rot={
        AnySeg &ref2=...ForcePlate;
        Type=PlanarAngles;
      };    
      
      AnyKinMeasureOrg lx={ AnyKinLinear &ref=.Lin;MeasureOrganizer ={0};};
      AnyKinMeasureOrg ly={ AnyKinLinear &ref=.Lin;MeasureOrganizer ={1};};
      AnyKinMeasureOrg lz={ AnyKinLinear &ref=.Lin;MeasureOrganizer ={2};};
      AnyKinMeasureOrg rx={ AnyKinRotational &ref=.Rot;MeasureOrganizer ={0};};
      AnyKinMeasureOrg ry={ AnyKinRotational &ref=.Rot;MeasureOrganizer ={1};};
      AnyKinMeasureOrg rz={ AnyKinRotational &ref=.Rot;MeasureOrganizer ={2};};
      
      AnyGeneralMuscle FxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..NoContactMuscle;    };
      
      AnyGeneralMuscle MxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..NoContactMuscle;    };
    };
  };
  
  
  
  AnyFolder ContactDetectionLimb2 ={
    
    
    
    
    
    AnyVec3 P1= .Limb2.HeelContactNodeLow.r;
    AnyVar P1Vel= vnorm(.Limb2.HeelContactNodeLow.rDot,2);
    AnyRefNode &HeelNode= .Limb2.HeelContactNodeLow;
    
    AnyVec3 P2= .Limb2.ToeLateralContactNode.r;
    AnyVar P2Vel= vnorm(.Limb2.HeelContactNodeLow.rDot,2);
    AnyRefNode &ToeNode= .Limb2.ToeLateralContactNode;
    
    
    
    #if VerticalDirection=="X" 
    AnyIntArray Index={1,2,0};
    #endif
    
    #if VerticalDirection=="Y" 
    AnyIntArray Index={0,2,1};
    #endif
    
    
    #if VerticalDirection=="Z" 
    AnyIntArray Index={0,1,2};
    #endif
    
    AnyFolder NodeWithInBox={
      
      // A
      // l
      // l 
      // 
      //
      // 1 ----------- 2    ---> X
      //
      //
      //     p1 or p2
      //
      //
      // 4 ----------- 3
      
      //2 decide if node is inside bc
      //3 decide if node is within contact limits of plate
      
      AnyVec3 n1=..Corners.c01.r;
      AnyVec3 n3=..Corners.c03.r;
      AnyVar  P1Cond1Pos = iffun(ltfun( .P1[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P1Cond2Pos = iffun(gtfun( .P1[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P1Cond3Pos = iffun(ltfun( .P1[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P1Cond4Pos = iffun(gtfun( .P1[.Index[1]],  n3[.Index[1]]),  1,  0);
      
      AnyVar  P1Cond1Neg = iffun(gtfun( .P1[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P1Cond2Neg = iffun(ltfun( .P1[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P1Cond3Neg = iffun(gtfun( .P1[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P1Cond4Neg = iffun(ltfun( .P1[.Index[1]],  n3[.Index[1]]),  1,  0);

      AnyVar  P1Cond5 = iffun(ltfun( .P1[.Index[2]],  n1[.Index[2]]+HeightTolerance),  1, 0 );
      AnyVar  P1Cond6 = iffun(gtfun( .P1[.Index[2]],  n1[.Index[2]]-HeightTolerance),  1, 0 );
      
      AnyVar  P1WithinBoxPos=  andfun(andfun(andfun(P1Cond1Pos,P1Cond2Pos),andfun(P1Cond3Pos, P1Cond4Pos)),andfun(P1Cond5,P1Cond6));
      AnyVar  P1WithinBoxNeg=  andfun(andfun(andfun(P1Cond1Neg,P1Cond2Neg),andfun(P1Cond3Neg, P1Cond4Neg)),andfun(P1Cond5,P1Cond6));
      AnyVar  P1WithinBox=  orfun(P1WithinBoxPos,P1WithinBoxNeg);
      AnyVar  P1OutsideBox=  iffun(P1WithinBox,0,1);
      
      
      AnyVar  P2Cond1Pos = iffun(ltfun( .P2[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P2Cond2Pos = iffun(gtfun( .P2[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P2Cond3Pos = iffun(ltfun( .P2[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P2Cond4Pos = iffun(gtfun( .P2[.Index[1]],  n3[.Index[1]]),  1,  0);

      AnyVar  P2Cond1Neg = iffun(gtfun( .P2[.Index[0]],  n3[.Index[0]]),  1,  0);
      AnyVar  P2Cond2Neg = iffun(ltfun( .P2[.Index[0]],  n1[.Index[0]]),  1,  0);
      AnyVar  P2Cond3Neg = iffun(gtfun( .P2[.Index[1]],  n1[.Index[1]]),  1,  0);
      AnyVar  P2Cond4Neg = iffun(ltfun( .P2[.Index[1]],  n3[.Index[1]]),  1,  0);
      
      AnyVar  P2Cond5 = iffun(ltfun( .P2[.Index[2]],  n1[.Index[2]]+HeightTolerance),  1, 0 );
      AnyVar  P2Cond6 = iffun(gtfun( .P2[.Index[2]],  n1[.Index[2]]-HeightTolerance),  1, 0 );

      AnyVar  P2WithinBoxPos=  andfun(andfun(andfun(P2Cond1Pos,P2Cond2Pos),andfun(P2Cond3Pos, P2Cond4Pos)),andfun(P2Cond5,P2Cond6));
      AnyVar  P2WithinBoxNeg=  andfun(andfun(andfun(P2Cond1Neg,P2Cond2Neg),andfun(P2Cond3Neg, P2Cond4Neg)),andfun(P2Cond5,P2Cond6));
      AnyVar  P2WithinBox=  orfun(P2WithinBoxPos,P2WithinBoxNeg);
      
      AnyVar  P2OutsideBox=  iffun(P2WithinBox,0,1);
      
      
      AnyVar WithinBox =orfun(P1WithinBox,P2WithinBox);
      AnyVar OutsideBox=  iffun(WithinBox,0,1);
      
      AnyVar WithinBoxAndVelBelowThreshold =WithinBox*iffun(ltfun(.P1Vel,VelThreshold),1,0);
      AnyVar OutsideBoxOrVelHigherThanThreshold=  iffun(WithinBoxAndVelBelowThreshold ,0,1);
    };  
    
    AnyMuscleModelUsr1 InContactMuscle = {
      F0 = 0;
      S = .NodeWithInBox.WithinBoxAndVelBelowThreshold *10000;
    };
    
    AnyMuscleModelUsr1 NoContactMuscle = {
      AnyVar Limb1Contact=iffun(eqfun(..ContactDetectionLimb1.NodeWithInBox.WithinBoxAndVelBelowThreshold ,1.0),0.0,1.0); //equal 0 if limb1 in contact
      S =Limb1Contact*.NodeWithInBox.OutsideBoxOrVelHigherThanThreshold*10000;
      F0 = 0;
    };
    
    
    AnyFolder PlateFootReactions={
      
      AnyKinLinear Lin={
        Ref=0;
        AnySeg &ref2=...ForcePlate;
        AnySeg &ref1=...Limb2;
      };
      
      AnyKinRotational Rot={
        AnySeg &ref2=...ForcePlate;
        AnySeg &ref1=...Limb2;
        Type=PlanarAngles;
      };
      
      
      AnyKinMeasureOrg lx={    AnyKinLinear &ref=.Lin;MeasureOrganizer ={0};   };
      AnyKinMeasureOrg ly={    AnyKinLinear &ref=.Lin;MeasureOrganizer ={1};   };
      AnyKinMeasureOrg lz={    AnyKinLinear &ref=.Lin;MeasureOrganizer ={2};   };
      AnyKinMeasureOrg rx={    AnyKinRotational &ref=.Rot;MeasureOrganizer ={0};   };
      AnyKinMeasureOrg ry={    AnyKinRotational &ref=.Rot;MeasureOrganizer ={1};   };
      AnyKinMeasureOrg rz={    AnyKinRotational &ref=.Rot;MeasureOrganizer ={2};   };
      
      AnyGeneralMuscle FxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle FzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..InContactMuscle;    };
      
      AnyGeneralMuscle MxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..InContactMuscle;    };
      AnyGeneralMuscle MzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..InContactMuscle;    };
      
      
      
    };
    
    AnyFolder PlateGroundReactions={
      
      AnyKinLinear Lin={
        Ref=0;
        AnySeg &ref2=...ForcePlate;
      };
      
      AnyKinRotational Rot={
        AnySeg &ref2=...ForcePlate;
        Type=PlanarAngles;
      };    
      
      AnyKinMeasureOrg lx={ AnyKinLinear &ref=.Lin;MeasureOrganizer ={0};};
      AnyKinMeasureOrg ly={ AnyKinLinear &ref=.Lin;MeasureOrganizer ={1};};
      AnyKinMeasureOrg lz={ AnyKinLinear &ref=.Lin;MeasureOrganizer ={2};};
      AnyKinMeasureOrg rx={ AnyKinRotational &ref=.Rot;MeasureOrganizer ={0};};
      AnyKinMeasureOrg ry={ AnyKinRotational &ref=.Rot;MeasureOrganizer ={1};};
      AnyKinMeasureOrg rz={ AnyKinRotational &ref=.Rot;MeasureOrganizer ={2};};
      
      AnyGeneralMuscle FxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ly; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle FzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.lz; AnyMuscleModel &ref2=..NoContactMuscle;    };
      
      AnyGeneralMuscle MxPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MyPos = {ForceDirection = 1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MzPos = {ForceDirection = 1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MxNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rx; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MyNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.ry; AnyMuscleModel &ref2=..NoContactMuscle;    };
      AnyGeneralMuscle MzNeg = {ForceDirection = -1; AnyKinMeasure &ref1=.rz; AnyMuscleModel &ref2=..NoContactMuscle;    };
      
    };
  };
};



