

#class_template CreateMarker_BVH_AMMR (MarkerName, MarkerPlacementOnAMMR, MarkerPlacementOnBVH, WeightX,WeightY,WeightZ, OptX, OptY, OptZ, UseScaleFunctionForMarkerOnAMMR, Model1, Model2, Model3){
  
  AnyVec3 RGB={1,0,0};  //color of initial markers
  
  
  AnyFolder &Macro=  Main.ModelSetup.Macros ;
   Macro={
    AnyStringVar Set##MarkerName = ("classoperation "+  CompleteNameOf(.sRelOptEdit) + " " + strquote("Set Value") +  strformat ("\n")+ "classoperation Main " + strquote("Update Values") + strformat ("\n"));
  };

  
  #var AnyVec3 sRelOpt ;  // Variable with obligatory initialization
  #var AnyVec3 sRelOnBVHSeg; // Variable with obligatory initialization
  
  #if OptX =="Off" 
  
    #if OptY=="On" 
      #if OptZ=="On" 
        AnyVec3 sRelOptEdit = (sRelOpt);
      #endif      
    
      #if OptZ=="Off" 
        AnyVec3 sRelOptEdit = (sRelOpt);
      #endif      
    #endif        
  

    #if OptY=="Off" 
      #if OptZ=="On" 
        AnyVec3 sRelOptEdit = (sRelOpt);
      #endif      
    
      #if OptZ=="Off" 
        AnyVec3 sRelOptEdit = DesignVar(sRelOpt); //make it a design var ! because it will not be otherwise
      #endif      
    #endif        
  

 #endif
              
  
  #if OptX =="On" 
   
    #if OptY=="On" 
      #if OptZ=="On" 
        AnyVec3 sRelOptEdit = (sRelOpt); 
      #endif      
    
      #if OptZ=="Off" 
        AnyVec3 sRelOptEdit = (sRelOpt);
      #endif      
    #endif        
  

    #if OptY=="Off" 
      #if OptZ=="On" 
        AnyVec3 sRelOptEdit = (sRelOpt);
      #endif      
    
      #if OptZ=="Off" 
        AnyVec3 sRelOptEdit = (sRelOpt);
      #endif      
    #endif        
  
 
 #endif
 
 
 
 AnyFolder &InsertionNode1 =Main.Studies.HumanModel.BodyModel.MarkerPlacementOnAMMR;

 AnyFolder& InsertionNodeOnBVH1 = MarkerPlacementOnBVH;
 
 #if Model1 + Model2 == 1
  
  InsertionNode1 =
  {
    AnyRefNode MarkerName=
    {
      //sRel=.Scale(..sRelOptEdit);
      //sRel=..sRelOptEdit;
      
      #if UseScaleFunctionForMarkerOnAMMR >= 1
        sRel=.Scale(..sRelOptEdit);
      #else
        sRel=..sRelOptEdit;
      #endif
     
      #if OptX =="On" 
       AnyDrawVector XDir =   
       {
         Line.RGB={0,1,0};
         Vec = {WeightX*size,0, 0};
         #include "DrawVector.any"
         Text="X";
       };
      #endif
      
      #if OptY =="On"       
       AnyDrawVector YDir =   
       {
         Line.RGB={0,1,0};
         Vec = {0,WeightY*size, 0};
         #include "DrawVector.any"
         Text="Y";
       };
      #endif      
      
      #if OptZ =="On"       
       AnyDrawVector ZDir =   
       {
         Line.RGB={0,1,0};
         Vec = {0,0,WeightZ*size};
         #include "DrawVector.any"
         Text="Z";
       };
      #endif
      
      
      #if OptX =="Off" 
       AnyDrawVector XDir =   
       {
         Line.RGB={1,0,0};
         Vec = {WeightX*size,0, 0};
         Text="X";
         #include "DrawVector.any"
       };
      #endif
      
      #if OptY =="Off" 
       AnyDrawVector YDir =   
       {
         Vec = {0,WeightY*size, 0};
         Line.RGB={1,0,0};
         #include "DrawVector.any"
         Text="Y";
       };
      #endif      
      
      #if OptZ =="Off" 
       AnyDrawVector ZDir =   
       {
         Line.RGB={1,0,0};
         Vec = {0,0,size*WeightZ};
         #include "DrawVector.any"
         Text="Z";
       };
      #endif      
      
      AnyDrawNode drw_node = 
      {
        RGB = {1, 0, 0};
        ScaleXYZ = 0.01*{1, 1, 1};     
      };
    }; //create the marker 
  };
  
  InsertionNodeOnBVH1 = 
  {
    AnyRefNode MarkerName=
    {
      sRel = ..sRelOnBVHSeg ;
      
      AnyDrawNode drw_node = 
      {
        RGB = {0, 0, 1};
        ScaleXYZ = 0.01*{1, 1, 1};        
      };
    };
  };
  
  AnyFolder &DriverFolder =Main.Studies.KinematicStudyForParameterIdentification.ModelEnvironmentConnection.Drivers;
  DriverFolder =
  {
    AnyFolder MarkerName =
    {     
      AnyFunConst WeightFun ={Value = {WeightX,WeightY,WeightZ};};

//      AnyKinDriverMarker Driver =    
//      {
//        Linear.Ref=0;
//        AnyRefFrame &ref1 = ...InsertionNode1.MarkerName;
//        AnyParamFun &ref2 = Main.ModelSetup.C3DFileData.Points.Markers.MarkerName.PosInterpol;
//        WeightFun={&.WeightFun};
//     
//        AnyDrawKinMeasure Draw =         
//        {
//         Visible = On;
//         Opacity = 1;
//         Label = Off;
//         Size = 0.01;
//         Line = Off;
//         Text = "";
//         TextSize = 30;
//        };
//      };
      
      AnyKinEq Driver = 
      {
        AnyKinLinear lin = 
        {
          Ref = 0;
          AnyRefFrame& ref1 = ....InsertionNode1.MarkerName;
          AnyRefFrame& ref2 = ....InsertionNodeOnBVH1.MarkerName;
          
//         AnyDrawKinMeasure Draw =         
//         {
//          Visible = On;
//          Opacity = 1;
//          Label = Off;
//          Size = 0.01;
//          Line = Off;
//          Text = "";
//          TextSize = 30;
//         };          
        };
                
        WeightFun={&.WeightFun};
        CType = {Soft, Soft, Soft};
        Reaction.Type = {Off, Off, Off};
        
        
      };
      
    };
  };
  
  #if Model1 == 1
  AnyFolder &ref=  Main.Studies.ParameterIdentification ;
  
  ref=
  {
      
    #if OptX =="On" 
    
    AnyDesVar MarkerName##X = {      Val =..sRelOptEdit[0];    
      Min=-100;
      Max=100;      
    };
    
    #endif
    
    #if OptY =="On"
    AnyDesVar MarkerName##Y = {    Val = ..sRelOptEdit[1];   
      Min=-100;
      Max=100;      
      
    };
    
    #endif
    
    #if OptZ =="On"
    AnyDesVar MarkerName##Z = {      Val = ..sRelOptEdit[2];   
      Min=-100;
      Max=100;      
    };
    
    #endif    
  };
  #endif
  
  #endif 
  
  
  
  
  #if Model3 == 1
  
  AnyFolder &InsertionNode2 =Main.Studies.HumanModel.BodyModel.MarkerPlacementOnAMMR;
  AnyFolder& InsertionNodeOnBVH2 = MarkerPlacementOnBVH;
  
  InsertionNode2 =
  {
    AnyRefNode MarkerName=
    {
      #if UseScaleFunctionForMarkerOnAMMR >= 1
        sRel=.Scale(..sRelOptEdit);
      #else
        sRel=..sRelOptEdit;
      #endif
      
      AnyDrawNode DrawMarker = 
      {
        Visible = On;
        Opacity = 0.5;
        RGB = {1, 0, 0};
        ScaleXYZ = 0.01 * {1, 1, 1};
      };
    };//create the marker 
  };
  
  InsertionNodeOnBVH2 = 
  {
    AnyRefNode MarkerName=
    {
      sRel = ..sRelOnBVHSeg ;
      
      AnyDrawNode drw_node = 
      {
        Visible = On;
        Opacity = 0.5;
        RGB = {0, 0, 1};
        ScaleXYZ = 0.01*{1, 1, 1};        
      };
    };
  };  
  
//  Main.Studies.InverseDynamicStudy.EnvironmentModel.DrawC3DMarkers = {
//    
//      AnyDrawVector MarkerName = 
//      {
//        Visible = On;
//        Opacity = 0.5;
//        Vec = {Main.ModelSetup.C3DFileData.Points.Markers.MarkerName.PosInterpol(Main.Studies.InverseDynamicStudy.t)}[0];
//        PointAway = On;
//        GlobalCoord = On;
//        Line = 
//        {
//          Style = Line3DStyleFull;
//          Thickness = 0.0000000001;
//          RGB = {0, 0, 1};
//          End = 
//          {
//            Style = Line3DCapStyleEllipsoid;
//            RGB = {0, 0, 1};
//            Thickness = 0.02;
//            Length = 0.04;
//          };
//        };
//        AnyRefFrame &Globalref = Main.Studies.InverseDynamicStudy.EnvironmentModel.GlobalRef;
//      };
//  };

  
  
  
  AnyFolder &ref2=  Main.Studies.LoadParametersOptimizationResults;
  
  ref2=
  {
    #if OptX =="On" 
    
    AnyDesVar MarkerName##X = {      Val =..sRelOptEdit[0];    
      Min=-100;
      Max=100;      
    };
    
    #endif
    
    #if OptY =="On"
    AnyDesVar MarkerName##Y = {    Val = ..sRelOptEdit[1];   
      Min=-100;
      Max=100;      
      
    };
    
    #endif
    
    #if OptZ =="On"
    AnyDesVar MarkerName##Z = {      Val = ..sRelOptEdit[2];   
      Min=-100;
      Max=100;      
    };
    
    #endif
  
  };
  #endif 
  
}; // End of InsertSegmentClass




