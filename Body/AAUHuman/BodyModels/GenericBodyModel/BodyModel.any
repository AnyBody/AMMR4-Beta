
AnyFolder BodyModel = {
  
  // The folder containing the selected human model output.
AnyFolder SelectedOutput = {
  AnyFolder Trunk = {};
};
  
  
  // Check for non-allowed combinations
  // **********************************
    
  
  #define ERROR (ErrorMessage) AnyMessage UnhallowedCombination = { TriggerPreProcess = On; Type = MSG_ErrorFatal; Message = ErrorMessage; };

  
  // The errors are checked one inside the other to avoid defining the AnyMessage or UNHALLOWED_COMBINATION more than one time
  #if TRUNK + TRUNK_NECK == 2
  ERROR ("Unhallowed combination: Two trunks are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if TRUNK_NECK + TRUNK_NECK_SIMPLE_MUSCLES + TRUNK_NECK_SIMPLE_MUSCLES_ONLY_ON_NECK == 3
  ERROR ("Unhallowed combination: Two trunks are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE + RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK + RIGHT_ARM_MUS_3E == 4
  ERROR ("Unhallowed combination: Three right arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK + RIGHT_ARM_MUS_3E == 3
  ERROR ("Unhallowed combination: Two right arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE + RIGHT_ARM_MUS_3E == 3
  ERROR ("Unhallowed combination: Two right arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE + RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK == 3
  ERROR ("Unhallowed combination: Two right arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK + LEFT_ARM_MUS_3E == 4
  ERROR ("Unhallowed combination: Three left arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK + LEFT_ARM_MUS_3E == 3
  ERROR ("Unhallowed combination: Two left arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_MUS_3E == 3
  ERROR ("Unhallowed combination: Two left arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK == 3
  ERROR ("Unhallowed combination: Two left arms are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_LEG + RIGHT_LEG_SIMPLE_MUSCLES + RIGHT_LEG_MUS_3E == 3
  ERROR ("Unhallowed combination: Two right legs are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if LEFT_LEG + LEFT_LEG_SIMPLE_MUSCLES + LEFT_LEG_MUS_3E == 3
  ERROR ("Unhallowed combination: Two left legs are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_LEG_TD + RIGHT_LEG_TD_SIMPLE_MUSCLES + RIGHT_LEG_TD_MUS_3E == 3
  ERROR ("Unhallowed combination: Two right legs are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if LEFT_LEG_TD + LEFT_LEG_TD_SIMPLE_MUSCLES + LEFT_LEG_TD_MUS_3E == 3
  ERROR ("Unhallowed combination: Two left legs are being included.")
  #define UNHALLOWED_COMBINATION
  #else

  
  #if LEFT_LEG_TD + RIGHT_LEG == 2
  ERROR ("Unhallowed combination: Two different leg models are included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if LEFT_LEG + RIGHT_LEG_TD == 2
  ERROR ("Unhallowed combination: Two different leg models are included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_LEG_TD + RIGHT_LEG == 2
  ERROR ("Unhallowed combination: Two right legs are being included.")
  #define UNHALLOWED_COMBINATION
  #else

  
  #if LEFT_LEG_TD + LEFT_LEG == 2
  ERROR ("Unhallowed combination: Two left legs are being included.")
  #define UNHALLOWED_COMBINATION
  #else
  
  
  #if RIGHT_ARM == 1
    #if TRUNK + TRUNK_NECK == 0
    ERROR ("Unhallowed combination: The arms are included without the trunk.")
    #define UNHALLOWED_COMBINATION
    #else
    #endif
  #else
  
  
  #if LEFT_ARM == 1
    #if TRUNK + TRUNK_NECK == 0
    ERROR ("Unhallowed combination: The arms are included without the trunk.")
    #define UNHALLOWED_COMBINATION
    #else
    #endif
  #else

  
  #if RIGHT_LEG + LEFT_LEG + RIGHT_LEG_TD + LEFT_LEG_TD == 0
  #else
    #if TRUNK + TRUNK_NECK == 0
    ERROR ("Unhallowed combination: The legs are included without the trunk.")
    #define UNHALLOWED_COMBINATION
    #else
    #endif
    
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  #endif
  
  // Include the selected body parts
  // *******************************
  
  // The body parts are included only if there is no unhallowed combination detected
  #ifdef UNHALLOWED_COMBINATION
  #else
  
  #if TRUNK == 1
  
    #if TRUNK_SIMPLE_MUSCLES == 1
    #include  "TrunkSimpleMuscles.any"
    #else
    #include  "TrunkNoMuscles.any"
    #define TRUNK_NO_MUSCLES
    #endif
    
    IndividualMasses = {AnyVar TrunkMass = .Trunk.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar TrunkMass = 0;};
  #endif
  
  
  
  
  #if TRUNK_NECK == 1
  
    #if TRUNK_NECK_SIMPLE_MUSCLES + TRUNK_NECK_SIMPLE_MUSCLES_ONLY_ON_NECK == 0
    #include  "TrunkNeckNoMuscles.any"
    #define TRUNK_NO_MUSCLES
    #else
    #endif
  
    #if TRUNK_NECK_SIMPLE_MUSCLES == 1
    #include  "TrunkNeckSimpleMuscles.any"
    #else
    #endif
    
    #if TRUNK_NECK_SIMPLE_MUSCLES_ONLY_ON_NECK == 1
    #include  "TrunkNeckSimpleMusclesOnlyNeck.any"
    #else
    #endif
    
    IndividualMasses = {AnyVar TrunkNeckMass = .Trunk.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar TrunkNeckMass = 0;};
  #endif
  
  
  
  
  #if RIGHT_ARM == 1
  
    #if RIGHT_ARM_SIMPLE_MUSCLE +RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK + RIGHT_ARM_MUS_3E == 0
    #include  "RightArmNoMuscles.any"
    #else
    #endif
  
    #if RIGHT_ARM_SIMPLE_MUSCLE == 1
    #include  "RightArmSimpleMuscles.any"
    #else
    #endif
    
    #if RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK == 1
    #include  "RightArmSimpleMusclesOnlyNeck.any"
    #else
    #endif
  
    #if RIGHT_ARM_MUS_3E == 1
    #include  "RightArmMus_3E.any"
    #else
    #endif
    
    IndividualMasses = {AnyVar RightArmMass = .Right.ShoulderArm.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar RightArmMass = 0;};
  #endif
  
  
  
  
  #if LEFT_ARM == 1
  
    #if LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK + LEFT_ARM_MUS_3E == 0
    #include  "LeftArmNoMuscles.any"
    #else
    #endif
  
    #if LEFT_ARM_SIMPLE_MUSCLES == 1
    #include  "LeftArmSimpleMuscles.any"
    #else
    #endif
    
    #if LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK == 1
    #include  "LeftArmSimpleMusclesOnlyNeck.any"
    #else
    #endif
  
    #if LEFT_ARM_MUS_3E == 1
    #include  "LeftArmMus_3E.any"
    #else
    #endif
    
    IndividualMasses = {AnyVar LeftArmMass = .Left.ShoulderArm.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar LeftArmMass = 0;};
  #endif
  
  
  
  
  #if RIGHT_LEG == 1
  
    #if RIGHT_LEG_SIMPLE_MUSCLES + RIGHT_LEG_MUS_3E == 0
    #include  "RightLegNoMuscles.any"
    #else
    #endif
  
    #if RIGHT_LEG_SIMPLE_MUSCLES == 1
    #include  "RightLegSimpleMuscles.any"
    
      #ifdef TRUNK_NO_MUSCLES
      #include "RightPsoas.any"
      #else
      #endif
      
    #else
    #endif
  
    #if RIGHT_LEG_MUS_3E == 1
    #include  "RightLegMus_3E.any"
    
      #ifdef TRUNK_NO_MUSCLES
      #include "RightPsoas.any"
      #else
      #endif
      
    #else
    #endif
    
    IndividualMasses = {AnyVar RightLegMass = .Right.Leg.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar RightLegMass = 0;};
  
    #if RIGHT_LEG_TD == 0
    Trunk = {
      AnyRefNode &PsoasMajorRightReference=.Trunk.SegmentsLumbar.PelvisSeg.Right;
    };
    #else
    #endif
    
  #endif
  
  
  
  
  #if LEFT_LEG == 1
  
    #if LEFT_LEG_SIMPLE_MUSCLES + LEFT_LEG_MUS_3E == 0
    #include  "LeftLegNoMuscles.any"
    #else
    #endif
  
    #if LEFT_LEG_SIMPLE_MUSCLES == 1
    #include  "LeftLegSimpleMuscles.any"
      #ifdef TRUNK_NO_MUSCLES
      #include "LeftPsoas.any"
      #else
      #endif
    #else
    #endif
  
    #if LEFT_LEG_MUS_3E == 1
    #include  "LeftLegMus_3E.any"
      #ifdef TRUNK_NO_MUSCLES
      #include "LeftPsoas.any"
      #else
      #endif
    #else
    #endif
    
    IndividualMasses = {AnyVar LeftLegMass = .Left.Leg.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar LeftLegMass = 0;};
  
    #if LEFT_LEG_TD == 0
    Trunk = {
      AnyRefNode &PsoasMajorLeftReference=.Trunk.SegmentsLumbar.PelvisSeg.Left;
    };
    #else
    #endif
  
  #endif
  
  
  
  #if RIGHT_LEG_TD == 1
  
    #if RIGHT_LEG_TD_SIMPLE_MUSCLES + RIGHT_LEG_TD_MUS_3E == 0
    #include  "RightLegTDNoMuscles.any"
    #else
    #endif
  
    #if RIGHT_LEG_TD_SIMPLE_MUSCLES == 1
    #include  "RightLegTDSimpleMuscles.any"
      #ifdef TRUNK_NO_MUSCLES
      #include "RightPsoas.any"
      #else
      #endif
    #else
    #endif
  
    #if RIGHT_LEG_TD_MUS_3E == 1
    #include  "RightLegTDMus_3E.any"
      #ifdef TRUNK_NO_MUSCLES
      #include "RightPsoas.any"
      #else
      #endif
    #else
    #endif
    
    IndividualMasses = {AnyVar RightLegTDMass = .Right.Leg.MassSummation.Mass;};
      
  #else
  IndividualMasses = {AnyVar RightLegTDMass = 0;};
  #endif
  
  
  
  #if LEFT_LEG_TD == 1
  
    #if LEFT_LEG_TD_SIMPLE_MUSCLES + LEFT_LEG_TD_MUS_3E == 0
    #include  "LeftLegTDNoMuscles.any"
    #else
    #endif
  
    #if LEFT_LEG_TD_SIMPLE_MUSCLES == 1
    #include  "LeftLegTDSimpleMuscles.any"
      #ifdef TRUNK_NO_MUSCLES
      #include "LeftPsoas.any"
      #else
      #endif
    #else
    #endif
  
    #if LEFT_LEG_TD_MUS_3E == 1
    #include  "LeftLegTDMus_3E.any"
      #ifdef TRUNK_NO_MUSCLES
      #include "LeftPsoas.any"
      #else
      #endif
    #else
    #endif
    
    IndividualMasses = {AnyVar LeftLegTDMass = .Left.Leg.MassSummation.Mass;};
      
  #else
  IndividualMasses = {AnyVar LeftLegTDMass = 0;};
  #endif
  
  
  
//  #if RIGHT_LEG + LEFT_LEG + RIGHT_LEG_TD + LEFT_LEG_TD == 0
//  IndividualMasses = {AnyVar PelvisWithoutTrunkMass = 0;};
//  #else
//    #if TRUNK == 0
//    #include "PelvisWithoutTrunk.any"
//    IndividualMasses = {AnyVar PelvisWithoutTrunkMass = .Trunk.SegmentsLumbar.PelvisSeg.Mass;};
//    #else
//    IndividualMasses = {AnyVar PelvisWithoutTrunkMass = 0;};
//    #endif
//  #endif

  
  
  
  // Create the needed folders
  // *************************
  
  #if RIGHT_ARM + RIGHT_LEG + RIGHT_LEG_TD == 0
  #else
  #include "RightFolder.any"
  #endif
  
  #if LEFT_ARM + LEFT_LEG + LEFT_LEG_TD == 0
  #else
  #include "LeftFolder.any"
  #endif
  
  
  AnyFolder MannequinValuesFromModel = {
    AnyFolder AnyFolder_Posture = {  
    };
  };
  
  
  AnyFolder Interface = {};
  
  AnyFolder IndividualMasses = {};
  
  // Total mass of the human model
  AnyVar TotalBodyMass = IndividualMasses.RightLegMass 
  + IndividualMasses.LeftLegMass 
  + IndividualMasses.RightLegTDMass 
  + IndividualMasses.LeftLegTDMass 
  + IndividualMasses.RightArmMass 
  + IndividualMasses.LeftArmMass 
  + IndividualMasses.TrunkMass 
  + IndividualMasses.TrunkNeckMass;
//  + IndividualMasses.PelvisWithoutTrunkMass;
    
#endif

}; // end BodyModel




//include the calibration study
AnyFolder &HumanFolderRef=BodyModel;
#include "CalibrationSequence.any"




