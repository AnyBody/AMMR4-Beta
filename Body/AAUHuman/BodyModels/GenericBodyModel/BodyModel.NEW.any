AnyFolder BodyModel = {
  
  // The folder containing the selected human model output.
  AnyFolder SelectedOutput = {
    AnyFolder Trunk = {};
  };
  
 
  // Check for non-allowed combinations
  // **********************************
    
  
  #define ERROR (ErrorMessage) AnyMessage UnhallowedCombination = { TriggerPreProcess = On; Type = MSG_ErrorFatal; Message = ErrorMessage; };
  
  #ifdef LumbarLigaments 
     #if TRUNK_DISC_STIFFNESS_NORMAL + TRUNK_SIMPLE_MUSCLES == 0
	ERROR ("Combination is not allowed: Lumbar spine ligaments require normal disc stiffness or muscles formulation to be used.")
        #define UNHALLOWED_COMBINATION
     #endif
  #endif
  
  #if TRUNK + TRUNK_NECK == 2
  ERROR ("Combination is not allowed: Two trunks are being included.")
  #define UNHALLOWED_COMBINATION
  #endif
  
  
  #if TRUNK_NECK + TRUNK_NECK_SIMPLE_MUSCLES + TRUNK_NECK_SIMPLE_MUSCLES_ONLY_ON_NECK == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two trunks are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
    
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE + RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK + RIGHT_ARM_MUS_3E == 4
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Three right arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK + RIGHT_ARM_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two right arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE + RIGHT_ARM_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two right arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if RIGHT_ARM + RIGHT_ARM_SIMPLE_MUSCLE + RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two right arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK + LEFT_ARM_MUS_3E == 4
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Three left arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK + LEFT_ARM_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two left arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two left arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if LEFT_ARM + LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two left arms are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if RIGHT_LEG + RIGHT_LEG_SIMPLE_MUSCLES + RIGHT_LEG_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two right legs are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if LEFT_LEG + LEFT_LEG_SIMPLE_MUSCLES + LEFT_LEG_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two left legs are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if RIGHT_LEG_TD + RIGHT_LEG_TD_SIMPLE_MUSCLES + RIGHT_LEG_TD_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two right legs are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if LEFT_LEG_TD + LEFT_LEG_TD_SIMPLE_MUSCLES + LEFT_LEG_TD_MUS_3E == 3
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two left legs are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif

  
  #if LEFT_LEG_TD + RIGHT_LEG == 2
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two different leg models are included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if LEFT_LEG + RIGHT_LEG_TD == 2
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two different leg models are included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if RIGHT_LEG_TD + RIGHT_LEG == 2
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two right legs are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif

  
  #if LEFT_LEG_TD + LEFT_LEG == 2
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two left legs are being included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if (RIGHT_ARM) * (LEFT_ARM) * (RIGHT_SHOULDER_RHYTHM + LEFT_SHOULDER_RHYTHM) == 1
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two different shoulder rhythms are included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if (RIGHT_ARM) * (LEFT_ARM) * (RIGHT_DETAILLED_HAND + LEFT_DETAILLED_HAND) == 1
    #ifdef UNHALLOWED_COMBINATION
    #else
    ERROR ("Combination is not allowed: Two different Hand models are included.")
    #define UNHALLOWED_COMBINATION
    #endif
  #endif
  
  
  #if ((TRUNK_NECK)*(TRUNK_NECK_SIMPLE_MUSCLES) + (TRUNK_NECK)*(TRUNK_NECK_SIMPLE_MUSCLES_ONLY_ON_NECK)) == 1
    #if (RIGHT_ARM)*(LEFT_ARM)*(RIGHT_ARM_SIMPLE_MUSCLE + RIGHT_ARM_SIMPLE_MUSCLE_ONLY_ON_NECK + RIGHT_ARM_MUS_3E) * (LEFT_ARM_SIMPLE_MUSCLES + LEFT_ARM_SIMPLE_MUSCLES_ONLY_ON_NECK + LEFT_ARM_MUS_3E) == 0
      #ifdef UNHALLOWED_COMBINATION
      #else
      ERROR ("Combination is not allowed: As some neck muscles are in the shoulder model, the neck model with muscles must be used with the neck part of the shoulder muscles to be complete.")
      #define UNHALLOWED_COMBINATION
      #endif
    #endif
  #endif

  
  #if RIGHT_ARM == 1
    #if TRUNK + TRUNK_NECK == 0
      #ifdef UNHALLOWED_COMBINATION
      #else
      ERROR ("Combination is not allowed: The arms are included without the trunk.")
      #define UNHALLOWED_COMBINATION
      #endif
    #endif
  #endif
  
  
  #if LEFT_ARM == 1
    #if TRUNK + TRUNK_NECK == 0
      #ifdef UNHALLOWED_COMBINATION
      #else
      ERROR ("Combination is not allowed: The arms are included without the trunk.")
      #define UNHALLOWED_COMBINATION
      #endif
    #endif
  #endif
  
  
  #if ((RIGHT_LEG) + (LEFT_LEG) + (RIGHT_LEG_TD) + (LEFT_LEG_TD)) == 0
  #else
    #if TRUNK + TRUNK_NECK == 0
      #ifdef UNHALLOWED_COMBINATION
      #else
      ERROR ("Combination is not allowed: The legs are included without the trunk.")
      #define UNHALLOWED_COMBINATION
      #endif
    #endif
  #endif
  
  
  
  
  
  // Include the selected body parts
  // *******************************
  
  // The body parts are included only if there is no unallowed combination detected
  #ifdef UNHALLOWED_COMBINATION
  #else
  
  #if TRUNK == 1
  
    #include "TrunkModel.any"
    
    IndividualMasses = {AnyVar TrunkMass = .Trunk.MassSummation.Mass;};
  
  #else
    IndividualMasses = {AnyVar TrunkMass = 0;};
  #endif
  
  
  
  
  #if TRUNK_NECK == 1
      
    #include "TrunkNeckModel.any"
    
    IndividualMasses = {AnyVar TrunkNeckMass = .Trunk.MassSummation.Mass;};
  
  #else
    IndividualMasses = {AnyVar TrunkNeckMass = 0;};
  #endif
  
  
  
  
  #if RIGHT_ARM == 1
  
    #include "RightArmModel.any"
    
    IndividualMasses = {AnyVar RightArmMass = .Right.ShoulderArm.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar RightArmMass = 0;};
  #endif
  
  
  
  
  #if LEFT_ARM == 1
  
    #include "LeftArmModel.any"    

    IndividualMasses = {AnyVar LeftArmMass = .Left.ShoulderArm.MassSummation.Mass;};
  
  #else
  IndividualMasses = {AnyVar LeftArmMass = 0;};
  #endif
  
  
  #if RIGHT_LEG == 1
  
    #include "RightLegModel.any"
    
    IndividualMasses = {AnyVar RightLegMass = .Right.Leg.MassSummation.Mass;};
  
  #else
    IndividualMasses = {AnyVar RightLegMass = 0;};
  
    #if RIGHT_LEG_TD == 0
     Trunk = 
     {
       AnyRefNode &PsoasMajorRightReference=.Trunk.SegmentsLumbar.PelvisSeg.Right;
     };
    #else
    #endif
    
  #endif
  
  
  
  
  #if LEFT_LEG == 1
  
    #include "LeftLegModel.any"
    
    IndividualMasses = {AnyVar LeftLegMass = .Left.Leg.MassSummation.Mass;};
  
  #else
    IndividualMasses = {AnyVar LeftLegMass = 0;};
  
    #if LEFT_LEG_TD == 0
      Trunk = 
      {
        AnyRefNode &PsoasMajorLeftReference=.Trunk.SegmentsLumbar.PelvisSeg.Left;
      };
    #else
    #endif
  
  #endif
  
  
  
  #if RIGHT_LEG_TD == 1
      
    #include "RightLegTDModel.any"
    
    IndividualMasses = {AnyVar RightLegTDMass = .Right.Leg.MassSummation.Mass;};
      
  #else
    IndividualMasses = {AnyVar RightLegTDMass = 0;};
  #endif
  
  
  
  #if LEFT_LEG_TD == 1
      
    #include "LeftLegTDModel.any"
    
    IndividualMasses = {AnyVar LeftLegTDMass = .Left.Leg.MassSummation.Mass;};
      
  #else
    IndividualMasses = {AnyVar LeftLegTDMass = 0;};
  #endif
  
      
  // Create the needed folders
  // *************************
  
  #if ((RIGHT_ARM) + (RIGHT_LEG) + (RIGHT_LEG_TD)) == 0
  #else
  #include "RightFolder.any"
  #endif
  
  #if ((LEFT_ARM) + (LEFT_LEG) + (LEFT_LEG_TD)) == 0
  #else
  #include "LeftFolder.any"
  #endif
  
  
  AnyFolder MannequinValuesFromModel = {
    AnyFolder AnyFolder_Posture = {  
    };
  };
  
  
  AnyFolder Interface = {};
  
  AnyFolder IndividualMasses = {};
  
  // Total mass of the human model
  AnyVar TotalBodyMass = IndividualMasses.RightLegMass 
  + IndividualMasses.LeftLegMass 
  + IndividualMasses.RightLegTDMass 
  + IndividualMasses.LeftLegTDMass 
  + IndividualMasses.RightArmMass 
  + IndividualMasses.LeftArmMass 
  + IndividualMasses.TrunkMass 
  + IndividualMasses.TrunkNeckMass;
//  + IndividualMasses.PelvisWithoutTrunkMass;
    
#endif

}; // end BodyModel




//include the calibration study
AnyFolder &HumanFolderRef=BodyModel;
#include "CalibrationSequence.any"
// Include moment arm study
#ifndef EVALUATE_MOMENT_ARMS
  #define EVALUATE_MOMENT_ARMS 0
#endif
#if EVALUATE_MOMENT_ARMS
  #include "EvaluateMomentArmsSequence.any"
#endif


// Include moment arm study
#ifndef EVALUATE_JOINT_STRENGTH
  #define EVALUATE_JOINT_STRENGTH 0
#endif
#if EVALUATE_JOINT_STRENGTH
  #include "EvaluateJointStrengthSequence.any"
#endif

