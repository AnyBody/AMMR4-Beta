

SelectedOutput.Trunk = {
  
  
  AnyFolder JointReactionForce = {
    
    /// Lateral positive
    AnyVar SacrumPelvisMedioLateralForce = ...Trunk.JointsLumbar.SacrumPelvisJnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar SacrumPelvisProximoDistalForce = ...Trunk.JointsLumbar.SacrumPelvisJnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar SacrumPelvisAnteroPosteriorForce = ...Trunk.JointsLumbar.SacrumPelvisJnt.Constraints.Reaction.Fout[0];
    //Pelvis ref
    
    /// Lateral positive
    AnyVar L5SacrumMedioLateralForce = ...Trunk.JointsLumbar.L5SacrumJnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar L5SacrumProximoDistalForce = ...Trunk.JointsLumbar.L5SacrumJnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar L5SacrumAnteroPosteriorForce = ...Trunk.JointsLumbar.L5SacrumJnt.Constraints.Reaction.Fout[0];
    //Sacrum ref
    
    /// Lateral positive
    AnyVar L4L5MedioLateralForce = ...Trunk.JointsLumbar.L4L5Jnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar L4L5ProximoDistalForce = ...Trunk.JointsLumbar.L4L5Jnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar L4L5AnteroPosteriorForce = ...Trunk.JointsLumbar.L4L5Jnt.Constraints.Reaction.Fout[0];
    //L5 ref

    /// Lateral positive
    AnyVar L3L4MedioLateralForce = ...Trunk.JointsLumbar.L3L4Jnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar L3L4ProximoDistalForce = ...Trunk.JointsLumbar.L3L4Jnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar L3L4AnteroPosteriorForce = ...Trunk.JointsLumbar.L3L4Jnt.Constraints.Reaction.Fout[0];
    //L4 ref
    
    
    /// Lateral positive
    AnyVar L2L3MedioLateralForce = ...Trunk.JointsLumbar.L2L3Jnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar L2L3ProximoDistalForce = ...Trunk.JointsLumbar.L2L3Jnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar L2L3AnteroPosteriorForce = ...Trunk.JointsLumbar.L2L3Jnt.Constraints.Reaction.Fout[0];
    //L3 ref
    
    /// Lateral positive
    AnyVar L1L2MedioLateralForce = ...Trunk.JointsLumbar.L1L2Jnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar L1L2ProximoDistalForce = ...Trunk.JointsLumbar.L1L2Jnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar L1L2AnteroPosteriorForce = ...Trunk.JointsLumbar.L1L2Jnt.Constraints.Reaction.Fout[0];
    //L2 ref
    
    /// Lateral positive
    AnyVar T12L1MedioLateralForce = ...Trunk.JointsLumbar.T12L1Jnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar T12L1ProximoDistalForce = ...Trunk.JointsLumbar.T12L1Jnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar T12L1AnteroPosteriorForce = ...Trunk.JointsLumbar.T12L1Jnt.Constraints.Reaction.Fout[0];
    //L1 ref
    
    /// Lateral positive
    AnyVar C0C1MedioLateralForce = ...Trunk.JointsLumbar.C0C1Jnt.Constraints.Reaction.Fout[2];
    /// Distal (superior) positive
    AnyVar C0C1ProximoDistalForce = ...Trunk.JointsLumbar.C0C1Jnt.Constraints.Reaction.Fout[1];
    /// Anterior positive
    AnyVar C0C1AnteroPosteriorForce = ...Trunk.JointsLumbar.C0C1Jnt.Constraints.Reaction.Fout[0];
    /// Left positive
    AnyVar C0C1AxialMoment = ...Trunk.JointsLumbar.C0C1Jnt.Constraints.Reaction.Fout[3];
    /// Right positive
    AnyVar C0C1LateralMoment = ...Trunk.JointsLumbar.C0C1Jnt.Constraints.Reaction.Fout[4];
    //C1 thorax ref
    
    
  }; //End JointReactionForce
  
  
  
  
  
  AnyFolder JointMomentMeasure = {
    
    
    AnyVar SacrumPelvisFlexionExtensionMoment = ...Trunk.JointsLumbar.SacrumPelvisReaction.Fout[0];
    AnyVar SacrumPelvisAxialMoment = ...Trunk.JointsLumbar.SacrumPelvisReaction.Fout[1];
    AnyVar SacrumPelvisLateralMoment = ...Trunk.JointsLumbar.SacrumPelvisReaction.Fout[2];
    //Pelvis ref    
    
    AnyVar C0C1FlexionExtensionMoment = ...Trunk.JointsLumbar.NeckJntReaction.Fout[0];
    //C1 thorax ref
    
  }; //End JointMomentMeasure
  
  
  
  
  
  AnyFolder Muscles = {
    
    
    AnySearchFun MuscleList = {
        Search = "....Trunk.Muscles*.*.*.Activity";
      };
      
      AnyVar Envelope = max(MuscleList());
    
    
  }; //End Muscles
  
  
  
}; //End Trunk
