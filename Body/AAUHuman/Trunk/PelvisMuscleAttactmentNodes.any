
//These nodes are used for adding extra used by other body parts to the right 
//and left side of the segment
AnyRefNode Right= { sRel = .Scale({0.0,0.0,0.0});};
AnyRefNode Left= { sRel = .Scale({0.0,0.0,0.0});};

// Ligament Nodes    
AnyRefNode ALLNodeSuperior = {sRel = .Scale({0.058,-0.018,0});};

AnyRefNode PLLNodeSuperior = {sRel = .Scale({0.032,0.0,0});};
// End of ligament Nodes

// Multifidi Nodes
AnyRefNode MFdL4S1NodeR = {sRel = .Scale({0.023,0.007,0.026});};
AnyRefNode MFdL4S1NodeL = {sRel = {.MFdL4S1NodeR.sRel[0],.MFdL4S1NodeR.sRel[1],.MFdL4S1NodeR.sRel[2]*-1};};

AnyRefNode MFdL5S1NodeR = {sRel = .Scale({0.017,-0.008,0.019});};
AnyRefNode MFdL5S1NodeL = {sRel = {.MFdL5S1NodeR.sRel[0],.MFdL5S1NodeR.sRel[1],.MFdL5S1NodeR.sRel[2]*-1};};

AnyRefNode MFmL3S1NodeR = {sRel = .Scale({0.023,0.007,0.026});};
AnyRefNode MFmL3S1NodeL = {sRel = {.MFmL3S1NodeR.sRel[0],.MFmL3S1NodeR.sRel[1],.MFmL3S1NodeR.sRel[2]*-1};};

AnyRefNode MFmL4SacrumNodeR = {sRel = .Scale({0.000,-0.021,0.025});};
AnyRefNode MFmL4SacrumNodeL = {sRel = {.MFmL4SacrumNodeR.sRel[0],.MFmL4SacrumNodeR.sRel[1],.MFmL4SacrumNodeR.sRel[2]*-1};};

AnyRefNode MFmL5SacrumNodeR = {sRel = .Scale({0.017,-0.008,0.019});};
AnyRefNode MFmL5SacrumNodeL = {sRel = {.MFmL5SacrumNodeR.sRel[0],.MFmL5SacrumNodeR.sRel[1],.MFmL5SacrumNodeR.sRel[2]*-1};};

AnyRefNode MFtsL1S1NodeR = {sRel = .Scale({0.023,0.007,0.026});};
AnyRefNode MFtsL1S1NodeL = {sRel = {.MFtsL1S1NodeR.sRel[0],.MFtsL1S1NodeR.sRel[1],.MFtsL1S1NodeR.sRel[2]*-1};};

AnyRefNode MFtsL2S1NodeR = {sRel = .Scale({0.023,0.007,0.026});};
AnyRefNode MFtsL2S1NodeL = {sRel = {.MFtsL2S1NodeR.sRel[0],.MFtsL2S1NodeR.sRel[1],.MFtsL2S1NodeR.sRel[2]*-1};};

AnyRefNode MFtsL3LigamentNodeR = {sRel = .Scale({-0.003,-0.043,0.035});};
AnyRefNode MFtsL3LigamentNodeL = {sRel = {.MFtsL3LigamentNodeR.sRel[0],.MFtsL3LigamentNodeR.sRel[1],.MFtsL3LigamentNodeR.sRel[2]*-1};};

AnyRefNode MFtsL4SacrumNodeR = {sRel = .Scale({-0.007,-0.040,0.028});};
AnyRefNode MFtsL4SacrumNodeL = {sRel = {.MFtsL4SacrumNodeR.sRel[0],.MFtsL4SacrumNodeR.sRel[1],.MFtsL4SacrumNodeR.sRel[2]*-1};};

AnyRefNode MFtsL5SacrumNodeR = {sRel = .Scale({-0.008,-0.025,0.012});};
AnyRefNode MFtsL5SacrumNodeL = {sRel = {.MFtsL5SacrumNodeR.sRel[0],.MFtsL5SacrumNodeR.sRel[1],.MFtsL5SacrumNodeR.sRel[2]*-1};};

AnyRefNode MFtstL1SIPSNodeR = {sRel = .Scale({-0.022,-0.007,0.022});};
AnyRefNode MFtstL1SIPSNodeL = {sRel = {.MFtstL1SIPSNodeR.sRel[0],.MFtstL1SIPSNodeR.sRel[1],.MFtstL1SIPSNodeR.sRel[2]*-1};};

AnyRefNode MFtstL2SIPSNodeR = {sRel = .Scale({-0.017,-0.008,0.022});};
AnyRefNode MFtstL2SIPSNodeL = {sRel = {.MFtstL2SIPSNodeR.sRel[0],.MFtstL2SIPSNodeR.sRel[1],.MFtstL2SIPSNodeR.sRel[2]*-1};};
// End of Multifidi Nodes

// Erector Spinae Nodes
AnyVec3 ILplL1CINodeR0 = {-0.023,0.007,0.020};
AnyRefNode ILplL1CINodeR = {sRel = .Scale(.ILplL1CINodeR0);};
AnyRefNode ILplL1CINodeL = {sRel = {.ILplL1CINodeR.sRel[0],.ILplL1CINodeR.sRel[1],.ILplL1CINodeR.sRel[2]*-1};};

AnyVec3 ILplL2CINodeR0 = {-0.021,0.014,0.023};
AnyRefNode ILplL2CINodeR = {sRel = .Scale(.ILplL2CINodeR0);};
AnyRefNode ILplL2CINodeL = {sRel = {.ILplL2CINodeR.sRel[0],.ILplL2CINodeR.sRel[1],.ILplL2CINodeR.sRel[2]*-1};};

AnyRefNode ILplL3CINodeR = {sRel = .Scale({-0.019,0.019,0.026});};
AnyRefNode ILplL3CINodeL = {sRel = {.ILplL3CINodeR.sRel[0],.ILplL3CINodeR.sRel[1],.ILplL3CINodeR.sRel[2]*-1};};

AnyRefNode ILplL4CINodeR = {sRel = .Scale({-0.017,0.024,0.029});};
AnyRefNode ILplL4CINodeL = {sRel = {.ILplL4CINodeR.sRel[0],.ILplL4CINodeR.sRel[1],.ILplL4CINodeR.sRel[2]*-1};};

AnyVec3 LTplL1SIPSNodeR0 = {-0.017,0.021,0.033};
AnyRefNode LTplL1SIPSNodeR = {sRel = .Scale(.LTplL1SIPSNodeR0);};
AnyRefNode LTplL1SIPSNodeL = {sRel = {.LTplL1SIPSNodeR.sRel[0],.LTplL1SIPSNodeR.sRel[1],.LTplL1SIPSNodeR.sRel[2]*-1};};

AnyVec3 LTplL2SIPSNodeR0 = {-0.015,0.019,0.030};
AnyRefNode LTplL2SIPSNodeR = {sRel = .Scale(.LTplL2SIPSNodeR0);};
AnyRefNode LTplL2SIPSNodeL = {sRel = {.LTplL2SIPSNodeR.sRel[0],.LTplL2SIPSNodeR.sRel[1], .LTplL2SIPSNodeR.sRel[2]*-1};};

AnyRefNode LTplL3SIPSNodeR = {sRel = .Scale({-0.013,0.017,0.027});};
AnyRefNode LTplL3SIPSNodeL = {sRel = {.LTplL3SIPSNodeR.sRel[0],.LTplL3SIPSNodeR.sRel[1],.LTplL3SIPSNodeR.sRel[2]*-1};};

AnyRefNode LTplL4SIPSNodeR = {sRel = .Scale({-0.011,0.015,0.024});};
AnyRefNode LTplL4SIPSNodeL = {sRel = {.LTplL4SIPSNodeR.sRel[0],.LTplL4SIPSNodeR.sRel[1],.LTplL4SIPSNodeR.sRel[2]*-1};};

AnyRefNode LTplL5IliumNodeR = {sRel = .Scale({-0.009,0.013,0.021});};
AnyRefNode LTplL5IliumNodeL = {sRel = {.LTplL5IliumNodeR.sRel[0],.LTplL5IliumNodeR.sRel[1],.LTplL5IliumNodeR.sRel[2]*-1};};

AnyVec3 ILptC5SIPSNodeR0 = {-0.023,0.007,0.020};
AnyRefNode ILptC5SIPSNodeR = {sRel = .Scale(.ILptC5SIPSNodeR0);};
AnyRefNode ILptC5SIPSNodeL = {sRel = {.ILptC5SIPSNodeR.sRel[0],.ILptC5SIPSNodeR.sRel[1],.ILptC5SIPSNodeR.sRel[2]*-1};};

AnyVec3 ILptC6SIPSNodeR0 = {-0.019,0.011,0.024};
AnyRefNode ILptC6SIPSNodeR = {sRel = .Scale(.ILptC6SIPSNodeR0);};
AnyRefNode ILptC6SIPSNodeL = {sRel = {.ILptC6SIPSNodeR.sRel[0],.ILptC6SIPSNodeR.sRel[1],.ILptC6SIPSNodeR.sRel[2]*-1};};

AnyVec3 ILptC7CINodeR0 = {-0.015,0.015,0.028};
AnyRefNode ILptC7CINodeR = {sRel = .Scale(.ILptC7CINodeR0);};
AnyRefNode ILptC7CINodeL = {sRel = {.ILptC7CINodeR.sRel[0],.ILptC7CINodeR.sRel[1],.ILptC7CINodeR.sRel[2]*-1};};

AnyVec3 ILptC8CINodeR0 = {-0.011,0.019,0.032};
AnyRefNode ILptC8CINodeR = {sRel = .Scale(.ILptC8CINodeR0);};
AnyRefNode ILptC8CINodeL = {sRel = {.ILptC8CINodeR.sRel[0],.ILptC8CINodeR.sRel[1],.ILptC8CINodeR.sRel[2]*-1};};

AnyVec3 ILptC9CINodeR0 = {-0.007,0.023,0.036};
AnyRefNode ILptC9CINodeR = {sRel = .Scale(.ILptC9CINodeR0);};
AnyRefNode ILptC9CINodeL = {sRel = {.ILptC9CINodeR.sRel[0],.ILptC9CINodeR.sRel[1],.ILptC9CINodeR.sRel[2]*-1};};

AnyVec3 ILptC10CINodeR0 = {-0.003,0.027,0.040};
AnyRefNode ILptC10CINodeR = {sRel = .Scale(.ILptC10CINodeR0);};
AnyRefNode ILptC10CINodeL = {sRel = {.ILptC10CINodeR.sRel[0],.ILptC10CINodeR.sRel[1],.ILptC10CINodeR.sRel[2]*-1};};

AnyVec3 ILptC11CINodeR0 = {0.001,0.031,0.044};
AnyRefNode ILptC11CINodeR = {sRel = .Scale(.ILptC11CINodeR0);};
AnyRefNode ILptC11CINodeL = {sRel = {.ILptC11CINodeR.sRel[0],.ILptC11CINodeR.sRel[1],.ILptC11CINodeR.sRel[2]*-1};};

AnyVec3 ILptC12CINodeR0 = {0.005,0.035,0.048};
AnyRefNode ILptC12CINodeR = {sRel = .Scale(.ILptC12CINodeR0);};
AnyRefNode ILptC12CINodeL = {sRel = {.ILptC12CINodeR.sRel[0],.ILptC12CINodeR.sRel[1],.ILptC12CINodeR.sRel[2]*-1};};

AnyVec3 LTptT6S1NodeR0 = {0.003,0.003,0.0};
AnyRefNode LTptT6S1NodeR = {sRel = .Scale(.LTptT6S1NodeR0);};
AnyRefNode LTptT6S1NodeL = {sRel = {.LTptT6S1NodeR.sRel[0],.LTptT6S1NodeR.sRel[1], -.LTptT6S1NodeR.sRel[2]};};

AnyVec3 LTptT7S2NodeR0 = {-0.008,-0.015,0.0};
AnyRefNode LTptT7S2NodeR = {sRel = .Scale(.LTptT7S2NodeR0);};
AnyRefNode LTptT7S2NodeL = {sRel = {.LTptT7S2NodeR.sRel[0],.LTptT7S2NodeR.sRel[1], -.LTptT7S2NodeR.sRel[2]};};

AnyVec3 LTptT8S3NodeR0 = {-0.019,-0.032,0.0};
AnyRefNode LTptT8S3NodeR = {sRel = .Scale(.LTptT8S3NodeR0);};
AnyRefNode LTptT8S3NodeL = {sRel = {.LTptT8S3NodeR.sRel[0],.LTptT8S3NodeR.sRel[1], -.LTptT8S3NodeR.sRel[2]};};

AnyVec3 LTptT9S4NodeR0 = {-0.018,-0.051,0.0};
AnyRefNode LTptT9S4NodeR = {sRel = .Scale(.LTptT9S4NodeR0);};
AnyRefNode LTptT9S4NodeL = {sRel = {.LTptT9S4NodeR.sRel[0],.LTptT9S4NodeR.sRel[1], -.LTptT9S4NodeR.sRel[2]};};

AnyVec3 LTptT10SacrumNodeR0 = {-0.010,-0.038,0.018};
AnyRefNode LTptT10SacrumNodeR = {sRel = .Scale(.LTptT10SacrumNodeR0);};
AnyRefNode LTptT10SacrumNodeL = {sRel = {.LTptT10SacrumNodeR.sRel[0],.LTptT10SacrumNodeR.sRel[1], -.LTptT10SacrumNodeR.sRel[2]};};

AnyVec3 LTptT11SacrumNodeR0 = {-0.010,-0.038,0.023};
AnyRefNode LTptT11SacrumNodeR = {sRel = .Scale(.LTptT11SacrumNodeR0);};
AnyRefNode LTptT11SacrumNodeL = {sRel = {.LTptT11SacrumNodeR.sRel[0],.LTptT11SacrumNodeR.sRel[1],-.LTptT11SacrumNodeR.sRel[2]};};

AnyVec3 LTptT12SacrumNodeR0 = {-0.010,-0.038,0.028};
AnyRefNode LTptT12SacrumNodeR = {sRel = .Scale(.LTptT12SacrumNodeR0);};
AnyRefNode LTptT12SacrumNodeL = {sRel = {.LTptT12SacrumNodeR.sRel[0],.LTptT12SacrumNodeR.sRel[1],-.LTptT12SacrumNodeR.sRel[2]};};
// End of Erector Spinae Nodes

// Psoas Major Nodes
//These points are used as via points
AnyVec3 IliopubicEminenceViaNodeR0 = {0.068+0.01,-0.1101+0.01,0.056+0.015};
AnyRefNode IliopubicEminenceViaNodeR = { sRel = .Scale(.IliopubicEminenceViaNodeR0);};
 //Via point for Psoas Major, will first be used as end point.
AnyRefNode IliopubicEminenceViaNodeL = {
  sRel = {.IliopubicEminenceViaNodeR.sRel[0],.IliopubicEminenceViaNodeR.sRel[1],.IliopubicEminenceViaNodeR.sRel[2]*-1};
};


//These points are used as end points in case there are no legs in the model
//the points are very close to the via points above but they are different
Right ={
  AnyRefNode IliopubicEminenceEndNode = {
    sRel = ..Scale({0.068+0.01,-0.1201+0.01,0.056+0.015}); 
  }; //Via point for Psoas Major, will first be used as end point.
  
  // Definition of cylinder used for wrapping of the psoas major muscle
  
  AnyRefNode pecent_ossis_pubis={ 
    sRel=  ..Scale({0.04,-0.13,0.048});
    
    AnyVec3 p2=..Scale(0.1*{0,0.743294,0.668965}+{0.04,-0.13,0.048});
    
    AnyVec3 p3=..Scale({0.04,-0.13,0.048}+0.03*{0,0.668965,-0.743294});
    
    
    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,p3,p2);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][2],Mat[0][0],Mat[0][1]},
      {Mat[1][2],Mat[1][0],Mat[1][1]},
      {Mat[2][2],Mat[2][0],Mat[2][1]}};          
    
    AnySurfCylinder cyl = { 
      Radius=((.sRel[0]-.p3[0])^2+(.sRel[1]-.p3[1])^2+(.sRel[2]-.p3[2])^2)^0.5;
      //The lenght are extended by 25% too improve wrapping stability in extreme cases
      Length= 1.25*((.sRel[0]-.p2[0])^2+(.sRel[1]-.p2[1])^2+(.sRel[2]-.p2[2])^2)^0.5;
      //AnyDrawParamSurf drw={RGB={0,1,0};};
    };
  }; 
  
  
};

Left ={
  AnyRefNode IliopubicEminenceEndNode = {
    sRel = {..Right.IliopubicEminenceEndNode.sRel[0],..Right.IliopubicEminenceEndNode.sRel[1],..Right.IliopubicEminenceEndNode.sRel[2]*-1};
  };
  

  AnyRefNode pecent_ossis_pubis={ 
    
    sRel=  {..Right.pecent_ossis_pubis.sRel[0],..Right.pecent_ossis_pubis.sRel[1],..Right.pecent_ossis_pubis.sRel[2]*-1};
    
    AnyVec3 p2= {..Right.pecent_ossis_pubis.p2[0],..Right.pecent_ossis_pubis.p2[1],..Right.pecent_ossis_pubis.p2[2]*-1};
    
    AnyVec3 p3= {..Right.pecent_ossis_pubis.p3[0],..Right.pecent_ossis_pubis.p3[1],..Right.pecent_ossis_pubis.p3[2]*-1};
    
    
    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,p3,p2);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][2],Mat[0][0],Mat[0][1]},
      {Mat[1][2],Mat[1][0],Mat[1][1]},
      {Mat[2][2],Mat[2][0],Mat[2][1]}};          
    
    AnySurfCylinder cyl= { 
      Radius=((.sRel[0]-.p3[0])^2+(.sRel[1]-.p3[1])^2+(.sRel[2]-.p3[2])^2)^0.5;
      
      Length= 1.25*((.sRel[0]-.p2[0])^2+(.sRel[1]-.p2[1])^2+(.sRel[2]-.p2[2])^2)^0.5;
      //AnyDrawParamSurf drw={RGB={0,1,0};};
    };
    
  }; 
  
};
AnyVar Translation =0.015;
AnyRefNode PMT12I_TMVia5NodeR = {sRel = .Scale({0.055+.Translation,-0.037,(...SegmentsThorax.ThoraxSeg.PMT12I_TMNodeR0[2] - ...SegmentsThorax.ThoraxSeg.PMT12I_TMZ*(...SegmentsThorax.ThoraxSeg.PMT12I_TMNodeR0[1] + 0.037))});};
AnyRefNode PMT12I_TMVia5NodeL = {sRel = {.PMT12I_TMVia5NodeR.sRel[0],.PMT12I_TMVia5NodeR.sRel[1],.PMT12I_TMVia5NodeR.sRel[2]*-1};}; 

AnyRefNode PML1I_TMVia4NodeR = {sRel = .Scale({0.055+.Translation,-0.037,(..L1Seg.PML1I_TMNodeR0[2] - ..L3Seg.PML1I_TMZ*(..L1Seg.PML1I_TMNodeR0[1] + 0.037))});};//STC
AnyRefNode PML1I_TMVia4NodeL = {sRel = {.PML1I_TMVia4NodeR.sRel[0],.PML1I_TMVia4NodeR.sRel[1],.PML1I_TMVia4NodeR.sRel[2]*-1};};

AnyRefNode PML2I_TMVia3NodeR = {sRel = .Scale({0.055+.Translation,-0.037,(..L2Seg.PML2I_TMNodeR0[2] - ..L3Seg.PML2I_TMZ*(..L2Seg.PML2I_TMNodeR0[1] + 0.037))});};
AnyRefNode PML2I_TMVia3NodeL = {sRel = {.PML2I_TMVia3NodeR.sRel[0],.PML2I_TMVia3NodeR.sRel[1],.PML2I_TMVia3NodeR.sRel[2]*-1};}; 

AnyRefNode PML3I_TMVia2NodeR = {sRel = .Scale({0.055+.Translation,-0.037,(..L3Seg.PML3I_TMNodeR0[2] - ..L3Seg.PML3I_TMZ*(..L3Seg.PML3I_TMNodeR0[1] + 0.037))});};
AnyRefNode PML3I_TMVia2NodeL = {sRel = {.PML3I_TMVia2NodeR.sRel[0],.PML3I_TMVia2NodeR.sRel[1],.PML3I_TMVia2NodeR.sRel[2]*-1};}; 

AnyRefNode PML4I_TMVia1NodeR = {sRel = .Scale({0.055+.Translation,-0.037,(..L4Seg.PML4I_TMNodeR0[2] - ..L3Seg.PML4I_TMZ*(..L4Seg.PML4I_TMNodeR0[1] + 0.037))});};
AnyRefNode PML4I_TMVia1NodeL = {sRel = {.PML4I_TMVia1NodeR.sRel[0],.PML4I_TMVia1NodeR.sRel[1],.PML4I_TMVia1NodeR.sRel[2]*-1};}; 

AnyRefNode PML5_TMVia1NodeR = {sRel = .Scale({0.055+.Translation,-0.037,(..L5Seg.PML5_TMNodeR0[2] - ..L3Seg.PML5_TMZ*(..L5Seg.PML5_TMNodeR0[1] + 0.037))});};
AnyRefNode PML5_TMVia1NodeL = {sRel = {.PML5_TMVia1NodeR.sRel[0],.PML5_TMVia1NodeR.sRel[1],.PML5_TMVia1NodeR.sRel[2]*-1};}; 

AnyRefNode PML1T_TMVia5NodeR = {sRel = .Scale({0.055,-0.037,(..L1Seg.PML1T_TMNodeR0[2] - ..L2Seg.PML1T_TMZ*(..L1Seg.PML1T_TMNodeR0[1] + 0.037))});};
AnyRefNode PML1T_TMVia5NodeL = {sRel = {.PML1T_TMVia5NodeR.sRel[0],.PML1T_TMVia5NodeR.sRel[1],.PML1T_TMVia5NodeR.sRel[2]*-1};}; 

AnyRefNode PML2T_TMVia4NodeR = {sRel = .Scale({0.055,-0.037,(..L2Seg.PML2T_TMNodeR0[2] - ..L2Seg.PML2T_TMZ*(..L2Seg.PML2T_TMNodeR0[1] + 0.037))});};
AnyRefNode PML2T_TMVia4NodeL = {sRel = {.PML2T_TMVia4NodeR.sRel[0],.PML2T_TMVia4NodeR.sRel[1],.PML2T_TMVia4NodeR.sRel[2]*-1};}; 

AnyRefNode PML3T_TMVia3NodeR = {sRel = .Scale({0.055,-0.037,(..L3Seg.PML3T_TMNodeR0[2] - ..L2Seg.PML3T_TMZ*(..L3Seg.PML3T_TMNodeR0[1] + 0.037))});};
AnyRefNode PML3T_TMVia3NodeL = {sRel = {.PML3T_TMVia3NodeR.sRel[0],.PML3T_TMVia3NodeR.sRel[1],.PML3T_TMVia3NodeR.sRel[2]*-1};}; 

AnyRefNode PML4T_TMVia2NodeR = {sRel = .Scale({0.055,-0.037,(..L4Seg.PML4T_TMNodeR0[2] - ..L2Seg.PML4T_TMZ*(..L4Seg.PML4T_TMNodeR0[1] + 0.037))});};
AnyRefNode PML4T_TMVia2NodeL = {sRel = {.PML4T_TMVia2NodeR.sRel[0],.PML4T_TMVia2NodeR.sRel[1],.PML4T_TMVia2NodeR.sRel[2]*-1};}; 

AnyRefNode PML5T_TMVia1NodeR = {sRel = .Scale({0.055,-0.037,(..L5Seg.PML5T_TMNodeR0[2] - ..L2Seg.PML5T_TMZ*(..L5Seg.PML5T_TMNodeR0[1] + 0.037))});};
AnyRefNode PML5T_TMVia1NodeL = {sRel = {.PML5T_TMVia1NodeR.sRel[0],.PML5T_TMVia1NodeR.sRel[1],.PML5T_TMVia1NodeR.sRel[2]*-1};}; 
// End of Psoas Major Nodes

// Quadratus Lumborum Nodes
AnyRefNode QLNodeR = {sRel = .Scale({0.038,0.054,0.083});};
AnyRefNode QLNodeL = {sRel = {.QLNodeR.sRel[0],.QLNodeR.sRel[1],.QLNodeR.sRel[2]*-1};};
// End of Quadratus Lumborum Nodes

// Rectus Abdominis Nodes
AnyRefNode RANodeR = {sRel = .Scale({0.100,-0.131,0.010});};
AnyRefNode RANodeL = {sRel = {.RANodeR.sRel[0],.RANodeR.sRel[1],.RANodeR.sRel[2]*-1};};
AnyRefNode RANode = {sRel = {.RANodeR.sRel[0],.RANodeR.sRel[1],0};};

// End of Rectus Abdominis Nodes

// Obliquus Externus Nodes
AnyRefNode OEC11_CINodeR = {sRel = .Scale({0.067,0.030,0.125});};
AnyRefNode OEC11_CINodeL = {sRel = {.OEC11_CINodeR.sRel[0],.OEC11_CINodeR.sRel[1],.OEC11_CINodeR.sRel[2]*-1};};

AnyRefNode OEC12_CINodeR = {sRel = .Scale({0.047,0.045,0.109});};
AnyRefNode OEC12_CINodeL = {sRel = {.OEC12_CINodeR.sRel[0],.OEC12_CINodeR.sRel[1],.OEC12_CINodeR.sRel[2]*-1};};
// End of Obliquus Externus Nodes

// Obliquus Internus Nodes
AnyRefNode OICI_C12NodeR = {sRel = .Scale({0.038,0.055,0.088});};
AnyRefNode OICI_C12NodeL = {sRel = {.OICI_C12NodeR.sRel[0],.OICI_C12NodeR.sRel[1],.OICI_C12NodeR.sRel[2]*-1};};

AnyRefNode OICI_C11NodeR = {sRel = .Scale({0.068,0.027,0.126});};
AnyRefNode OICI_C11NodeL = {sRel = {.OICI_C11NodeR.sRel[0],.OICI_C11NodeR.sRel[1],.OICI_C11NodeR.sRel[2]*-1};};    

AnyRefNode OICI_C10NodeR = {sRel = .Scale({0.078,0.014,0.136});};
AnyRefNode OICI_C10NodeL = {sRel = {.OICI_C10NodeR.sRel[0],.OICI_C10NodeR.sRel[1],.OICI_C10NodeR.sRel[2]*-1};};

AnyRefNode OICI_RS1NodeR = {sRel = .Scale({0.088,-0.002,0.137});};
AnyRefNode OICI_RS1NodeL = {sRel = {.OICI_RS1NodeR.sRel[0],.OICI_RS1NodeR.sRel[1],.OICI_RS1NodeR.sRel[2]*-1};};

AnyRefNode OICI_RS2NodeR = {sRel = .Scale({0.093,-0.012,0.137});};
AnyRefNode OICI_RS2NodeL = {sRel = {.OICI_RS2NodeR.sRel[0],.OICI_RS2NodeR.sRel[1],.OICI_RS2NodeR.sRel[2]*-1};};

AnyRefNode OICI_RS3NodeR = {sRel = .Scale({0.098,-0.024,0.137});};
AnyRefNode OICI_RS3NodeL = {sRel = {.OICI_RS3NodeR.sRel[0],.OICI_RS3NodeR.sRel[1],.OICI_RS3NodeR.sRel[2]*-1};};    
// End of Obliquus Internus Nodes

AnyRefNode Tuber_ischiadicumR = {  sRel = .Scale({-0.01,-0.175,0.04});};
AnyRefNode Tuber_ischiadicumL = {sRel  = .Scale({-0.01,-0.175,-0.04});};

//Midpoint between  Tuber_ischiadicumR and Tuber_ischiadicumL
AnyRefNode TuberIschiadicumCenter = {  sRel = .Scale({-0.01,-0.175,0.0});};




