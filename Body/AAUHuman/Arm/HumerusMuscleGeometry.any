// This file contains muscle attachment points for the clavicle segment data from VU sub 2.
// The original coordinates have been transformed from global coordinates to the segment local 
// coordinate system
AnyFolder &Humerus =.Seg.Humerus;

Humerus = {
  #include "../DrawSettings/SegmentAxes.any" 
 //AnyDrawNodes drw={ScaleXYZ={0.0015,0.0015,0.0015};};
  AnyRefNode art_gh_hum = {
    sRel = .Scale({-0.003444, 0.009615 , -0.008172}+.OffSet)*.Mirror;
    //Two points lying with an angle of 90 deg between are used for to control 
    //the scaling of the sphere
    AnyVar Radius=0.0266;
    
    /* This is outcommented because it does not work for non-uniform scaling!
    AnyVec3 P1=.Scale({...Sign*(-0.003444+Radius), 0.009615 , -0.008172});
    AnyVec3 P2=.Scale({...Sign*(-0.003444), 0.009615 , -0.008172+Radius});
    
    //These two numbers are the distance from srel to P1 and P2
    AnyVar P1Radius= ((sRel[0]-P1[0])^2+(sRel[1]-P1[1])^2+(sRel[2]-P1[2])^2)^0.5;
    AnyVar P2Radius= ((sRel[0]-P2[0])^2+(sRel[1]-P2[1])^2+(sRel[2]-P2[2])^2)^0.5;
    
    //Take the average and use this as the radius
    AnyVar RadiusAverage =(P1Radius+P2Radius)/2;
    
    ARel={ {0,0,1}, {1,0,0}, {0,1,0}};
    
    AnySurfSphere art_gh_humSurf = {
      Radius =.RadiusAverage;
      AnyDrawParamSurf drw={RGB={0,1,1};};
    };
    */
    
    
    AnyVec3 P1=.Scale({(-0.003444+Radius), 0.009615 , -0.008172}+.OffSet)*.Mirror;
    AnyVec3 P2=.Scale({(-0.003444), 0.009615+Radius , -0.008172}+.OffSet)*.Mirror;
    AnyVec3 P3=.Scale({(-0.003444), 0.009615 , -0.008172+Radius}+.OffSet)*.Mirror;
    
    //These three numbers are the distance from srel to P1, P2 and P3
    AnyVar P1Radius= ((sRel[0]-P1[0])^2+(sRel[1]-P1[1])^2+(sRel[2]-P1[2])^2)^0.5;
    AnyVar P2Radius= ((sRel[0]-P2[0])^2+(sRel[1]-P2[1])^2+(sRel[2]-P2[2])^2)^0.5;
    AnyVar P3Radius= ((sRel[0]-P3[0])^2+(sRel[1]-P3[1])^2+(sRel[2]-P3[2])^2)^0.5;
        
    //The art_gh_hum surf is made as an ellipsoid this is the only way to ensure that when
    //scaling the bone the muscle insertation points will remain outside the surface
    AnySurfEllipsoid art_gh_humSurf = {
      Radius ={.P1Radius,.P2Radius,.P3Radius};
      //AnyDrawParamSurf drw={RGB={0,1,1};};
    };
    
  };
  
    /*AnyRefNode p1={
      sRel=.art_tub_minus_tub_majus.P1; 
      //AnyDrawRefFrame drw={RGB={1,0,0}; };
    };

    AnyRefNode p2={
      sRel=.art_tub_minus_tub_majus.P2; 
      //AnyDrawRefFrame drw={RGB={1,0,0};  };
    };
    AnyRefNode p3={
      sRel=.art_tub_minus_tub_majus.sRel;
     // AnyDrawRefFrame drw={RGB={1,0,0};};
    };*/

      //Used for deltoid muscle wrapping  
  AnyRefNode art_tub_minus_tub_majus = {
    sRel = .Scale({-0.001379, 0.008999 , -0.009119}+.OffSet)*.Mirror;
    

   //Two points lying with an angle of 90 deg between are used for to control 
    //the scaling of the sphere
    AnyVar Radius =0.036;
    AnyVec3 P1=.Scale({(-0.001379+Radius), 0.008999 , -0.009119}+.OffSet)*.Mirror;
    AnyVec3 P2=.Scale({(-0.001379), 0.008999 , -0.009119+Radius}+.OffSet)*.Mirror;
    
    //These two numbers are the distance from srel to P1 and P2
    AnyVar P1Radius= ((sRel[0]-P1[0])^2+(sRel[1]-P1[1])^2+(sRel[2]-P1[2])^2)^0.5;
    AnyVar P2Radius= ((sRel[0]-P2[0])^2+(sRel[1]-P2[1])^2+(sRel[2]-P2[2])^2)^0.5;
    
    //Take the average and use this as the radius
    AnyVar RadiusAverage =(P1Radius+P2Radius)/2;
    
    ARel={ {0,0,1}, {1,0,0}, {0,1,0}};
    
    AnySurfSphere art_tub_minus_tub_majusSurf = {
      Radius =.RadiusAverage;
      //AnyDrawParamSurf drw={RGB={0,0,1};};
    };
  };
 
  AnyRefNode art_tub_minus = {
    sRel = .Scale({0.014, 0.009 , -0.03}+.OffSet)*.Mirror;
  };
  AnyRefNode art_tub_majus = {
    sRel = .Scale({0.021, 0.009 , -0.02}+.OffSet)*.Mirror;
  };
 
  AnyRefNode sulcus_intertubercularis ={
//    sRel =0.5*(.art_tub_majus.sRel+.art_tub_minus.sRel)+.Scale({...Sign*0.003,0.0,0.0}); // midpoint 
  sRel = .Scale({-0.007500, -0.004000, -0.035000}+.OffSet)*.Mirror;
  };
  AnyRefNode sulcus_intertubercularisTop ={
    //sRel =.sulcus_intertubercularis.sRel+.Scale({...Sign*-0.005,0.015,0.003}); 
  sRel = .Scale({-0.010, 0.012000, -0.03500}+.OffSet)*.Mirror;
  };
  
  
  AnyRefNode collum_hum = {
    AnyVec3 P2 =.Scale({-0.010698, -0.350000, -0.000157}+.OffSet)*.Mirror; ////Point used for radius
    AnyVec3 P3 =.Scale({0.000000, 0.030000, 0.000000}+.OffSet)*.Mirror; //End point
    
    sRel = .Scale({0.0, -0.35 , 0.0}+.OffSet)*.Mirror;
    
    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,P3,P2);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][1],Mat[0][2],Mat[0][0]},
      {Mat[1][1],Mat[1][2],Mat[1][0]},
      {Mat[2][1],Mat[2][2],Mat[2][0]}};          
    
    AnySurfCylinder collum_hum= { 
      Length=((.sRel[0]-.P3[0])^2+(.sRel[1]-.P3[1])^2+(.sRel[2]-.P3[2])^2)^0.5;
      Radius= ((.sRel[0]-.P2[0])^2+(.sRel[1]-.P2[1])^2+(.sRel[2]-.P2[2])^2)^0.5;
      //AnyDrawParamSurf drw={RGB={0,0,1};};
    };
  }; 
  
  
  
  AnyRefNode collum_hum_teres_minor = {
    AnyVec3 P2= .Scale({0.0, 0.04 , 0.0}+.OffSet)*.Mirror;//End point
    AnyVec3 P3= .Scale({0.0, -0.1 , 0.01885}+.OffSet)*.Mirror;//Point used for radius
    
    sRel = .Scale({0.0, -0.1 , 0.0}+.OffSet)*.Mirror;
    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,P3,P2);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][2],Mat[0][0],Mat[0][1]},
      {Mat[1][2],Mat[1][0],Mat[1][1]},
      {Mat[2][2],Mat[2][0],Mat[2][1]}};          
    
    AnySurfCylinder collum_hum= { 
      Radius=((.sRel[0]-.P3[0])^2+(.sRel[1]-.P3[1])^2+(.sRel[2]-.P3[2])^2)^0.5;
      Length= ((.sRel[0]-.P2[0])^2+(.sRel[1]-.P2[1])^2+(.sRel[2]-.P2[2])^2)^0.5;
      //AnyDrawParamSurf drw={RGB={0,0,1};};
    };
  };
  
  
  // This is a collum which visually has been fitted to the distal end of humerus 
  // it is used for wrapping of Biceps muscles.
  AnyRefNode condylus_hum = { 
    AnyVar  Radius=0.012;
    AnyVar  Length=0.08; 
    AnyVec3 P2 =.Scale({(-0.024+Length), -0.344210 , -0.0040000}+.OffSet)*.Mirror; //End point
    AnyVec3 P3 =.Scale({-0.024, -0.34421 , Radius-0.0040000}+{-0.02,0,0}+.OffSet)*.Mirror; //Point used for radius
    
    sRel = .Scale({-0.024, -0.344210 , -0.0040000}+{-0.02,0,0}+.OffSet)*.Mirror;

    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,P3,P2);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][2],Mat[0][0],Mat[0][1]},
      {Mat[1][2],Mat[1][0],Mat[1][1]},
      {Mat[2][2],Mat[2][0],Mat[2][1]}};          
    
    AnySurfCylinder condylus_hum= { 
      Radius=((.sRel[0]-.P3[0])^2+(.sRel[1]-.P3[1])^2+(.sRel[2]-.P3[2])^2)^0.5;
      Length= ((.sRel[0]-.P2[0])^2+(.sRel[1]-.P2[1])^2+(.sRel[2]-.P2[2])^2)^0.5;
      //AnyDrawParamSurf drw={RGB={0,0,1};};
    }; 
  }; 
  
  // This is a collum which visually has been fitted to the distal end of humerus 
  // it is used for wrapping of Triceps muscles
  AnyRefNode condylus_humT = { 
    AnyVar  Radius=0.012;
    AnyVar  Length=0.08; 
    AnyVec3 P2 =.Scale({(-0.030510+Length), -0.344210 , -0.0040000}+.OffSet)*.Mirror; //End point
    AnyVec3 P3 =.Scale({-0.030510, -0.34421 , Radius-0.0040000}+.OffSet)*.Mirror; //Point used for radius
    
    sRel = .Scale({-0.030510, -0.344210 , -0.0040000}+.OffSet)*.Mirror;
    
    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,P3,P2);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][2],Mat[0][0],Mat[0][1]},
      {Mat[1][2],Mat[1][0],Mat[1][1]},
      {Mat[2][2],Mat[2][0],Mat[2][1]}};          
    
    AnySurfCylinder condylus_humT= { 
      Radius=((.sRel[0]-.P3[0])^2+(.sRel[1]-.P3[1])^2+(.sRel[2]-.P3[2])^2)^0.5;
      Length= ((.sRel[0]-.P2[0])^2+(.sRel[1]-.P2[1])^2+(.sRel[2]-.P2[2])^2)^0.5;
      //AnyDrawParamSurf drw={RGB={0,0,1};};
    }; 
  }; 
  
  
  
  
  
  AnyVec3 ds1={0.005,-0.03,0.00}+OffSet;
  AnyRefNode I_deltoideus_scapular_part_1         = {sRel = .Scale({0.009442, -0.095031 , -0.005209}+{0,0,0.005}+.ds1)*.Mirror;  };
  AnyRefNode I_deltoideus_scapular_part_2         = {sRel = .Scale({0.010509, -0.109575 , -0.001490}+.ds1)*.Mirror;  };
  AnyRefNode I_deltoideus_scapular_part_3         = {sRel = .Scale({0.006940, -0.081782 , -0.013010}+{0,0,0.015}+.ds1)*.Mirror;  };
  AnyRefNode I_deltoideus_scapular_part_4         = {sRel = .Scale({0.009462, -0.116191 , -0.004216}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_scapular_part_5         = {sRel = .Scale({0.005849, -0.085435 , -0.016010}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_scapular_part_6         = {sRel = .Scale({0.008066, -0.115681 , -0.008272}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_clavicular_part_1       = {sRel = .Scale({0.004982, -0.088709 , -0.018372}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_clavicular_part_2       = {sRel = .Scale({0.007234, -0.119509 , -0.010489}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_clavicular_part_3       = {sRel = .Scale({0.004818, -0.093455 , -0.018628}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_clavicular_part_4       = {sRel = .Scale({0.006682, -0.118890 , -0.012126}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_clavicular_part_5       = {sRel = .Scale({0.004941, -0.104487 , -0.017775}+.ds1)*.Mirror;};
  AnyRefNode I_deltoideus_clavicular_part_6       = {sRel = .Scale({0.005662, -0.114302 , -0.015263}+.ds1)*.Mirror;};
  
  AnyVec3 ds2={-0.002,0,-0.001}+OffSet;
  AnyRefNode I_subscapularis_1                    = {sRel = .Scale({-0.013538, 0.013190 , -0.033056}+.ds2)*.Mirror;};
  AnyRefNode I_subscapularis_2                    = {sRel = .Scale({-0.013538, 0.013190 , -0.033056}+.ds2)*.Mirror;};
  AnyRefNode I_subscapularis_3                    = {sRel = .Scale({-0.013162, 0.002403 , -0.035777}+.ds2)*.Mirror;};
  AnyRefNode I_subscapularis_4                    = {sRel = .Scale({-0.013162, 0.002403 , -0.035777}+.ds2)*.Mirror;};
  AnyRefNode I_subscapularis_5                    = {sRel = .Scale({-0.012987, -0.002479 , -0.037019}+.ds2)*.Mirror;};
  AnyRefNode I_subscapularis_6                    = {sRel = .Scale({-0.012987, -0.002479 , -0.037019}+.ds2)*.Mirror;};
  
  
  AnyVar x1=0.03; //this is a correction !!
  AnyVar y1=-0.008;
  AnyVar z1=-0.005;
  AnyRefNode I_supraspinatus_1                    = {sRel = .Scale({(-0.014390+.x1), 0.035979+.y1 , -0.007855+.z1}+.OffSet)*.Mirror;};
  AnyRefNode I_supraspinatus_2                    = {sRel = .Scale({(-0.014390+.x1), 0.035979+.y1 , -0.007855+.z1}+.OffSet)*.Mirror;};
  AnyRefNode I_supraspinatus_3                    = {sRel = .Scale({(-0.012505+.x1), 0.034910+.y1 , -0.000163+.z1}+.OffSet)*.Mirror;};
  AnyRefNode I_supraspinatus_4                    = {sRel = .Scale({(-0.012505+.x1), 0.034910+.y1 , -0.000163+.z1}+.OffSet)*.Mirror;};
  AnyRefNode I_supraspinatus_5                    = {sRel = .Scale({(-0.010693+.x1), 0.033878+.y1 , 0.007226+.z1}+.OffSet)*.Mirror;};
  AnyRefNode I_supraspinatus_6                    = {sRel = .Scale({(-0.010693+.x1), 0.033878+.y1 , 0.007226+.z1}+.OffSet)*.Mirror;};
  
  
  AnyVar xi=0.015; //this is a correction !!
  AnyVar yi=-0.01;
  AnyVar zi=-0.005;
  
  AnyRefNode I_infraspinatus_1                    = {sRel = .Scale({(-0.000091+.xi), 0.029001+.yi , 0.014576+.zi}+.OffSet)*.Mirror;};
  AnyRefNode I_infraspinatus_2                    = {sRel = .Scale({(-0.000091+.xi), 0.029001+.yi , 0.014576+.zi}+.OffSet)*.Mirror;};
  AnyRefNode I_infraspinatus_3                    = {sRel = .Scale({(0.002343+.xi), 0.021655+.yi , 0.016554+.zi}+.OffSet)*.Mirror;};
  AnyRefNode I_infraspinatus_4                    = {sRel = .Scale({(0.002343+.xi), 0.021655+.yi , 0.016554+.zi}+.OffSet)*.Mirror;};
  AnyRefNode I_infraspinatus_5                    = {sRel = .Scale({(0.004975+.xi), 0.013755+.yi , 0.018686+.zi}+.OffSet)*.Mirror;};
  AnyRefNode I_infraspinatus_6                    = {sRel = .Scale({(0.004975+.xi), 0.013755+.yi , 0.018686+.zi}+.OffSet)*.Mirror;};
    
  AnyVar xt=0.005; //this is a correction !!
  AnyVar yt=0.005;
  AnyVar zt=-0.00;
  
  
  
  AnyRefNode I_teres_minor_1                      = {sRel = .Scale({(0.012979+.xt), -0.001188+.yt , 0.008916+.zt}+.OffSet)*.Mirror;};
  AnyRefNode I_teres_minor_2                      = {sRel = .Scale({(0.012979+.xt), -0.001188+.yt , 0.008916+.zt}+.OffSet)*.Mirror;};
  AnyRefNode I_teres_minor_3                      = {sRel = .Scale({(0.013360+.xt), -0.009360+.yt , 0.005409+.zt}+.OffSet)*.Mirror;};
  AnyRefNode I_teres_minor_4                      = {sRel = .Scale({(0.013360+.xt), -0.009360+.yt , 0.005409+.zt}+.OffSet)*.Mirror;};
  AnyRefNode I_teres_minor_5                      = {sRel = .Scale({(0.013689+.xt), -0.016225+.yt , 0.002468+.zt}+.OffSet)*.Mirror;};
  AnyRefNode I_teres_minor_6                      = {sRel = .Scale({(0.013689+.xt), -0.016225+.yt , 0.002468+.zt}+.OffSet)*.Mirror;};
  
  AnyVec3 correction5={0,0.018,0}; 
  AnyRefNode I_teres_major_1                      = {sRel = .Scale({-0.009281, -0.043713 , -0.018597}+.correction5+.OffSet)*.Mirror;};
  AnyRefNode I_teres_major_2                      = {sRel = .Scale({-0.009281, -0.043713 , -0.018597}+.correction5+.OffSet)*.Mirror;};
  AnyRefNode I_teres_major_3                      = {sRel = .Scale({-0.008416, -0.059459 , -0.017509}+.correction5+.OffSet)*.Mirror;};
  AnyRefNode I_teres_major_4                      = {sRel = .Scale({-0.008416, -0.059459 , -0.017509}+.correction5+.OffSet)*.Mirror;};
  AnyRefNode I_teres_major_5                      = {sRel = .Scale({-0.007840, -0.070873 , -0.016625}+.correction5+.OffSet)*.Mirror;};
  AnyRefNode I_teres_major_6                      = {sRel = .Scale({-0.007840, -0.070873 , -0.016625}+.correction5+.OffSet)*.Mirror;};
  
 
  AnyRefNode I_coracobrachialis_1                 = {sRel = .Scale({-0.010924, -0.118511 , -0.009192}+.OffSet)*.Mirror;};
  AnyRefNode I_coracobrachialis_2                 = {sRel = .Scale({-0.008645, -0.121593 , -0.010523}+.OffSet)*.Mirror;};
  AnyRefNode I_coracobrachialis_3                 = {sRel = .Scale({-0.013514, -0.123634 , -0.007823}+.OffSet)*.Mirror;};
  AnyRefNode I_coracobrachialis_4                 = {sRel = .Scale({-0.010512, -0.127681 , -0.009574}+.OffSet)*.Mirror;};
  AnyRefNode I_coracobrachialis_5                 = {sRel = .Scale({-0.012786, -0.133910 , -0.008395}+.OffSet)*.Mirror;};
  AnyRefNode I_coracobrachialis_6                 = {sRel = .Scale({-0.010900, -0.136470 , -0.009495}+.OffSet)*.Mirror;};
  AnyRefNode I_triceps_brachii_1                  = {sRel = .Scale({-0.011696, -0.302289 , 0.020455}+.OffSet)*.Mirror;};
  AnyRefNode I_triceps_brachii_2                  = {sRel = .Scale({-0.011696, -0.302289 , 0.020455}+.OffSet)*.Mirror;};

  AnyRefNode I_latissimus_dorsi_1              = {sRel = .Scale({-0.001126, -0.045131 , -0.020042}+.OffSet)*.Mirror;};
  AnyRefNode I_latissimus_dorsi_2              = {sRel = .Scale({-0.001943, -0.034103 , -0.022417}+.OffSet)*.Mirror;};
  AnyRefNode I_latissimus_dorsi_3              = {sRel = .Scale({-0.002424, -0.027633 , -0.023812}+.OffSet)*.Mirror;};
  AnyRefNode I_latissimus_dorsi_4              = {sRel = .Scale({-0.002836, -0.022125 , -0.024989}+.OffSet)*.Mirror;};
  AnyRefNode I_latissimus_dorsi_5              = {sRel = .Scale({-0.003444, -0.013959 , -0.026752}+.OffSet)*.Mirror;};
  
  AnyVec3 correction4 ={0,0.02,0};
  AnyRefNode I_pectoralis_major_thoracic_part_1   = {sRel = .Scale({0.007396, -0.020684 , -0.024098}+.correction4+{0,-0.02,0}+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_thoracic_part_2   = {sRel = .Scale({0.004202, -0.048333 , -0.022443}+.correction4+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_thoracic_part_3   = {sRel = .Scale({0.002297, -0.064772 , -0.021451}+.correction4+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_thoracic_part_4   = {sRel = .Scale({0.000253, -0.082460 , -0.020396}+.correction4+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_thoracic_part_5   = {sRel = .Scale({-0.002051, -0.102370 , -0.019200}+.correction4+.OffSet)*.Mirror;};
  
  AnyRefNode I_pectoralis_major_clavicular_part_1 = {sRel = .Scale({-0.003235, -0.112511 , -0.018594}+.correction4+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_clavicular_part_2 = {sRel = .Scale({-0.003403, -0.113954 , -0.018506}+.correction4+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_clavicular_part_3 = {sRel = .Scale({-0.002941, -0.109969 , -0.018743}+.correction4+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_clavicular_part_4 = {sRel = .Scale({-0.001603, -0.098394 , -0.019439}+.correction4+.OffSet)*.Mirror;};
  AnyRefNode I_pectoralis_major_clavicular_part_5 = {sRel = .Scale({0.000904, -0.076809 , -0.020738}+.correction4+.OffSet)*.Mirror;};
  
  
  
  
  // This file contains muscle attachment points for the humerus segment data from MAYO sub 2
// The original coordinates have been transformed from global coordinates to the segment local 
// coordinate system
  AnyVec3 correction0 ={0,0.0,-0.005}; 
  AnyRefNode O_Brachialis_1                   = { 
    sRel = .Scale({ -0.003424, -0.207198 , -0.012998}+.correction0+.OffSet)*.Mirror;};
  AnyRefNode O_Brachialis_2                   = {sRel = .Scale({ -0.004418, -0.243815 , -0.008691}+.correction0+.OffSet)*.Mirror;};
  
  AnyRefNode O_Triceps_ME_1                   = {sRel = .Scale({ -0.015238, -0.161544 , -0.001821}+.OffSet)*.Mirror;};
  AnyRefNode O_Triceps_ME_2                   = {sRel = .Scale({ -0.014055, -0.256366 , 0.000249}+.OffSet)*.Mirror;};
  
  AnyVec3 correction ={0,0,0.007}; //To avoid that points are located inside coloumn
  AnyRefNode O_Triceps_LA_1                   = {sRel = .Scale({ -0.004730, -0.136631 , 0.003461}+.correction+.OffSet)*.Mirror;};
  AnyRefNode O_Triceps_LA_2                   = {sRel = .Scale({ 0.001537, -0.249976 , 0.008110}+.correction+.OffSet)*.Mirror;};

  AnyVector Correction ={0,-0.015,-0.015};  
  AnyRefNode O_Brach_rad_1                    = {sRel = .Scale({ 0.006551, -0.256586 , 0.006249}+.Correction+.OffSet)*.Mirror;};
  AnyRefNode O_Brach_rad_2                    = {sRel = .Scale({ 0.014044, -0.281510 , 0.007781}+.Correction+.OffSet)*.Mirror;};
  
  AnyVec3 correction1={-0.01,0.0,0.01};
  AnyRefNode O_Anconeus_1                     = {sRel = .Scale({ 0.028771, -0.339539 , -0.000896}+.correction1+.OffSet)*.Mirror;};
  AnyRefNode O_Anconeus_2                     = {sRel = .Scale({ 0.028771, -0.339539 , -0.000896}+.correction1+.OffSet)*.Mirror;};
  AnyVec3 correction2 ={0,0,-0.005}; 
  AnyRefNode O_Pronator_teres_caput_humeral_1 = {sRel = .Scale({ -0.021174, -0.314668 , -0.005204}+.correction2+.OffSet)*.Mirror;};
  AnyRefNode O_Pronator_teres_caput_humeral_2 = {sRel = .Scale({ -0.028689, -0.328224 , -0.003659}+.correction2+.OffSet)*.Mirror;};
 
  AnyVec3 correction3 ={-0.005,0,-0.005}; 
  AnyRefNode O_Supinator_humerus_part_1       = {sRel = .Scale({ 0.033931, -0.320036 , -0.002443}+.correction3+.OffSet)*.Mirror;};
  AnyRefNode O_Supinator_humerus_part_2       = {sRel = .Scale({ 0.033931, -0.320036 , -0.002443}+.correction3+.OffSet)*.Mirror;};
  AnyRefNode I_Cor_brach_1                    = {sRel = .Scale({ -0.015079, -0.122245 , -0.012023}+.OffSet)*.Mirror;};
  AnyRefNode I_Cor_brach_2                    = {sRel = .Scale({ -0.017158, -0.162619 , -0.008395}+.OffSet)*.Mirror;};

  
  AnyRefNode O_Extensor_Carpi_Ulnaris       = {sRel = .Scale({ 0.0313, -0.35 , 0.00})*.Mirror;
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode O_Extensor_Carpi_Radialis_Brevis ={
    sRel= .O_Extensor_Carpi_Ulnaris.sRel;
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode O_Extensor_Carpi_Radialis_Longus       = {
    sRel = .Scale({ 0.0313, -0.33 , 0.00})*.Mirror;
    
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode O_Flexor_Carpi_Ulnaris ={
    sRel = .Scale({ -0.038, -0.345 , 0.00})*.Mirror;
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode O_Flexor_Carpi_Radialis ={
    sRel = .Scale({ -0.038, -0.345 , 0.00})*.Mirror;
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode O_Palmaris_Longus ={
    sRel = .Scale({ -0.038, -0.345 , 0.00})*.Mirror;
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  AnyRefNode O_Flexor_Digitorum_Superficialis ={
    sRel = .Scale({ -0.038, -0.345 , 0.00})*.Mirror;
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  
  AnyRefNode O_Extensor_Digitorum ={
    sRel = .Scale({ 0.03, -0.33 , 0.00})*.Mirror;
//    AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
   AnyRefNode O_Extensor_Digiti_Minimi ={
    sRel = .Scale({ 0.03, -0.33 , 0.005})*.Mirror;
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  

  

  
  
};

