// This file contains segment inertia properties and geometry used for muscle wrapping.
// The file includes a number of segment files which contains muscles attachment points and 
// bonylandmarks.



AnySeg Hand ={
  
  AnyMat33 Mirror={{1,0,0},{0,1,0},{0,0,..Sign}};
  
  AnyFunTransform3D &Scale=..Scaling.GeometricalScaling.Hand.ScaleFunction;
  r0=.WristJointSeg.RadialUlnarDeviation.sRel*.WristJointSeg.Axes0'+.WristJointSeg.r0;//.Radius.wj.sRel*.Radius.Axes0'+.Radius.r0+; 
  
  #include "../DrawSettings/Nodes.any"
  
  AnyVar MassS = .....Scaling.MassScaling.Hand.MassScale;
  
  AnyVar MassStandard = ..StandardParameters.Hand.Mass; // Veeger1997 subject no.4. 
  
  Mass = MassS*MassStandard;
  
  AnyVar LengthStandard = 0.1;// Guesstimate..
  
  AnyVar Length = 0.1; // Guesstimate..
  AnyVar Radius = (Mass/(3.1416*Length*..StandardParameters.Hand.Density))^0.5;
  
  AnyVar Ixx = 0.25*Mass*Radius*Radius + 1/12*Mass*Length*Length;
  AnyVar Iyy = 0.5*Mass*Radius*Radius;
  AnyVar Izz = Ixx; 
  Jii = {Ixx,Iyy,Izz};
  
  sCoM={-0.06,0,0}; // Guesstimate
    JaboutCoMOnOff = On;
  
  
  
  
  AnyRefNode Hand={ sRel=.Scale({-0.1,0,.0})*.Mirror;};
  
  
  AnyRefNode PalmJoint={ sRel=.Scale({-0.08,-0.02,0.0})*.Mirror;};
  /*
  AnyRefNode WristContactNode={
  sRel=.Scale({-0.0,-0.0,0.0})*.Mirror;
  ARel={{-1,0,0},{0,0,...Sign*1},{0,...Sign*1,0}};  
  
  };
  
  AnyRefNode PalmLateralContactNode={
  sRel=.Scale({-0.08,-0.04,0.0})*.Mirror;
  ARel={{-1,0,0},{0,0,...Sign*1},{0,...Sign*1,0}};  
  
  };
  
  AnyRefNode PalmMedialContactNode={
  sRel=.Scale({-0.08,0.02,0.0})*.Mirror;
  ARel={{-1,0,0},{0,0,...Sign*1},{0,...Sign*1,0}};  
  };
  
  */
  
  AnyRefNode Ref={
  
  AnyRefNode wj={ 
    sRel=..Scale({-0.014,0.0,0.0})*..Mirror;
    //Note:STC Issue for scaling 
    ARel = {{1,0,0},
      {0,....Sign*1,0},
      {0,0,....Sign*1}
    }; 
  };
  
  AnyRefNode Via1_Extensor_Indicis = {
    //    AnyDrawRefFrame drw={RGB={0,1,0};};
    
    sRel = ..Scale({-0.03, -0.015, 0.015})*..Mirror; //guesstimate
  };
  
  
  AnyRefNode I_Extensor_Indicis = {
    //    AnyDrawRefFrame drw={};
    
    sRel = ..Scale({-0.135, -0.05, -0.005})*..Mirror; //guesstimate
  };
  
  
  
  AnyRefNode I_Extensor_Pollicis_Longus = {
    //    AnyDrawRefFrame drw={};
    sRel = ..Scale({-0.055, -0.065, -0.003})*..Mirror; //guesstimate
  };
  
  AnyRefNode Via1_Extensor_Pollicis_Longus= {
    //    AnyDrawRefFrame drw={RGB={0,1,0};};
    sRel = ..Scale({-0.03, -0.04, 0.005})*..Mirror; //guesstimate
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  
  
  
  AnyRefNode I_Extensor_Pollicis_Brevis = {
    //    AnyDrawRefFrame drw={};
    sRel = ..Scale({-0.055, -0.065, -0.003})*..Mirror; //guesstimate
  };
  
  AnyRefNode Via1_Extensor_Pollicis_Brevis= {
    //    AnyDrawRefFrame drw={RGB={0,1,0};};
    sRel = ..Scale({-0.03, -0.04, 0.005})*..Mirror; //guesstimate
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  
  
  
  
  AnyRefNode I_Abductor_Pollicis_Longus = {
    //   AnyDrawRefFrame drw={};
    sRel = ..Scale({-0.04, -0.055, -0.01})*..Mirror; //guesstimate
  };
  
  AnyRefNode Via1_Abductor_Pollicis_Longus= {
    //    AnyDrawRefFrame drw={RGB={0,1,0};};
    sRel = ..Scale({-0.01, -0.02, 0.015})*..Mirror; //guesstimate
  };
  
  
  AnyRefNode I_Extensor_Carpi_Ulnaris= {
    //    AnyDrawRefFrame drw={RGB={0,1,0};};
    sRel = ..Scale({-0.035, 0.017, 0.0053})*..Mirror; //guesstimate
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  
  AnyRefNode I_Extensor_Carpi_Radialis_Brevis= {
    //    AnyDrawRefFrame drw={RGB={0,0,1};};
    sRel = ..Scale({-0.04, -0.014, 0.01})*..Mirror; //guesstimate
  };
  
  AnyRefNode Via_Extensor_Carpi_Radialis_Brevis= {
    //    AnyDrawRefFrame drw={RGB={0,1,0};};
    sRel = ..Scale({-0.025, -0.015, 0.01})*..Mirror; //guesstimate
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  
  AnyRefNode I_Extensor_Carpi_Radialis_Longus ={
    //    AnyDrawRefFrame drw={RGB={0,0,1};};
    sRel = ..Scale({-0.05, -0.02, 0.01})*..Mirror; //guesstimate
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  AnyRefNode I_Flexor_Carpi_Ulnaris ={
    sRel = ..Scale({-0.04, 0.014, -0.0})*..Mirror; //guesstimate
    // AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  AnyRefNode I_Flexor_Carpi_Radialis ={
    sRel = ..Scale({-0.0335, -0.018, -0.0})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode Via_Flexor_Carpi_Radialis ={
    sRel = ..Scale({-0.035, -0.005, -0.013})*..Mirror; //guesstimate
    //    AnyDrawRefFrame drw={RGB={1,0,0};};
  };
  
  AnyRefNode I_Palmaris_Longus ={
    sRel = ..Scale({-0.0435, 0.0, -0.007})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  
  AnyRefNode Via_Palmaris_Longus ={
    sRel = ..Scale({-0.035, -0.0, -0.014})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  AnyRefNode I_Flexor_Digitorum_Superficialis_Digit2 ={
    sRel = ..Scale({-0.132, -0.05, -0.005})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Flexor_Digitorum_Superficialis_Digit3 ={
    sRel = ..Scale({-0.143, -0.025, -0.005})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Flexor_Digitorum_Superficialis_Digit4 ={
    sRel = ..Scale({-0.14, -0.006, -0.005})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Flexor_Digitorum_Superficialis_Digit5 ={
    sRel = ..Scale({-0.125, 0.017, -0.00})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,1};};
  };
  
  
  
  
  AnyRefNode Via_Flexor_Digitorum_Superficialis_Digit5 ={
    sRel = ..Scale({-0.03, 0.00, -0.005})*..Mirror; //guesstimate
    // AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode Via_Flexor_Digitorum_Superficialis_Digit4 ={
    sRel = ..Scale({-0.03, -0.003, -0.005})*..Mirror; //guesstimate
    // AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode Via_Flexor_Digitorum_Superficialis_Digit3 ={
    sRel = ..Scale({-0.03, -0.006, -0.005})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode Via_Flexor_Digitorum_Superficialis_Digit2 ={
    sRel = ..Scale({-0.03, -0.009, -0.005})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  
  
  AnyRefNode I_Flexor_Digitorum_Profundus_Digit2 ={
    sRel = ..Scale({-0.152, -0.055, -0.007})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Flexor_Digitorum_Profundus_Digit3 ={
    sRel = ..Scale({-0.169, -0.027, -0.005})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Flexor_Digitorum_Profundus_Digit4 ={
    sRel = ..Scale({-0.165, -0.008, -0.008})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Flexor_Digitorum_Profundus_Digit5 ={
    sRel = ..Scale({-0.145, 0.017, -0.009})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,1};};
  };
  
  
  
  
  
  AnyRefNode Via_Flexor_Digitorum_Profundus_Digit5 ={
    sRel = ..Scale({-0.03, 0.00, -0.005})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode Via_Flexor_Digitorum_Profundus_Digit4 ={
    sRel = ..Scale({-0.03, -0.002, -0.005})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode Via_Flexor_Digitorum_Profundus_Digit3 ={
    sRel = ..Scale({-0.03, -0.004, -0.005})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode Via_Flexor_Digitorum_Profundus_Digit2 ={
    sRel = ..Scale({-0.03, -0.006, -0.005})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  
  
  
  
  
  AnyRefNode I_Extensor_Digitorum_Digit2 ={
    sRel = ..Scale({-0.132, -0.05, 0.005})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Extensor_Digitorum_Digit3 ={
    sRel = ..Scale({-0.143, -0.025, 0.005})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Extensor_Digitorum_Digit4 ={
    sRel = ..Scale({-0.14, -0.006, 0.005})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  AnyRefNode I_Extensor_Digitorum_Digit5 ={
    sRel = ..Scale({-0.125, 0.017, 0.002})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,1};};
  };
  
  
  
  
  
  AnyRefNode Via_Extensor_Digitorum_Digit5 ={
    sRel = ..Scale({-0.02, 0.002, 0.011})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  AnyRefNode Via_Extensor_Digitorum_Digit4 ={
    sRel = ..Scale({-0.02, 0.00, 0.011})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  AnyRefNode Via_Extensor_Digitorum_Digit3 ={
    sRel = ..Scale({-0.02, -0.002, 0.011})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  AnyRefNode Via_Extensor_Digitorum_Digit2 ={
    sRel = ..Scale({-0.02, -0.004, 0.011})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  
  
  
  
  
  
  
  AnyRefNode Via_Extensor_Digiti_Minimi={
    sRel = ..Scale({-0.02, 0.005, 0.01})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,0};};
    ARel = RotMat(....Sign*pi/2,y)*RotMat(....Sign*pi/2,x);  // used for the SPLine.InitWrapPosVectors 
  };
  
  AnyRefNode I_Extensor_Digiti_Minimi ={
    sRel = ..Scale({-0.145, 0.017, 0.002})*..Mirror; //guesstimate
    //   AnyDrawRefFrame drw={RGB={0,1,1};};
  };
  
  
  
  
  AnyRefNode Via_Flexor_Pollicis_Longus={
    sRel = ..Scale({-0.03, -0.025, -0.01})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,0};};
  };
  
  
  
  AnyRefNode I_Flexor_Pollicis_Longus ={
    sRel = ..Scale({-0.093, -0.08, -0.02})*..Mirror; //guesstimate
    //AnyDrawRefFrame drw={RGB={0,1,1};};
  };
  
  
  //It is used for wrapping of the flexor muscles.
  AnyRefNode FlexorMuscleCyl = { 
    
    sRel = .wj.sRel-..Scale({0,0.07,0})*..Mirror-...WristJointSeg.RadialUlnarDeviation.sRel;
    
    AnyVec3 P1= sRel;
    AnyVec3 P3 =P1+ ..Scale({0.0,0.0,0.0115})*..Mirror;
    AnyVec3 P2 =P1+ ..Scale({0.0, 0.14,0.0})*..Mirror;
    
    
    
    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,P3,P2);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][2],Mat[0][0],Mat[0][1]},
      {Mat[1][2],Mat[1][0],Mat[1][1]},
      {Mat[2][2],Mat[2][0],Mat[2][1]}};          
    
    AnySurfCylinder cyl = { 
      Radius=((.sRel[0]-.P3[0])^2+(.sRel[1]-.P3[1])^2+(.sRel[2]-.P3[2])^2)^0.5;
      Length= ((.sRel[0]-.P2[0])^2+(.sRel[1]-.P2[1])^2+(.sRel[2]-.P2[2])^2)^0.5;
      //AnyDrawParamSurf drw={};
    };
    
  };
  
};//end Ref

  AnyRefNode Thumb3joint={ sRel=.Scale({0.0,0,0.05})*.Mirror;};
  
  AnyDrawSurf DrwSurf = {
    FileName = "hand_bone";
    RGB = ...ColorRef.Segments;
    ScaleXYZ = ({1,1.0,1})*.Mirror;
    AnyFunTransform3D &Scale = .Scale;
    Opacity = ...BonesOpacity.Hand;
  };
}; // End hand







