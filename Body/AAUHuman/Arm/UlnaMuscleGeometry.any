// This file contains muscle attachment points, bml's 
// etc.. For the forearm the data comes from MAYO sub2.

AnyFolder &Ulna =.Seg.Ulna;

Ulna = {
  
 //points used for fitting cyl to oleacron
 AnyRefNode oleacranon_Cyl_Point2   = {sRel = .Scale({0.008231, 0.008, 0.0290396-0.05})*.Mirror;   };
 AnyRefNode oleacranon_Cyl_Point1  = {sRel = .Scale({0.008231, 0.019+0.0115, 0.025396-0.019})*.Mirror;  };
 
 
 
//  
//  AnyRefNode test1 ={sRel=.oleacranon.p[0]; AnyDrawRefFrame drw={};};
//  AnyRefNode test2 ={sRel=.oleacranon.p[1]; AnyDrawRefFrame drw={};};
//  AnyRefNode test3 ={sRel=.oleacranon.p[2]; AnyDrawRefFrame drw={};};
//  AnyRefNode test4 ={sRel=.oleacranon.p[3]; AnyDrawRefFrame drw={};};
//  AnyRefNode test5 ={sRel=.oleacranon.p[4]; AnyDrawRefFrame drw={};};
//

AnyRefNode oleacranon = {
  
  
  AnyMatrix p = { 
    .Scale({-0.065, 0.007 , 0.003})*.Mirror,
    .Scale({0.085,  0.007,  0.003})*.Mirror,
    .I_Triceps_LH_1.sRel,
    .oleacranon_Cyl_Point1.sRel,
    .oleacranon_Cyl_Point2.sRel
  };			//dn(20120614): checked that scaling is moved out of WrappingCylinder5PointFit.any
  
  AnyFloat lengthscalefactor = 1;
  AnyFloat radiusscalefactor = 0.99; //scale down the radius because insertaion point is used for def.
  AnyMat33 transform = RotMat(pi*(1-...Sign-2)*0.5, y);
  
  //AnyFunTransform3D &Scale = .Scale;
  AnySurfCylinder  &oleacranon =cyl;
  
  #include "../ToolBox/WrappingSurfaces/WrappingCylinder5PointFit.any"
  cyl = {
//    AnyDrawParamSurf draw={
//      //          Opacity = 0.1;
//    };
  };
};

  
  
  AnyRefNode O_Pron_quadr_1 = {
    sRel = .Scale({0.016303, 0.215608, -0.005749} +{0.013,0.005,0.003})*.Mirror; //Corrected value
  };
  
  AnyRefNode O_Pron_quadr_2 = {
    sRel = .Scale(({0.019230, 0.249767, -0.006490}+{0.01,0.005,0.003}))*.Mirror; //Corrected value
  };
  
  AnyVec3 correction2 ={-0.005,0.0,0.008};  
  AnyRefNode O_Pronator_teres_caput_ulnare_1 = {
    
    sRel = .Scale({0.039301, 0.014662, 0.001805}+.correction2)*.Mirror;};
  
  AnyVec3 correction1 ={0.015,0.0,0.005};
  AnyRefNode O_Supinator_ulna_part_1 = {sRel = .Scale({-0.012788, 0.033349, 0.010340}+.correction1)*.Mirror;};
  AnyRefNode O_Supinator_ulna_part_2 = {sRel = .Scale({-0.003613, 0.059799, 0.016045}+.correction1)*.Mirror;};
  
  AnyVec3 correction0 ={0.0,0.0,-0.01};
  AnyRefNode I_Brachialis_1 = {sRel = .Scale({0.017098, 0.038909, 0.007278}+.correction0)*.Mirror;};
  AnyRefNode I_Brachialis_2 = {sRel = .Scale({0.017098, 0.038909, 0.007278}+.correction0)*.Mirror;};
  
  AnyVec3 correction ={0.0,0.0,-0.00};
  AnyRefNode I_Triceps_LH_1 = {sRel = .Scale({0.017540, -0.007721, 0.025663}+.correction)*.Mirror;};
  AnyRefNode I_Triceps_LH_2 = {sRel = .Scale({0.017540, -0.007721, 0.025663}+.correction)*.Mirror;};
  AnyRefNode I_Anconeus_1   = {sRel = .Scale({0.008231, 0.027393, 0.031396})*.Mirror;};
  AnyRefNode I_Anconeus_2   = {sRel = .Scale({0.006305, 0.057521, 0.029827})*.Mirror;};
  AnyRefNode I_Triceps_ME_1 = {sRel = .Scale(({0.017540, -0.007721, 0.025663}+.correction))*.Mirror;};
  AnyRefNode I_Triceps_ME_2 = {sRel = .Scale(({0.017540, -0.007721, 0.025663}+.correction))*.Mirror;};
  AnyRefNode I_Triceps_LA_1 = {sRel = .Scale(({0.017540, -0.007721, 0.025663}+.correction))*.Mirror;};
  AnyRefNode I_Triceps_LA_2 = {sRel = .Scale(({0.017540, -0.007721, 0.025663}+.correction))*.Mirror;};
  
  
  AnyRefNode O_Extensor_Indicis = {
    //   AnyDrawRefFrame drw={};
    sRel = .Scale({0.022, 0.20, 0.00})*.Mirror; //guesstimate
  };
  AnyRefNode O_Extensor_Pollicis_Longus = {
    //   AnyDrawRefFrame drw={};
    sRel = .Scale({0.015, 0.15, 0.01})*.Mirror; //guesstimate
  };
  AnyRefNode O_Abductor_Pollicis_Longus = {
    
    sRel = .Scale({0.008, 0.1, 0.01})*.Mirror; //guesstimate
  };
  
  AnyRefNode Via1_Flexor_Carpi_Ulnaris= {
    sRel = .Scale({0.034, 0.16, -0.005})*.Mirror; //guesstimate
//    AnyDrawRefFrame drw={};
  };
  
  AnyRefNode Via2_Flexor_Carpi_Ulnaris= {
    sRel = .Scale({0.03, 0.245, -0.01})*.Mirror; //guesstimate
//    AnyDrawRefFrame drw={};
  };

  
    AnyRefNode Via1_Extensor_Carpi_Ulnaris= {
    sRel = .Scale({0.02, 0.1, 0.02})*.Mirror; //guesstimate
//    AnyDrawRefFrame drw={};
  };
  
  AnyRefNode Via2_Extensor_Carpi_Ulnaris= {
    sRel = .Scale({0.022, 0.24, 0.008})*.Mirror; //guesstimate
//   AnyDrawRefFrame drw={};
  };

  
  AnyRefNode O_Flexor_Digitorum_Superficialis= {
    sRel = .Scale({0.03,0.02, -0.005})*.Mirror; //guesstimate
   // AnyDrawRefFrame drw={RGB={1,1,0};};
  };
  
  AnyRefNode O_Flexor_Digitorum_Profundus= {
    sRel = .Scale({0.013,0.07, 0.00})*.Mirror; //guesstimate
//    AnyDrawRefFrame drw={RGB={1,1,0};};
  };
  
  

  

  


  
//  AnyRefNode p1={sRel=.UlnaMuscleCyl.P1;
//  AnyDrawRefFrame drw={};};  
//  AnyRefNode p2={sRel=.UlnaMuscleCyl.P2;
//  AnyDrawRefFrame drw={};};  
//  AnyRefNode p3={sRel=.UlnaMuscleCyl.P3;
//  AnyDrawRefFrame drw={};};  
  AnyRefNode UlnaMuscleCyl = { 
    sRel = .Scale({0.02, 0.05 , 0.01})*.Mirror;
    AnyVec3 P1= sRel;
    AnyVec3 P3 =P1+ .Scale({0.0,0.0,0.017})*.Mirror;
    AnyVec3 P2 =P1+ .Scale({-0.007, 0.21,-0.007})*.Mirror;
    //Calculate rot matrix for cylinder using three points
    //p2-p1 used to find x axis
    //p3-p1 used to find the y axis
    //z axis found as cross product
    AnyMat33  Mat = RotMat(sRel,P2,P3);
    
    //Switch around the on the columns to compensate that the cylinder has 
    //main axis along the zaxis
    ARel={
      {Mat[0][1],Mat[0][2],Mat[0][0]},
      {Mat[1][1],Mat[1][2],Mat[1][0]},
      {Mat[2][1],Mat[2][2],Mat[2][0]}};          
    
    AnySurfCylinder cyl = { 
      Radius=((.sRel[0]-.P3[0])^2+(.sRel[1]-.P3[1])^2+(.sRel[2]-.P3[2])^2)^0.5;
      Length= ((.sRel[0]-.P2[0])^2+(.sRel[1]-.P2[1])^2+(.sRel[2]-.P2[2])^2)^0.5;
//      AnyDrawParamSurf drw={};
    };
  };

}; 



