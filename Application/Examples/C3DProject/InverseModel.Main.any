
//This is a list of the classes used for defining the model
//Class used for defining a marker
#include "../../../Body/AAUHuman/ToolBox/Mocap/CreateMarkerClass.any"
//Class used for defining a marker
#include "../../../Body/AAUHuman/ToolBox/Mocap/CreateMarkerClassTDWidget.any"
//Class used to construct a forceplate of type4
#include "../../../Body/AAUHuman/ToolBox/Mocap/ForcePlateType2AutoDetection.any"
#include "../../../Body/AAUHuman/ToolBox/Mocap/ForcePlateType2.any"
#include "../../../Body/AAUHuman/ToolBox/Mocap/ForcePlateType3AutoDetection.any"
#include "../../../Body/AAUHuman/ToolBox/Mocap/ForcePlateType3.any"
#include "../../../Body/AAUHuman/ToolBox/Mocap/ForcePlateType4AutoDetection.any"
#include "../../../Body/AAUHuman/ToolBox/Mocap/ForcePlateType4.any"

//Class used for defining a which antrhopometics measurements will be part of the analysis
#include "../../../Body/AAUHuman/ToolBox/Mocap/OptimizeAnthropometricsOnOffV2.any"



#define MotionAndParameterOptimizationModel 0
#define InverseDynamicModel 1
#define HumanModelPresent 1
#define LoadInverseDynamicModel 
#define SaveAllResults 
#define IntialPositionStudy 0
#define MarkersPresent 1

Main ={
   #include "WidgetValues.any"
  
  #include "C3DProject.Main.any"

  #include "<DataPath>/TrialSpecificData.any" 
  #include "<DataPath>/ModelSetup.any"
 

  
  Main.ModelSetup.C3DFileData ={
    ConstructModelOnOff = Off; //If this is set to on it will display the markers but slow down the analysis a lot....
    ConstructChartOnOff=Off;
  };
  
  //  Run the operation InverseDynamicAnalysisSequence to calibrate the model and run inverse dynamic analysis.
  AnyOperationMacro InverseDynamicAnalysisSequence = { 
    MacroStr={
      "classoperation Main.Studies.LoadParametersOptimizationResults" + " " + strquote("Load design") + " --file=" + strquote(FilePathCompleteOf(Main.ModelSetup.FileNames.OptimizedParameters )),
      "operation Main.Studies.HumanModel.Calibration.CalibrationSequence",
      "run",
      "operation Main.Studies.InverseDynamicStudy.InverseDynamics",
      "run"
    };
  };
  


  AnyOperationMacro SaveResults = { 
    MacroStr={
    "classoperation Main.Studies.InverseDynamicStudy.Output" + " " + strquote("Save data") + " --file=" + strquote(FilePathCompleteOf(Main.ModelSetup.FileNames.Results )) + " --type=Deep"
    };
  };
  
  
   AnyOperationMacro LoadResults = { 
    MacroStr={
     "classoperation Main.Studies.LoadParametersOptimizationResults" + strformat("\x22")+ "Load design" + strformat("\x22")+ " --file="+ strquote(FilePathCompleteOf(Main.ModelSetup.FileNames.OptimizedParameters) ),
     "classoperation Main" + strformat("\x22")+ "Update Values" + strformat("\x22"),
     "classoperation Main.Studies.InverseDynamicStudy.Output" + " " + strquote("Load data") + " --file=" + strquote(FilePathCompleteOf(Main.ModelSetup.FileNames.Results )) 
   
   };
  };
  

  Main.Project={
    Files = {
     // SetValueFile = FilePathCompleteOf(Main.ModelSetup.FileNames.WidgetValues); //do not use this file values from opt are saved in txt file 
    };
    
    Tasks={
      
      Main.Project.Files.MainFile="InverseModel.Main.any";
      
      Inverse_Dynamic_Model.Inverse_Dynamic_Model = {
        Description = {
          Title = "InverseDynamicModel Task";
          BodyText = strformat("The model is a normal inverse dynamics study which is driven by the optimized motion from the" +  AnyBodyLinkOf(&Main.Project.Tasks.Motion_And_Param_Opt_Model.Load_Motion_And_Param_Opt_Model," Motion and parameter optimization study")+ ", the InverseDynamicModel model includes muscles. <br/>"+
          "Executing the task will automatically do the following operations <br/>"+
       strformat ("\t") +"1.) Load the optimized model parameters save in the file named "+  Main.TrialSpecificData.NameOfFile +"OptimizedParameters.txt <br/>"+
      strformat ("\t") +"2.) Update the model with the loaded parameters <br/>" +
      strformat ("\t") +"3.) Load the motion saved in the files named " + Main.TrialSpecificData.NameOfFile +"-output-euler-bodypart.txt <br/>"+
      strformat ("\t") +"4.) Run the inverse dynamic analysis <br/>"    );
          Tooltip = Title;
        };
        Operation = &Main.InverseDynamicAnalysisSequence ;
        
      };
      
      

      
      Inverse_Dynamic_Model.SaveResults = {
        Description = {
          Title = "Save all results Task";
          BodyText = "Executing this task will save all output from the inverse dynamics model to a file named :"+ FilePathCompleteOf(Main.ModelSetup.FileNames.Results) +"<br/>"+     
          "This file contains all results and can be used for replaying analysis";
          Tooltip = Title;
        };
        Operation = &Main.SaveResults ;
        
      };
      
      Inverse_Dynamic_Model.LoadResults = {
        Description = {
         Title = "Load all reuslts Task";
         BodyText = "Executing this task will load all output from the file :"+ FilePathCompleteOf(Main.ModelSetup.FileNames.Results) +"<br/>"+         
                    "This file contains all results and can be used for replaying analysis <br/>" +
                    "Please note that the name of the file is specified here " + AnyScriptLinkOf(&Main.TrialSpecificData.NameOfFile,"NameOfFile") +"<br/>"+
                    "To load another file this name should be changed";
          Tooltip = Title;
        };
        Operation = &Main.LoadResults ;
        
      };
      
          
    Inverse_Dynamic_Model.Replay= {
      Description = {
        Title = "Replay the motion";
        
        BodyText = 
        "This task can be used to do replay all the results found in the inverse dynamic analysis";
        
        
        Tooltip = "Replay motion";
      };
      
      Operation =  &Main.Studies.InverseDynamicStudy.Replay;
      
    };

      

    };
};
  
  
  
  Studies={
    
    //This study is used for running the inverse dynamic analysis of the optimized motion
    //***********************************************************************************
    HumanModel={
      AnyFolder &Mannequin=.InverseDynamicStudy.Mannequin;
      #include  "BodyPartsSetupInv.any"
    };
    #include "HumanModel.any"
    
    AnyBodyStudy InverseDynamicStudy = {
      
      
   
      
      AnyFolder &C3DData=..ModelSetup.C3DFileData ;
      AnyFolder &HumanModel=.HumanModel.BodyModel;
      #include "Mannequin.any" 
      
        
  
      
      //Environment around the human
      AnyFolder EnvironmentModel ={
        
        AnyFolder DrawC3DMarkers = {};
        //Model of the floor and force plates this is where the force plates are defined
        AnyFolder &HumanModelRef=..HumanModel.BodyModel;
        //This environment file makes use of automatic detecteion of which foot are incontact with which plate 
           #include "<DataPath>/EnvironmentAutoDetection.any"
        //This environment file has no automatic detecteion of which foot are incontact with which plate it has to be set manually
         //#include "<DataPath>/Environment.any"
      };
      
      //Connection between environment and the human    
      AnyFolder ModelEnvironmentConnection = {
        //Drivers for the model
        #include "JointsAndDriversOptimized.any"      
      };
      
     
      
      InverseDynamics.Criterion.UpperBoundOnOff=Off;
      nStep=Main.ModelSetup.nStep;
      Gravity =Main.ModelSetup.Gravity;
      tStart = Main.TrialSpecificData.tStart+2*Kinematics.ApproxVelAccPerturb; 
      tEnd = Main.TrialSpecificData.tEnd-2*Kinematics.ApproxVelAccPerturb;
      //#include "GCDOutput.any"
    };
    
    
    //This study is only used for loading the optimized parameters    
    AnyOptKinStudy LoadParametersOptimizationResults =     {
      AnyFolder &Study = .InverseDynamicStudy;
      AnyFolder &HumanModel = .HumanModel;
      ParameterOptimization.ConvergenceTol=1e-3;
      Analysis =   {
        AnyOperation &ref = .Study.Kinematics;
      };
    };
  };

};
#undef MotionAndParameterOptimizationModel 
#undef InverseDynamicModel
#undef HumanModelPresent
#undef LoadInverseDynamicModel 
#undef SaveAllResults
#undef IntialPositionStudy 
#undef MarkersPresent 

