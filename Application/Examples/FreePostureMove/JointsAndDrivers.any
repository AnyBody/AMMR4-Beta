/* ----------------------------------------------------------------
Drivers for the model:

-The pelvis is locked to the ground 
-The remaining degrees of freedom are controlled by parameters in the mannequin.any file.
-This file is a good way to get an overview of the dof in the full body model
 all the dof in the body model is driven from this file.
-In total 

Soeren, March 1, 2006.
----------------------------------------------------------------  */

AnyFolder Drivers = {
  
  // Aliases for convenient referencing
  AnyFolder &JntPos=..Mannequin.Posture;  
  AnyFolder &Thorax = ..HumanModel.Trunk.SegmentsThorax.ThoraxSeg;
  AnyFolder &ref=Main.Model.HumanModel.Trunk;
  
  
  // ************************************
  // Drivers for attaching the pelvis to the global reference system
  // ************************************  

  AnyKinEqInterPolDriver PelvisGroundDriver ={
    AnyKinLinear lin ={
      AnyFixedRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 =....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
    };
    AnyKinRotational rot ={
      AnyFixedRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 =....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
      Type=RotAxesAngles;
    };
    Data={
      .JntPos.PelvisPosX,
      .JntPos.PelvisPosY,
      .JntPos.PelvisPosZ,
      pi/180*.JntPos.PelvisRotZ,
      pi/180*.JntPos.PelvisRotY,
      pi/180*.JntPos.PelvisRotX
    };
    T=.JntPos.PelvisPosTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={On,On,On,On,On,On};
  };


  
  // ************************************
  // Drivers for the spine
  // ************************************
  
  //Neck driver 
  AnyKinEqInterPolDriver NeckJntDriver = {
    AnyRevoluteJoint &T12L1Joint = ...HumanModel.Interface.Trunk.NeckJoint;
    Data = pi/180*{.JntPos.NeckExtension};
    Reaction.Type = {Off};
    T=.JntPos.NeckTime;
    Type=PiecewiseLinear;
    

  };
  
  //Thorax pelvis rotation driver
  AnyKinEqInterPolDriver PostureDriver ={
    AnyKinMeasureOrg &Ref2 = ...HumanModel.Interface.Trunk.PelvisThoraxLateralBending;        
    AnyKinMeasureOrg &Ref3 = ...HumanModel.Interface.Trunk.PelvisThoraxRotation;   
    AnyKinMeasureOrg &Ref1 = ...HumanModel.Interface.Trunk.PelvisThoraxExtension;
   
    Data = pi/180*{
          .JntPos.PelvisThoraxLateralBending,
      .JntPos.PelvisThoraxRotation,
      .JntPos.PelvisThoraxExtension
    };
    T=.JntPos.PelvisThoraxTime;
    Type=PiecewiseLinear;
    
    Reaction.Type = {Off,Off,Off};  
  };  

  
  
  // ************************************
  // Drivers for the right arm
  // ************************************

  
  //Sterno clavicular joint driver
  AnyKinEqInterPolDriver SCDriverRight ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Right.SternoClavicularProtraction;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Right.SternoClavicularElevation;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Right.SternoClavicularAxialRotation;
    Data = pi/180*{
      .JntPos.Right.SternoClavicularProtraction,
      .JntPos.Right.SternoClavicularElevation,
      .JntPos.Right.SternoClavicularAxialRotation
    };
   T=.JntPos.Right.SternoClavicularTime;
    Type=PiecewiseLinear;
    

    Reaction.Type={Off,Off,Off};
  };
  
  
  //Glenohumeral joint 
  AnyKinEqInterPolDriver GHDriverRight={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Right.GlenohumeralAbduction;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Right.GlenohumeralFlexion;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Right.GlenohumeralExternalRotation;

     Data=pi/180*{
      .JntPos.Right.GlenohumeralAbduction,  //GH joint
      .JntPos.Right.GlenohumeralFlexion,  //GH joint
      .JntPos.Right.GlenohumeralExternalRotation  //GH joint
     };
 T=.JntPos.Right.GlenohumeralTime;
    Type=PiecewiseLinear;
    
     Reaction.Type={Off,Off,Off};
  };

  
  //Elbow flexion driver  
  AnyKinEqInterPolDriver ElbowFlexionDriverRight={
    AnyKinMeasureOrg  &Elbow =...HumanModel.Interface.Right.ElbowFlexion;
    Data=pi/180*{.JntPos.Right.ElbowFlexion};  
 T=.JntPos.Right.ElbowFlexionTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off};
  };
  
  //Elbow pronation driver
  AnyKinEqInterPolDriver ElbowPronationDriverRight={
    AnyKinMeasureOrg &Elbow =...HumanModel.Interface.Right.ElbowPronation;
    Data = pi/180*{.JntPos.Right.ElbowPronation };  

 T=.JntPos.Right.ElbowPronationTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off};
  };

  //Wrist driver 
  AnyKinEqInterPolDriver WristDriverRight ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Right.WristFlexion;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Right.WristAbduction;
    Data = pi/180*{
         .JntPos.Right.WristFlexion,
         .JntPos.Right.WristAbduction
       };

     T=.JntPos.Right.WristTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off,Off};
  };

  

  // ************************************
  // Drivers for the left arm
  // ************************************
  
  //Sterno clavicular joint driver
  AnyKinEqInterPolDriver SCDriverLeft ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Left.SternoClavicularProtraction;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Left.SternoClavicularElevation;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Left.SternoClavicularAxialRotation;
    
    Data = pi/180*{
      .JntPos.Left.SternoClavicularProtraction,
      .JntPos.Left.SternoClavicularElevation,
      .JntPos.Left.SternoClavicularAxialRotation
    };
    
 T=.JntPos.Left.SternoClavicularTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off,Off,Off};
  };
  
  //Glenohumeral joint driver
  AnyKinEqInterPolDriver GHDriverLeft={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Left.GlenohumeralAbduction;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Left.GlenohumeralFlexion;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Left.GlenohumeralExternalRotation;
    Data=pi/180*{
      .JntPos.Left.GlenohumeralAbduction,  //GH joint
      .JntPos.Left.GlenohumeralFlexion,  //GH joint
      .JntPos.Left.GlenohumeralExternalRotation  //GH joint
    };    
 T=.JntPos.Left.GlenohumeralTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off,Off,Off};
  };
  
  //Elbow flexion driver
  AnyKinEqInterPolDriver ElbowFEDriverLeft={
  AnyKinMeasureOrg  &Elbow =...HumanModel.Interface.Left.ElbowFlexion;
    Data=pi/180*{.JntPos.Left.ElbowFlexion};  
 T=.JntPos.Left.ElbowFlexionTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off};
  };

  //Elbow pronation driver 
  AnyKinEqInterPolDriver ElbowPSDriverLeft={
    AnyKinMeasureOrg &Elbow =...HumanModel.Interface.Left.ElbowPronation;
    Data= pi/180*{.JntPos.Left.ElbowPronation };  
 T=.JntPos.Left.ElbowPronationTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off};
  };
  
  
  //Wrist driver
  AnyKinEqInterPolDriver WristDriverLeft ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Left.WristFlexion;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Left.WristAbduction;
    Data = pi/180*{
         .JntPos.Left.WristFlexion,
         .JntPos.Left.WristAbduction};

 T=.JntPos.Left.WristTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off,Off};
  };
  
  
 
  // ************************************
  // Drivers for the right leg
  // ************************************
  
   //Hip driver 
  AnyKinEqInterPolDriver HipDriverRight={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Right.HipFlexion;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Right.HipExternalRotation;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Right.HipAbduction;
    Data= pi/180*{
      .JntPos.Right.HipFlexion,
      .JntPos.Right.HipExternalRotation,
      .JntPos.Right.HipAbduction
    };    
 T=.JntPos.Left.HipTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off,Off,Off};
  
  };
   
  //Knee driver
  AnyKinEqInterPolDriver KneeDriverRight={
    AnyKinMeasureOrg  &Knee = ...HumanModel.Interface.Right.KneeFlexion;
    Data=pi/180*{.JntPos.Right.KneeFlexion};  
 T=.JntPos.Left.KneeTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off};
  };
  
  //Ankle driver
  AnyKinEqInterPolDriver AnkleDriverRight={
    AnyKinMeasureOrg &ref1=...HumanModel.Interface.Right.AnklePlantarFlexion;
    AnyKinMeasureOrg &ref2=...HumanModel.Interface.Right.AnkleEversion;
    Data = pi/180*{.JntPos.Right.AnklePlantarFlexion,.JntPos.Right.AnkleEversion};  
 T=.JntPos.Left.AnkleTime;
    Type=PiecewiseLinear;
    
    
    Reaction.Type={Off,Off};
  };
  

  // ************************************
  // Drivers for the Left leg
  // ************************************
  
  //Left hip driver
  AnyKinEqInterPolDriver HipDriverLeft={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Left.HipFlexion;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Left.HipExternalRotation;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Left.HipAbduction;
    Data=pi/180*{
      .JntPos.Left.HipFlexion,
      .JntPos.Left.HipExternalRotation,
      .JntPos.Left.HipAbduction
    };    
 T=.JntPos.Left.HipTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off,Off,Off};
  };
  
  //Knee driver
  AnyKinEqInterPolDriver KneeDriverLeft={
    AnyKinMeasureOrg &Knee =...HumanModel.Interface.Left.KneeFlexion;
    Data=pi/180*{      .JntPos.Left.KneeFlexion   };  
 T=.JntPos.Left.KneeTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off};
  };
  

  
 
//Ankle driver
  AnyKinEqInterPolDriver AnkleDriverLeft={
    AnyKinMeasureOrg &ref1=...HumanModel.Interface.Left.AnklePlantarFlexion;
    AnyKinMeasureOrg &ref2=...HumanModel.Interface.Left.AnkleEversion;
    Data = pi/180*{.JntPos.Left.AnklePlantarFlexion,.JntPos.Left.AnkleEversion};  
 T=.JntPos.Left.AnkleTime;
    Type=PiecewiseLinear;
    
    Reaction.Type={Off,Off};
  };
  
};//Drivers
