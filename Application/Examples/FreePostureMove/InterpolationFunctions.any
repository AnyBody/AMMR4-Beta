/* ----------------------------------------------------------------
Functions for the model:

-The pelvis is locked to the ground 
-The remaining degrees of freedom are controlled by parameters in the mannequin.any file.
-This file is a good way to get an overview of the dof in the full body model
all the dof in the body model is driven from this file.

Soeren, March 1, 2006.
----------------------------------------------------------------  */

AnyFolder InterpolationFunctions = {
  
  // Aliases for convenient referencing
  AnyFolder &JntPos=.Mannequin.Posture;  
  AnyFolder &Thorax = ..HumanModel.BodyModel.Trunk.SegmentsThorax.ThoraxSeg;
  //  AnyFolder &ref=Main.Model.HumanModel.BodyModel.Trunk;
  
  // ************************************
  // Functions for attaching the pelvis to the global reference system
  // ************************************  
  
  AnyFunInterpol PelvisGroundFunction ={
    
    Data={
      .JntPos.PelvisPosX,
      .JntPos.PelvisPosY,
      .JntPos.PelvisPosZ,
      pi/180*.JntPos.PelvisRotZ,
      pi/180*.JntPos.PelvisRotY,
      pi/180*.JntPos.PelvisRotX
    };
    T=.JntPos.PelvisPosTime;
    Type=PiecewiseLinear;
  };
  
  
  // ************************************
  // Functions for the spine
  // ************************************
  
  //Neck Function 
  AnyFunInterpol NeckFunction = {
    Data = pi/180*{.JntPos.NeckExtension};
    T=.JntPos.NeckTime;
    Type=PiecewiseLinear;
  };
  
  //Thorax pelvis rotation Function
  AnyFunInterpol PostureFunction = {
    Data = pi/180*{
      .JntPos.PelvisThoraxLateralBending,
      .JntPos.PelvisThoraxRotation,
      .JntPos.PelvisThoraxExtension
    };
    T=.JntPos.PelvisThoraxTime;
    Type=PiecewiseLinear;
  };  
  
  // ************************************
  // Functions for the right arm
  // ************************************
  
  //Sterno clavicular joint Function
  AnyFunInterpol SCFunctionRight ={
    Data = pi/180*{
      .JntPos.Right.SternoClavicularProtraction,
      .JntPos.Right.SternoClavicularElevation,
      .JntPos.Right.SternoClavicularAxialRotation
    };
    T=.JntPos.Right.SternoClavicularTime;
    Type=PiecewiseLinear;
  };
  
  //Glenohumeral joint 
  AnyFunInterpol GHFunctionRight={
    Data=pi/180*{
      .JntPos.Right.GlenohumeralAbduction,  //GH joint
      .JntPos.Right.GlenohumeralFlexion,  //GH joint
      .JntPos.Right.GlenohumeralExternalRotation  //GH joint
    };
    T=.JntPos.Right.GlenohumeralTime;
    Type=PiecewiseLinear;
  };
  
  //Elbow flexion Function  
  AnyFunInterpol ElbowFlexionFunctionRight={
    Data=pi/180*{.JntPos.Right.ElbowFlexion};  
    T=.JntPos.Right.ElbowFlexionTime;
    Type=PiecewiseLinear;
  };
  
  //Elbow pronation Function
  AnyFunInterpol ElbowPronationFunctionRight={
    Data = pi/180*{.JntPos.Right.ElbowPronation };  
    T=.JntPos.Right.ElbowPronationTime;
    Type=PiecewiseLinear;
  };
  
  //Wrist Function 
  AnyFunInterpol WristFunctionRight ={
    Data = pi/180*{
      .JntPos.Right.WristFlexion,
      .JntPos.Right.WristAbduction
    };
    T=.JntPos.Right.WristTime;
    Type=PiecewiseLinear;
  };
  
  // ************************************
  // Functions for the left arm
  // ************************************
  
  //Sterno clavicular joint Function
  AnyFunInterpol SCFunctionLeft ={
    Data = pi/180*{
      .JntPos.Left.SternoClavicularProtraction,
      .JntPos.Left.SternoClavicularElevation,
      .JntPos.Left.SternoClavicularAxialRotation
    };
    T=.JntPos.Left.SternoClavicularTime;
    Type=PiecewiseLinear;
  };
  
  //Glenohumeral joint Function
  AnyFunInterpol GHFunctionLeft={
    Data=pi/180*{
      .JntPos.Left.GlenohumeralAbduction,  //GH joint
      .JntPos.Left.GlenohumeralFlexion,  //GH joint
      .JntPos.Left.GlenohumeralExternalRotation  //GH joint
    };    
    T=.JntPos.Left.GlenohumeralTime;
    Type=PiecewiseLinear;
  };
  
  //Elbow flexion Function
  AnyFunInterpol ElbowFEFunctionLeft={
    Data=pi/180*{.JntPos.Left.ElbowFlexion};  
    T=.JntPos.Left.ElbowFlexionTime;
    Type=PiecewiseLinear;
  };
  
  //Elbow pronation Function 
  AnyFunInterpol ElbowPSFunctionLeft={
    Data= pi/180*{.JntPos.Left.ElbowPronation };  
    T=.JntPos.Left.ElbowPronationTime;
    Type=PiecewiseLinear;
  };
  
  //Wrist Function
  AnyFunInterpol WristFunctionLeft = {
    Data = pi/180*{
      .JntPos.Left.WristFlexion,
      .JntPos.Left.WristAbduction};
    
    T=.JntPos.Left.WristTime;
    Type=PiecewiseLinear;
  };
  
  // ************************************
  // Functions for the right leg
  // ************************************
  
  //Hip Function 
  AnyFunInterpol HipFunctionRight={
    Data= pi/180*{
      .JntPos.Right.HipFlexion,
      .JntPos.Right.HipExternalRotation,
      .JntPos.Right.HipAbduction
    };    
    T=.JntPos.Left.HipTime;
    Type=PiecewiseLinear;
  };
  
  //Knee Function
  AnyFunInterpol KneeFunctionRight={
    Data=pi/180*{.JntPos.Right.KneeFlexion};  
    T=.JntPos.Left.KneeTime;
    Type=PiecewiseLinear;
  };
  
  //Ankle Function
  AnyFunInterpol AnkleFunctionRight={
    Data = pi/180*{.JntPos.Right.AnklePlantarFlexion,.JntPos.Right.AnkleEversion};  
    T=.JntPos.Left.AnkleTime;
    Type=PiecewiseLinear;
  };
  
  // ************************************
  // Functions for the Left leg
  // ************************************
  
  //Left hip Function
  AnyFunInterpol HipFunctionLeft={
    Data=pi/180*{
      .JntPos.Left.HipFlexion,
      .JntPos.Left.HipExternalRotation,
      .JntPos.Left.HipAbduction
    };    
    T=.JntPos.Left.HipTime;
    Type=PiecewiseLinear;
  };
  
  //Knee Function
  AnyFunInterpol KneeFunctionLeft={
    Data=pi/180*{      .JntPos.Left.KneeFlexion   };  
    T=.JntPos.Left.KneeTime;
    Type=PiecewiseLinear;
  };
  
  //Ankle Function
  AnyFunInterpol AnkleFunctionLeft={
    Data = pi/180*{.JntPos.Left.AnklePlantarFlexion,.JntPos.Left.AnkleEversion};  
    T=.JntPos.Left.AnkleTime;
    Type=PiecewiseLinear;
  };
};//Functions

