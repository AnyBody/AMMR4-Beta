//DESCRIPTION OF MODEL
//The model has two models which can be switched in and out by switched in the top of the main 
//file. The model  "MotionAndParameterOptimizationModel" is used for optimizing the motion and identifying model 
//parameters such as segment lengths and local marker positions. The output from this analysis is 
//a set of parameters which are automatically saved and the optimized motion in terms of joints angles.
//The joint angles are automatically saved once the kinematic analysis is done. This model has no 
//muscles applied. 

//The second model is a normal inverse dynamics study which is driven by the optimized motion from 
//the first study, this "InverseDynamicModel" model includes muscles.
//It is recommended to have only one of the model active simultaneously



//HOWTO RUN IT
//This model can be used as a template model for marker driven models. Running the model on 
//requires 3 steps 
//Steps:
//1. Run the RunMotionAndParameterOptimizationSequence sequence  in the operation tree to optimize the man and save the joint angles (set the switch MotionAndParameterOptimizationModel 1 )
//2. Reload the model (F7) to read in the saved joint angles (if you just want to run the model, (set the switch InverseDynamicModel 1 and MotionAndParameterOptimizationModel 0)
//3. Run the InverseDynamicAnalysisSequence analysis sequence by pressing it in the operation tree
//Please find a more detailed desciption of the below.



//Set this to 1 if you want to run the motion and Parameter Optimization identification
//**************************************************
#define MotionAndParameterOptimizationModel 1

//Set this to 1 if you want to run the inverse dynamic analysis
#define InverseDynamicModel 0
//Usually only have one of the two swicthes active so set the inactive analysis to 0
//**************************************************

//This is a list of the classes used for defining the model
//Class used for defining a marker
#include "CreateMarkerClass.any"
//Class used to construct a forceplate of type4
#include "ForcePlateType4.any"
//Class used for defining a which antrhopometics measurements will be part of the analysis
#include "OptimizeAnthropometricsOnOff.any"



Main = {
  
  //This file controls most of the model setup, the following items is defined here:
  //1. C3D file definition
  //2. Optimization settings for which anthropometrics to optimize
  //3. Defition of markers
  //If you want to run the model on your own data this is the place to start, additioanlly it may need to 
  //make changes in the Mannequin file to position the human model close to the recorded markers.
  #include "ModelSetup.any" 
  
  
  #if MotionAndParameterOptimizationModel

  //STEP1
  //PLASE MAKE SURE THAT IF YOU PRESS File->Open YOU ARE IN THE DIRECTRORY OF THIS APPLICATION. If this is not the case go to this directory and open a file,
  //otherwise the automatic procedure may not work
  // Run this sequence of analysis by selecting it in the operation tree
  AnyOperationMacro RunMotionAndParameterOptimizationSequence  = {  FileName = "Sequence1.anymcr";   };
  //  This is the sequence of operation in the "Sequence1.anymcr" file
  //  operation Main.Studies.ParameterIdentification.ParameterOptimization  //This will run the parameter identification
  //  run
  //  runmacro   "SaveMacroOperation-Save.anymcr" //This will save a string into a macro file, the string provides the filename to save 
  //                                              //the optimized design in. The string is automatically set to be  the C3DFilename + OptimizedParameters
  //  runmacro   "RunMacroOperation-Save.anymcr"  //This will save the optimized design into a file named according to the string 
  //  operation Main.Studies.MotionOptimization.Kinematics 
  //  run
    
  
   
  // STEP 2:  Change the switches in the top of the main file to
  //
  //         MotionAndParameterOptimizationModel 0 
  //         InverseDynamicModel 1
  //
  //         CLICK RELOAD
  //
  //         If you would like to see the markers floating around next to the man during
  //         the inverse dynamics analysis, set ConstructModelOnOff = On; in the c3d file object.(ModelSetup.any)
  //         Also they can also be included in the parameter optimization study, but will slow down the
  //         analysis a lot
           
  
  #endif 
  
  #if InverseDynamicModel
  
  
  
  // STEP 3: Run the operation InverseDynamicAnalysisSequence to calibrate the model and run inverse dynamic analysis.
  
  AnyOperationMacro InverseDynamicAnalysisSequence = {  FileName = "Sequence2.anymcr";   };
  //  runmacro   "SaveMacroOperation-Load.anymcr"
  //  runmacro   "RunMacroOperation-Load.anymcr"   
   //  operation Main.Studies.InverseDynamicStudy.InitialConditions;  //this is done to have the model updated before running calibration
 //  run
  //  operation Main.Studies.HumanModel.Calibration.CalibrationSequence
  //  run
  //  operation Main.Studies.InverseDynamicStudy.InverseDynamics;
  //  run
  
  #endif
  
  
  #include "DrawSettings.any"
  
  
  
  
  
  


//DESCRIPTIONS OF THE STUDIES IN THE MODEL
//
//KinematicStudyForParamterIdentification: 
//    This study is the basis study for the Parameter identification study
//
//ParameterIdentification:
//    Running this study will optimize the parameters of the model: segments length and marker positions
//    It will also calculate the motion but usually this optimization is done with a lower amount of 
//    timesteps so the produced motion is not usefull for an inverse dynamic analysis. The reduced 
//    number of timesteps will speed the optimization it should however not be too low, this will
//    reduce the accuracy
//    
//MotionOptimization:
//    This study will run the kinematic analysis using the optimize parameters from the ParamterIdentification study 
//    This study will run with a high number of timesteps. It will automatically save the optimized motion in files 
//    named according to name of the used C3D which is specified in the ModelSetup.any file
//
//LoadParametersOpimizationResults 
//    This study is used ONLY for loading the optimized results from the ParameterIdentification study
//
//InverseDynamicStudy:
//    This study run the inverse dynamic analysis of the model with the optimized motion and optimized parameters
//
//
//The studies has to to be activated in a certain sequence, to make this easier there are the following
//operation sequences:
//
//MotionAndParameterOptimiztionSequence: 
//    This seqeunce is used for determining the model parameters such as segment lenghts, marker positions
//    
//
//InverseDynamicAnalysisSequence:
//    This study sequence is used for calibrating the model and running the inverse dynamic analysis 
  AnyFolder Studies ={
    
    #if  MotionAndParameterOptimizationModel
    
    
    AnyBodyStudy KinematicStudyForParamterIdentification = {
      AnyFolder &C3DData=..ModelSetup.C3DFileData ;
      
      AnyFolder &ref=HumanModel;
      ref={ 
        AnyFolder &Mannequin=.Mannequin;
        #include  "BodyPartsSetup2.any"
      };
      #include "HumanModel.any"
      
      //This mannequin calculates a guess on the initial pelvis position based on ASIS and PSI markers
      //if these markers do not exist in the markerset used this has to be changed
      #include "Mannequin.any"  // this file controls the initial position of the model and he posture
      
      //Environment around the human
      AnyFolder EnvironmentModel ={
        //Model of the floor and force plates this is where the force plates are defined        
        AnyFolder &HumanModelRef=.HumanModel.BodyModel;        
        #include "Environment.any"
      };
      
      //Connection between environment and the human    
      AnyFolder ModelEnvironmentConnection = {
        AnyFolder Drivers={
          
          // Aliases for convenient referencing
          AnyFolder &JntPos=..Mannequin.Posture;  
          AnyFolder &JntVel=..Mannequin.PostureVel;
        };
      };
      
      #include "JointAngleOutputs.any"
      #include "UndefineBodyPartSetup.any"
      
      Kinematics.PosAnalysisOnlyOnOff=On; //only run the position analysis 
      nStep=floor(Main.ModelSetup.nStep/6); //run this analysis with a reduced step number be carefull it can be too low!
      Gravity ={0.0, -9.81,0};
      tStart = Main.ModelSetup.tStart+2*Kinematics.ApproxVelAccPerturb; 
      tEnd = Main.ModelSetup.tEnd-2*Kinematics.ApproxVelAccPerturb;
      
      InitialConditions.SolverType = KinSolOverDeterminate;
      Kinematics.SolverType = KinSolOverDeterminate;
    };
    
    AnyOptKinStudy ParameterIdentification =     {
      AnyFolder &StudyRef = .KinematicStudyForParamterIdentification;
      ParameterOptimization.ConvergenceTol=1e-2;
      Analysis =   {
        AnyOperation &ref = .StudyRef.Kinematics;
      };
    };   
    
    AnyBodyStudy MotionOptimization = {
      AnyFolder &C3DData=..ModelSetup.C3DFileData ;
      
      AnyFolder &HumanModel=.KinematicStudyForParamterIdentification.HumanModel;
      AnyFolder &ModelOptimizationModel=.KinematicStudyForParamterIdentification;
      AnyFolder &JointAngleOutput=.KinematicStudyForParamterIdentification.JointAngleOutputs;
      
      Kinematics.PosAnalysisOnlyOnOff=On;
      nStep=Main.ModelSetup.nStep; 
      Gravity ={0.0, -9.81,0};
      tStart = Main.ModelSetup.tStart+2*Kinematics.ApproxVelAccPerturb; 
      tEnd = Main.ModelSetup.tEnd-2*Kinematics.ApproxVelAccPerturb;
      
      InitialConditions.SolverType = KinSolOverDeterminate;
      Kinematics.SolverType = KinSolOverDeterminate;
    };
    
    
    #endif
    
    
    
    #if InverseDynamicModel
    
    //This study is used for running the inverse dynamic analysis of the optimized motion
    //***********************************************************************************
    HumanModel={
      AnyFolder &Mannequin=.InverseDynamicStudy.Mannequin;
      #include  "BodyPartsSetup.any"
    };
    #include "HumanModel.any"
    
    AnyBodyStudy InverseDynamicStudy = {
      AnyFolder &C3DData=..ModelSetup.C3DFileData ;
      AnyFolder &HumanModel=.HumanModel.BodyModel;
      #include "Mannequin.any" 
      
      //Environment around the human
      AnyFolder EnvironmentModel ={
        
        //Model of the floor and force plates this is where the force plates are defined
        AnyFolder &HumanModelRef=..HumanModel.BodyModel;
        #include "Environment.any"
      };
      
      //Connection between environment and the human    
      AnyFolder ModelEnvironmentConnection = {
        //Drivers for the model
        #include "JointsAndDriversOptimized.any"      
      };
      
      
      InverseDynamics.Criterion.UpperBoundOnOff=Off;
      nStep=Main.ModelSetup.nStep;
      Gravity ={0.0, -9.81,0};
      tStart = Main.ModelSetup.tStart+2*Kinematics.ApproxVelAccPerturb; 
      tEnd = Main.ModelSetup.tEnd-2*Kinematics.ApproxVelAccPerturb;
      //#include "GCDOutput.any"
    };
    
    
    //This study is only used for loading the optimized parameters    
    AnyOptKinStudy LoadParametersOpimizationResults =     {
      AnyFolder &Study = .InverseDynamicStudy;
      AnyFolder &HumanModel = .HumanModel;
      ParameterOptimization.ConvergenceTol=1e-3;
      Analysis =   {
        AnyOperation &ref = .Study.Kinematics;
      };
    };
    
    #endif
  };
  
}; //Main


