/* This file contains the connections between the model and makers
//please notice that the model is driven using the local cooridnate systems on the 
//human instead 
Sacrum in (y) 
Right and left ASIS in (x) 
Right and left knee in (x) 
Right and left malleolus in (z) 
Right and left metatarsal in (x, z) 
Right and left heel in (x, y, z)

Right and left ASIS  and Sacrum in (y), combined as RAsisZ+LAsisZ=SacrumZ
*/

AnyKinEqSimpleDriver PelvisThoraxDriver ={
    AnyKinMeasureOrg &ref1= ..HumanModel.Interface.Trunk.PelvisThoraxExtension;
    AnyKinMeasureOrg &ref3=     ..HumanModel.Interface.Trunk.PelvisThoraxRotation;
    DriverPos={0,0}; 
    DriverVel={0,0};
  };
  
  //This is an etsimation of the upper body motion it will enforce that the head is kept above the pelvis medial/laterally
  AnyKinEqSimpleDriver LateralBendDriver ={
    AnyKinLinear lin ={
      AnySeg &ref1=  ...HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
      AnySeg &ref2=  ...HumanModel.Trunk.SegmentsThorax.SkullSeg;
    };
    DriverPos={0};
    DriverVel={0};
    MeasureOrganizer={1};
  };
  
  AnyKinEqSimpleDriver NeckDrv={
    AnyKinMeasureOrg &ref1= ..HumanModel.Interface.Trunk.NeckJoint; 
    DriverPos={0};
    DriverVel={0};
    Reaction.Type={Off};
  };


AnyReacForce RightAnkleEversion={
  AnyKinMeasureOrg &ref1=..HumanModel.Interface.Right.AnkleEversion;
};
//AnyReacForce RightAnklePlantarFlexion={
//  AnyKinMeasureOrg &ref2=Main.HumanModel.Interface.Right.AnklePlantarFlexion;
//};
//
//AnyReacForce RightKneeFlexion={
//  AnyKinMeasureOrg &ref5=Main.HumanModel.Interface.Right.KneeFlexion;
//};
//AnyReacForce RighthipFlexion={
//  
//  AnyKinMeasureOrg &ref7=Main.HumanModel.Interface.Right.HipFlexion;
//};
//AnyReacForce RightHipAbduction={
//  AnyKinMeasureOrg &ref9=Main.HumanModel.Interface.Right.HipAbduction;
//};
//AnyReacForce RightHipExternalRot={
//  
//  AnyKinMeasureOrg &ref11=Main.HumanModel.Interface.Right.HipExternalRotation;
//};
//

AnyReacForce LeftAnkleEversion={
  AnyKinMeasureOrg &ref1=..HumanModel.Interface.Left.AnkleEversion;
};
//AnyReacForce LeftAnklePlantarFlexion={
//  AnyKinMeasureOrg &ref2=Main.HumanModel.Interface.Left.AnklePlantarFlexion;
//};
//
//AnyReacForce LeftKneeFlexion={
//  AnyKinMeasureOrg &ref5=Main.HumanModel.Interface.Left.KneeFlexion;
//};
//AnyReacForce LefthipFlexion={
//  
//  AnyKinMeasureOrg &ref7=Main.HumanModel.Interface.Left.HipFlexion;
//};
//AnyReacForce LeftHipAbduction={
//  AnyKinMeasureOrg &ref9=Main.HumanModel.Interface.Left.HipAbduction;
//};
//AnyReacForce LeftHipExternalRot={
//  
//  AnyKinMeasureOrg &ref11=Main.HumanModel.Interface.Left.HipExternalRotation;
//};




AnyFolder JointsAndDrivers = {
  
  //Make a visualization of the drivers
  //#include "DriverVisualization.any"
  
  AnyFixedRefFrame GlobalRef ={
    Origin={0,0,0};
  };
  
  AnyReacForce PelvisGroundReaction={
    
    AnyKinLinear Lin={
      AnyFixedRefFrame &ref1 =..GlobalRef;
      AnySeg &ref2 = ....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
    };
    
    AnyKinRotational Rot={
      AnyFixedRefFrame &ref1 =..GlobalRef;
      AnySeg &ref2 = ....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
      Type=RotVector;
    };
  };
  
  AnyKinMeasureOrg JointMeasures = 
  {
    
    AnyKinLinear PelvisLin = 
    {
      //Ref = -1;
      AnyRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 =....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
    };
    

    AnyKinRotational PelvisRot = {
      Type = RotAxesAngles;
      AnyRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 = ....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
      
    };
    
    AnyKinRotational LeftHip = {
      Type = RotAxesAngles;
      AnyRefFrame &ref1 = ....HumanModel.Trunk.SegmentsLumbar.PelvisSeg.HipJointLeft;
      AnyRefFrame &ref2 = ....HumanModel.Left.Leg.Seg.Thigh.HipJoint;
    };
    
    
    AnyRevoluteJoint &LeftKnee = ...HumanModel.Left.Leg.Jnt.Knee;
       
     AnyKinMeasureOrg LeftAnkle = 
    {
      MeasureOrganizer = {0,1};
      AnyKinRotational LeftAnkle = {
        Type = RotAxesAngles;
        AnyRefFrame &ref1 = .....HumanModel.Left.Leg.Jnt.Ankle.ShankNode;
        AnyRefFrame &ref2 =.....HumanModel.Left.Leg.Jnt.Ankle.FootNode ;
      };    
    };
   
    
    AnyKinRotational RightHip = {
      Type = RotAxesAngles;
      AnyRefFrame &ref1 = ....HumanModel.Trunk.SegmentsLumbar.PelvisSeg.HipJointRight;
      AnyRefFrame &ref2 = ....HumanModel.Right.Leg.Seg.Thigh.HipJoint;
    };
    

    AnyRevoluteJoint &RightKnee = ...HumanModel.Right.Leg.Jnt.Knee;
    
    AnyKinMeasureOrg RightAnkle = 
    {
      MeasureOrganizer = {0,1};
      AnyKinRotational RightAnkle = {
        Type = RotAxesAngles;
        AnyRefFrame &ref1 = .....HumanModel.Right.Leg.Jnt.Ankle.ShankNode;
        AnyRefFrame &ref2 =.....HumanModel.Right.Leg.Jnt.Ankle.FootNode ;
      };    
    };
    
  };

    
  AnyKinEqInterPolDriver Jntdriver = 
  {
    FileErrorContinueOnOff = On;
    //MeasureOrganizer = ;
    Type = Bspline;
    BsplineOrder = 4;
    //T = ;
    //Data = ;
    FileName = "output-euler.txt";
    AnyKinMeasureOrg &meas = .JointMeasures;
    Reaction.Type={Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
  };

  
};




