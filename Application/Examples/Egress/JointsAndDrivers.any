/* ----------------------------------------------------------------------
This file contains the joints that connect the body with the
environment. 
---------------------------------------------------------------------- */
// Make convenient short names for the Environment and the human
AnyFolder &RefP=.EnvironmentModel;
AnyFolder &RefH=.HumanModel;

AnyKinRotational PelvisGroundMeasure ={
  AnyRefNode &PelvisNode = .RefH.Trunk.SegmentsLumbar.PelvisSeg.TuberIschiadicumCenter;
  AnyRefNode &GroundNode = .RefP.GlobalRef.PelvisGroundLock;
  Type=RotVector;
  AngVelOnOff=On;
};

AnyKinLinear PelvisGroundMeasureLin ={
  AnyRefNode &GroundNode = .RefP.GlobalRef.PelvisGroundLock;
  AnyRefNode &PelvisNode = .RefH.Trunk.SegmentsLumbar.PelvisSeg.TuberIschiadicumCenter;
  PelvisNode ={AnyDrawRefFrame test={};};
};

/// This joint and driver controls the pelvis position
/// but does not supported the pelvis
AnyKinEqSimpleDriver GroundDriver = {
  AnyKinRotational &GroundJoint = .PelvisGroundMeasure;
  DriverPos = {0.3,-0.3,-0.7};
  DriverVel = {0.0,-0.05,0.02};
  Reaction.Type = {Off,Off,Off};
};

AnyFolder GroundDriverLin = {
  AnyVar vx=0.005;
  AnyVar vy=0.006;
  AnyVar vz=-0.03;
};

AnyFixedRefFrame p1 ={
  Origin ={0.100000, -0.030000, 0.000000}; 
  AnySurfSphere sphere={Radius =.015; 
    AnyDrawParamSurf drw={
      RGB =Main.DrawSettings.Colors.AnyBodyBlue;
    };
  };
};

AnyFixedRefFrame p2 ={
  Origin ={0.111111, -0.016667, -0.056667-0.1}; 
  AnySurfSphere sphere={Radius =.015; 
    AnyDrawParamSurf drw={
      RGB =Main.DrawSettings.Colors.AnyBodyBlue;
    };
  };
};

AnyFixedRefFrame p3 ={
  Origin ={0.142222, -0.00, -0.123333-0.12}; 
  AnySurfSphere sphere={Radius =.015; 
    AnyDrawParamSurf drw={
      RGB =Main.DrawSettings.Colors.AnyBodyBlue;
    };
  };
};

AnyFixedRefFrame p4 ={
  Origin ={0.10000, 0.240000, -0.270000-0.16}; 
  AnySurfSphere sphere={Radius =.015; 
    AnyDrawParamSurf drw={
      RGB =Main.DrawSettings.Colors.AnyBodyBlue;
    };
  };
};

AnyKinPLine RightPLine ={
  AnyFixedRefFrame &ref1=.p1;
  AnyFixedRefFrame &ref2=.p2;
  AnyFixedRefFrame &ref3=.p3;
  AnyFixedRefFrame &ref4=.p4;
  
  AnyDrawPLine drw={
    Thickness=.005; 
    RGB =Main.DrawSettings.Colors.AnyBodyBlue;
  };
};

AnyKinEqInterPolDriver PelvisDriver={
  AnyKinLinear &GroundJoint = .PelvisGroundMeasureLin;
  
  Type=Bspline;  
  BsplineOrder = 4;  // This provides smooth accelerations
  
  T = Main.Study.tEnd*{0,0.33,0.66,1.01};
  Data={
    {.p1.Origin[0],.p2.Origin[0],.p3.Origin[0],.p4.Origin[0]},
    {.p1.Origin[1],.p2.Origin[1],.p3.Origin[1],.p4.Origin[1]},
    {.p1.Origin[2],.p2.Origin[2],.p3.Origin[2],.p4.Origin[2]}
  };
  Reaction.Type={Off,Off,Off};
};

//-------------------------------------------------------
//  Drivers - spine
//-------------------------------------------------------

// Aliases for convenient referencing
AnyFolder &JntPos=.Mannequin.Posture;  
AnyFolder &JntVel=.Mannequin.PostureVel;  
AnyFolder &RefHM = Main.Model.HumanModel;
AnyFolder &ref=Main.Model.HumanModel.Trunk;

//Neck driver 
AnyKinEqSimpleDriver NeckJntDriver = {
  AnyRevoluteJoint &T12L1Joint = ..HumanModel.Interface.Trunk.NeckJoint;
  DriverPos = pi/180*{.JntPos.NeckExtension};
  DriverVel = pi/180*{.JntVel.NeckExtension};
  Reaction.Type = {Off};
};

//Thorax pelvis rotation driver
AnyKinEqSimpleDriver PostureDriver ={
  AnyKinMeasureOrg &Ref2 = ..HumanModel.Interface.Trunk.PelvisThoraxLateralBending;        
  AnyKinMeasureOrg &Ref3 = ..HumanModel.Interface.Trunk.PelvisThoraxRotation;   
  AnyKinMeasureOrg &Ref1 = ..HumanModel.Interface.Trunk.PelvisThoraxExtension;
  
  DriverPos = pi/180*{
    .JntPos.PelvisThoraxLateralBending,
    .JntPos.PelvisThoraxRotation,
    .JntPos.PelvisThoraxExtension
  };
  DriverVel = pi/180*{
    .JntVel.PelvisThoraxLateralBending,
    .JntVel.PelvisThoraxRotation,
    .JntVel.PelvisThoraxExtension
  };
  Reaction.Type = {Off,Off,Off};  
};  

AnyFolder Right = {
  
  //Sterno clavicular joint driver
  AnyKinEqSimpleDriver SCDriverRight ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Right.SternoClavicularProtraction;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Right.SternoClavicularElevation;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Right.SternoClavicularAxialRotation;
    DriverPos = pi/180*{
      ..JntPos.Right.SternoClavicularProtraction,
      ..JntPos.Right.SternoClavicularElevation,
      ..JntPos.Right.SternoClavicularAxialRotation
    };
    DriverVel = {
      ..JntVel.Right.SternoClavicularProtraction,
      ..JntVel.Right.SternoClavicularElevation,
      ..JntVel.Right.SternoClavicularAxialRotation
    };
    Reaction.Type={Off,Off,Off};
  };
  
  //-------------------------------------------------------
  // Drivers for the shoulder and the arm
  //-------------------------------------------------------
  
  //Elbow pronation driver
  AnyKinEqSimpleDriver ElbowPronationDriverRight={
    AnyKinMeasureOrg &Elbow =...HumanModel.Interface.Right.ElbowPronation;
    DriverPos = pi/180*{..JntPos.Right.ElbowPronation };  
    
    DriverVel=pi/180*{..JntVel.Right.ElbowPronation };  
    Reaction.Type={Off};
  };
  
  //Wrist driver 
  AnyKinEqSimpleDriver WristDriverRight ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Right.WristFlexion;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Right.WristAbduction;
    DriverPos = pi/180*{
      ..JntPos.Right.WristFlexion,
      ..JntPos.Right.WristAbduction
    };
    
    DriverVel = pi/180*{
      ..JntVel.Right.WristFlexion,
      ..JntVel.Right.WristAbduction};
    Reaction.Type={Off,Off};
  };
  
  //-------------------------------------------------------
  //  Drivers for the leg, from hipjoint and downwards
  //-------------------------------------------------------
  //Ankle driver
  AnyKinEqSimpleDriver AnkleDriverRight={
    AnyKinMeasureOrg &ref2=...HumanModel.Interface.Right.AnkleEversion;
    DriverPos = pi/180*{..JntPos.Right.AnkleEversion};  
    DriverVel=pi/180*{..JntVel.Right.AnkleEversion};  
    Reaction.Type={Off};
  };
  
  //-------------------------------------------------------
  //This joint and driver controls the elbow pos in the frontal plane
  //-------------------------------------------------------
  AnyKinLinear XYZmeasureElbow = {
    AnyFixedRefFrame& Ground = ..RefP.Right.ElbowPos;
    AnyRefNode &Knee =..RefH.Right.ShoulderArm.Seg.Humerus.em;
  };
  
  AnyKinEqSimpleDriver ElbowMotionZ = {
    AnyKinLinear &Jnt = .XYZmeasureElbow;
    MeasureOrganizer = {2};
    
    DriverPos = {0};
    DriverVel = {0.6*..GroundDriverLin.vz};  //the elbow has to move slower than the pelvis..
    Reaction.Type = {Off};
  };
  
  //-------------------------------------------------------
  //This joint and driver controls the knee pos in the frontal plane
  //-------------------------------------------------------
  AnyKinLinear XYZmeasureKnee = {
    AnyFixedRefFrame& Ground = ..RefP.Right.KneePos;
    AnyRefNode &Knee = ..RefH.Right.Leg.Seg.Shank.KneeJoint;
  };
  
  AnyKinEqSimpleDriver KneeMotionZ = {
    AnyKinLinear &Jnt = .XYZmeasureKnee;
    MeasureOrganizer = {2};
    
    DriverPos = {0};
    DriverVel = {..GroundDriverLin.vz};
    // DriverAcc = {0.0};
    Reaction.Type = {Off};
  };
  
  AnyKinRotational HeelToGroundRot = {
    AnyFixedRefFrame &GroundNode = ..RefP.Right.HeelPos;
    AnyRefNode &HeelNode = ..RefH.Right.Leg.Seg.Foot.HeelJoint;
    Type=RotVector;
    AngVelOnOff=On;
  };
  
  AnyKinLinear HeelToGroundLin = {
    AnyFixedRefFrame &GroundNode = ..RefP.Right.HeelPos;
    AnyRefNode &HeelNode = ..RefH.Right.Leg.Seg.Foot.GroundJoint;
  };  
  
  AnyKinEqSimpleDriver HeelToGroundLinDriver = {
    AnyKinLinear  &HeelToGroundLin= .HeelToGroundLin;      
    DriverPos = {0,0.0,0};
    DriverVel = {0,0,0};
    Reaction.Type = {On,Off,On};
  };   
  
  AnyKinLinear ToeToGroundLin = {
    AnyFixedRefFrame &GroundNode = ..RefP.Right.HeelPos;
    AnyRefNode &ToeNode = ..RefH.Right.Leg.Seg.Foot.ToeJoint;
  };
  
  AnyKinEqSimpleDriver ToeToGroundLinDriver = {
    AnyKinLinear  &ToeToGroundLin= .ToeToGroundLin;      
    DriverPos = {0};
    DriverVel = {0};
    Reaction.Type = {Off};
    MeasureOrganizer={1};
  };
  
  AnyMuscleModel MusMdl={
    F0=4000;
  };
  
  AnyKinMeasureOrg ToeToGroundLinY={
    AnyKinLinear  &TpeToGroundLin= .ToeToGroundLin;      
    MeasureOrganizer={1};  
  };
  
  AnyGeneralMuscle ToeReaction={
    AnyKinMeasureOrg &ref=.ToeToGroundLinY;
    AnyMuscleModel &ref1=.MusMdl;
    ForceDirection=1;
  };
  
  AnyKinMeasureOrg HeelToGroundLinY={
    AnyKinLinear  &HeelToGroundLin= .HeelToGroundLin;      
    MeasureOrganizer={1};  
  };
  
  AnyGeneralMuscle HeelReaction={
    AnyKinMeasureOrg &ref=.HeelToGroundLinY;
    AnyMuscleModel &ref1=.MusMdl;
    ForceDirection=1;
  };
};//End Right 

AnyFolder Left = {
  
  //The left hand is positioned on the thigh
  AnyFolder &LeftThigh = .RefH.Left.Leg.Seg.Thigh;
  
  LeftThigh={
    AnyRefNode HandSupportNode ={
      sRel = {0.0,0.08,-0.05};
      AnyDrawRefFrame test={};
    };  
  };
  AnyKinLinear HandPosLin  = {
    AnyRefNode &Thigh= ..RefH.Left.Leg.Seg.Thigh.HandSupportNode;
    AnyRefNode &HandNode   = ..RefH.Left.ShoulderArm.Seg.Hand.PalmJoint;
  };
  
  AnyKinEqSimpleDriver HandPosDriver = {
    AnyKinLinear &Jnt = .HandPosLin;
    DriverPos = {0,0,0};
    DriverVel = {0.0,0,0};
    Reaction.Type = {Off,Off,Off};
  };
    
  AnyKinEqSimpleDriver ElbowMotionZ = {
    AnyKinLinear ThoraxElbowLin  = {
      AnySeg &ThoraxSeg =...RefH.Trunk.SegmentsThorax.ThoraxSeg;
      AnyRefNode &elbow = ...RefH.Left.ShoulderArm.Seg.Humerus.em;
    };  
    MeasureOrganizer={2};//sideways...
    DriverPos = {  -0.177028};
    DriverVel={0};
    Reaction.Type={Off};
  };
    
  //Sterno clavicular joint driver
  AnyKinEqSimpleDriver SCDriverLeft ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Left.SternoClavicularProtraction;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Left.SternoClavicularElevation;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Left.SternoClavicularAxialRotation;
    
    DriverPos = pi/180*{
      ..JntPos.Left.SternoClavicularProtraction,
      ..JntPos.Left.SternoClavicularElevation,
      ..JntPos.Left.SternoClavicularAxialRotation
    };
    
    DriverVel = pi/180*{
      ..JntVel.Left.SternoClavicularProtraction,
      ..JntVel.Left.SternoClavicularElevation,
      ..JntVel.Left.SternoClavicularAxialRotation
    };
    
    Reaction.Type={Off,Off,Off};
  };
  
  //Elbow pronation driver
  AnyKinEqSimpleDriver ElbowPronationDriverLeft={
    AnyKinMeasureOrg &Elbow =...HumanModel.Interface.Left.ElbowPronation;
    DriverPos = pi/180*{..JntPos.Left.ElbowPronation };  
    
    DriverVel=pi/180*{..JntVel.Left.ElbowPronation };  
    Reaction.Type={Off};
  };
  
  //Wrist driver
  AnyKinEqSimpleDriver WristDriverLeft ={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Left.WristFlexion;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Left.WristAbduction;
    DriverPos = pi/180*{
      ..JntPos.Left.WristFlexion,
      ..JntPos.Left.WristAbduction};
    
    DriverVel = pi/180*{
      ..JntVel.Left.WristFlexion,
      ..JntVel.Left.WristAbduction};
    Reaction.Type={Off,Off};
  };
  
  AnyKinLinear XYZmeasureKnee = {
    AnyFixedRefFrame& Ground = ..RefP.Left.KneePos;
    AnyRefNode &Knee = ..RefH.Left.Leg.Seg.Shank.KneeJoint;
  };
  
  AnyKinEqSimpleDriver KneeMotionZ = {
    AnyKinLinear &Jnt = .XYZmeasureKnee;
    MeasureOrganizer = {2};
    DriverPos = {0};
    DriverVel = {-0.015};
    Reaction.Type = {Off};
  };
  
  //-------------------------------------------------------
  //  Drivers for the leg, from hipjoint and downwards
  //-------------------------------------------------------
  AnyKinEqSimpleDriver AnkleDriver = {
    AnyUniversalJoint &AnkleJoint =..RefH.Left.Leg.Jnt.Ankle;
    DriverPos = {0};
    DriverVel = {0.0};
    MeasureOrganizer={1};
  };
  
  AnyKinRotational HeelToGroundRot = {
    AnyFixedRefFrame &GroundNode = ..RefP.Left.HeelPos;
    AnyRefNode &HeelNode = ..RefH.Left.Leg.Seg.Foot.GroundJoint;
    Type=RotVector;
    AngVelOnOff=On;
  };
  
  AnyKinLinear HeelToGroundLin = {
    AnyFixedRefFrame &GroundNode = ..RefP.Left.HeelPos;
    AnyRefNode &HeelNode = ..RefH.Left.Leg.Seg.Foot.GroundJoint;
  };
  
  AnyKinEqSimpleDriver HeelToGroundLinDriver = {
    AnyKinLinear  &HeelToGroundLin= .HeelToGroundLin;      
    DriverPos = {0,0.0,0};
    DriverVel = {0.0,0,0};
    Reaction.Type = {On,Off,On};
  };
  
  AnyKinMeasureOrg HeelToGroundRotOrg ={
    AnyKinRotational  &HeelToGroundRot= .HeelToGroundRot;
    MeasureOrganizer = {0,1,2};
  };
    
  AnyKinLinear ToeToGroundLin = {
    AnyFixedRefFrame &GroundNode = ..RefP.Left.HeelPos;
    AnyRefNode &ToeNode = ..RefH.Left.Leg.Seg.Foot.ToeJoint;
  };
  
  AnyKinEqSimpleDriver ToeToGroundLinDriver = {
    AnyKinLinear  &TpeToGroundLin= .ToeToGroundLin;      
    DriverPos = {0};
    DriverVel = {0};
    Reaction.Type = {Off};
    MeasureOrganizer={1};
  };
  
  AnyMuscleModel MusMdl={
    F0=4000;
  };
  
  AnyKinMeasureOrg ToeToGroundLinY={
    AnyKinLinear  &TpeToGroundLin= .ToeToGroundLin;      
    MeasureOrganizer={1};  
  };
  
  AnyGeneralMuscle ToeReaction={
    AnyKinMeasureOrg &ref=.ToeToGroundLinY;
    AnyMuscleModel &ref1=.MusMdl;
    ForceDirection=1;
  };
  
  AnyKinMeasureOrg HeelToGroundLinY={
    AnyKinLinear  &HeelToGroundLin= .HeelToGroundLin;      
    MeasureOrganizer={1};  
  };
  
  AnyGeneralMuscle HeelReaction={
    AnyKinMeasureOrg &ref=.HeelToGroundLinY;
    AnyMuscleModel &ref1=.MusMdl;
    ForceDirection=1;
  };
}; //End left   
