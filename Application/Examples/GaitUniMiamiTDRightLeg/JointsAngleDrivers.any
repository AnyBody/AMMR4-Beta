

AnyFolder Drivers = {
  
  // Aliases for convenient referencing
  AnyFolder &JntPos=..Mannequin.Posture;  
  AnyFolder &JntVel=..Mannequin.PostureVel;
  
 AnyKinEqSimpleDriver PelvisThoraxDriver ={
    AnyKinMeasureOrg &ref1= ...HumanModel.Interface.Trunk.PelvisThoraxExtension;
    AnyKinMeasureOrg &ref3=     ...HumanModel.Interface.Trunk.PelvisThoraxRotation;
    DriverPos={0,0}; 
    DriverVel={0,0};
  };
  
  //This is an etsimation of the upper body motion it will enforce that the head is kept above the pelvis medial/laterally
  AnyKinEqSimpleDriver LateralBendDriver ={
    AnyKinLinear lin ={
      AnySeg &ref1=  ....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
      AnySeg &ref2=  ....HumanModel.Trunk.SegmentsThorax.SkullSeg;
    };
    DriverPos={0};
    DriverVel={0};
    MeasureOrganizer={1};
  };
  
  AnyKinEqSimpleDriver NeckDrv={
    AnyKinMeasureOrg &ref1= ...HumanModel.Interface.Trunk.NeckJoint; 
    DriverPos={0};
    DriverVel={0};
    Reaction.Type={Off};
  };
  


 
  
  // ************************************
  // Drivers for attaching the pelvis to the global reference system
  // ************************************  

  AnyKinEqSimpleDriver PelvisGroundDriver ={
    AnyKinLinear lin ={
      AnyFixedRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 =....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
    };
    AnyKinRotational rot ={
      AnyFixedRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 =....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
      Type=RotAxesAngles;
    };
    DriverPos={
      .JntPos.PelvisPosX,
      .JntPos.PelvisPosY,
      .JntPos.PelvisPosZ,
      pi/180*.JntPos.PelvisRotZ,
      pi/180*.JntPos.PelvisRotY,
      pi/180*.JntPos.PelvisRotX
    };
    DriverVel={
      .JntVel.PelvisPosX,
      .JntVel.PelvisPosY,
      .JntVel.PelvisPosZ,
      pi/180*.JntVel.PelvisRotX,
      pi/180*.JntVel.PelvisRotY,
      pi/180*.JntVel.PelvisRotZ
};
    Reaction.Type={On,On,On,On,On,On};
  };

  
  
 
  // ************************************
  // Drivers for the right leg
  // ************************************
  
   //Hip driver 
  AnyKinEqSimpleDriver HipDriverRight={
    AnyKinMeasureOrg &ref1 =...HumanModel.Interface.Right.HipFlexion;
    AnyKinMeasureOrg &ref2 =...HumanModel.Interface.Right.HipExternalRotation;
    AnyKinMeasureOrg &ref3 =...HumanModel.Interface.Right.HipAbduction;
    DriverPos= pi/180*{
      .JntPos.Right.HipFlexion,
      .JntPos.Right.HipExternalRotation,
      .JntPos.Right.HipAbduction
    };    
    DriverVel = pi/180*{
      .JntVel.Right.HipFlexion,
      .JntVel.Right.HipExternalRotation,
      .JntVel.Right.HipAbduction
    };    
    Reaction.Type={Off,Off,Off};
  
  };
   
  //Knee driver
  AnyKinEqSimpleDriver KneeDriverRight={
    AnyKinMeasureOrg  &Knee = ...HumanModel.Interface.Right.KneeFlexion;
    DriverPos=pi/180*{.JntPos.Right.KneeFlexion};  
    DriverVel = pi/180*{.JntVel.Right.KneeFlexion};  
    Reaction.Type={Off};
  };
  
  //Ankle driver
  AnyKinEqSimpleDriver AnkleDriverRight={
    AnyKinMeasureOrg &ref1=...HumanModel.Interface.Right.AnklePlantarFlexion;
    AnyKinMeasureOrg &ref2=...HumanModel.Interface.Right.SubTalarEversion;
    DriverPos = pi/180*{.JntPos.Right.AnklePlantarFlexion,.JntPos.Right.SubTalarEversion};  
    DriverVel=pi/180*{.JntVel.Right.AnklePlantarFlexion,.JntVel.Right.SubTalarEversion};  
    
    Reaction.Type={Off,Off};
  };
  

   
};//Drivers
