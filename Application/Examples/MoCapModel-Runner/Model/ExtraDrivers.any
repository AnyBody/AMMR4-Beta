#if HeadMarkersOnOff == 0
 AnyKinEqSimpleDriver NeckDrv=
 {
   AnyKinMeasureOrg &ref0 = ...BodyModel.Interface.Trunk.NeckJoint; 
   DriverPos=pi/180*{.JntPos.NeckExtension};
   DriverVel=pi/180*{.JntVel.NeckExtension};
   Reaction.Type={Off};
 };
#endif



#if TrunkMarkersOnOff == 0
 AnyKinEqSimpleDriver PelvisThoraxDrv =
 {
     AnyKinMeasure& ref0 = ...BodyModel.Interface.Trunk.PelvisThoraxExtension;
     AnyKinMeasure& ref1 = ...BodyModel.Interface.Trunk.PelvisThoraxLateralBending;
     AnyKinMeasure& ref2 = ...BodyModel.Interface.Trunk.PelvisThoraxRotation;
     DriverPos = pi/180*
     {
         .JntPos.PelvisThoraxExtension,
         .JntPos.PelvisThoraxLateralBending,
         .JntPos.PelvisThoraxRotation
     };
     DriverVel =  pi/180*
     {
         .JntVel.PelvisThoraxExtension,
         .JntVel.PelvisThoraxLateralBending,
         .JntVel.PelvisThoraxRotation
     };
     Reaction.Type = {Off, Off, Off};
 };
#endif
          
#if ThreeFootMarkersOnOff == 0
 AnyKinEqSimpleDriver AnkleDriverRight={
   AnyKinMeasureOrg &ref2= Main.Studies.HumanModel.BodyModel.Interface.Right.SubTalarEversion;
   DriverPos = pi/180*{.JntPos.Right.SubTalarEversion};  
   DriverVel=pi/180*{.JntVel.Right.SubTalarEversion};  
   CType = {Soft};
   Reaction.Type={Off};
 };
 AnyKinEqSimpleDriver AnkleDriverLeft={
   AnyKinMeasureOrg &ref2= Main.Studies.HumanModel.BodyModel.Interface.Left.SubTalarEversion;
   DriverPos = pi/180*{.JntPos.Left.SubTalarEversion};  
   DriverVel=pi/180*{.JntVel.Left.SubTalarEversion};  
   CType = {Soft};
   Reaction.Type={Off};
 };
#endif

#if UseUpperExtremities == 1
 #if SCMarkersOnOff == 0
  AnyKinEqSimpleDriver SCDriverLeft =
  {
    AnyKinMeasureOrg &ref3 =...BodyModel.Interface.Left.SternoClavicularAxialRotation;
    DriverPos = pi/180*
    {
      .JntPos.Left.SternoClavicularAxialRotation
    };
    DriverVel = pi/180*
    {
      .JntVel.Left.SternoClavicularAxialRotation
    };
    Reaction.Type={Off};
  };
  AnyKinEqSimpleDriver SCDriverRight =
  {
    AnyKinMeasureOrg &ref3 =...BodyModel.Interface.Right.SternoClavicularAxialRotation;
    DriverPos = pi/180*
    {
      .JntPos.Right.SternoClavicularAxialRotation
    };
    DriverVel = 
    {
      .JntVel.Right.SternoClavicularAxialRotation
    };
    Reaction.Type={Off};
  };
 #endif
#endif