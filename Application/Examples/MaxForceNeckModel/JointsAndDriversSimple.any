/* Definition of Driver for the segments in the lumbar spine. From PelvisL5 to T12L1

Mark de Zee
*/

AnyFolder &RefHM = Main.HumanModel.BodyModel;

AnyFolder Joints={
  AnyRevoluteJoint GroundPelvisJnt = {
    Axis = z;
    AnyRefNode &GroundNode = Main.Model.EnvironmentModel.GlobalRef.GroundNode;
    AnyRefNode &PelvisNode = ..RefHM.Trunk.SegmentsLumbar.PelvisSeg.GroundPelvisJntNode;
  };
};


AnyFolder DriversLumbar = {
  
  AnyKinEqSimpleDriver GroundPelvisJntDriver = {
    AnyRevoluteJoint &GroundPelvisJoint = ..Joints.GroundPelvisJnt;
    DriverPos = {0*pi};
    DriverVel = {0.0};
    Reaction.Type = {On};
  };
  
  //Thorax pelvis rotation driver
  AnyKinEqSimpleDriver PostureDriver ={
    AnyKinMeasureOrg &Ref2 = ..RefHM.Interface.Trunk.PelvisThoraxLateralBending;        
    AnyKinMeasureOrg &Ref3 = ..RefHM.Interface.Trunk.PelvisThoraxRotation;   
    AnyKinMeasureOrg &Ref1 = ..RefHM.Interface.Trunk.PelvisThoraxExtension;
    
    DriverPos = pi/180*{0.0,0.0,0.0};
    DriverVel = pi/180*{0.0,0.0,0.0};
    Reaction.Type = {Off,Off,Off};  
  };  
  
  /*
  AnyKinEqSimpleDriver SacrumPelvisJntDriver = {
  AnySphericalJoint &SacrumPelvisJoint = ..RefHM.Trunk.JointsLumbar.SacrumPelvisJnt;
  DriverPos =  {0.000000, 0.000000, 0.0};
  DriverVel = {0,0,0};
  Reaction.Type = {1,1,1};
  };
  
  AnyKinEqSimpleDriver L5SacrumJntDriver = {
  AnySphericalJoint &L5SacrumJoint = ..RefHM.Trunk.JointsLumbar.L5SacrumJnt;
  DriverPos = {0.000000, 0.000000, 0.0};
  DriverVel = {0,0,0};
  Reaction.Type = {0,0,0};
  };
  
  AnyKinEqSimpleDriver L4L5JntDriver = {
  AnySphericalJoint &L4L5Joint = ..RefHM.Trunk.JointsLumbar.L4L5Jnt;
  DriverPos =  {0.000000, 0.000000, 0.0};
  DriverVel = {0,0,0};
  Reaction.Type = {0,0,0};
  };
  
  AnyKinEqSimpleDriver L3L4JntDriver = {
  AnySphericalJoint &L3L4Joint = ..RefHM.Trunk.JointsLumbar.L3L4Jnt;
  DriverPos ={0.000000, 0.000000, 0.0};
  DriverVel = {0,0,0};
  Reaction.Type = {0,0,0};
  };
  
  AnyKinEqSimpleDriver L2L3JntDriver = {
  AnySphericalJoint &L2L3Joint = ..RefHM.Trunk.JointsLumbar.L2L3Jnt;
  DriverPos =  {0.000000, 0.000000, 0.0};
  DriverVel = {0,0,0};
  Reaction.Type = {0,0,0};
  };
  
  AnyKinEqSimpleDriver L1L2JntDriver = {
  AnySphericalJoint &L1L2Joint = ..RefHM.Trunk.JointsLumbar.L1L2Jnt;
  DriverPos =  {0.000000, 0.000000, 0.0};
  DriverVel = {0,0,0};
  Reaction.Type = {0,0,0};
  };
  
  AnyKinEqSimpleDriver T12L1JntDriver = {
  AnySphericalJoint &T12L1Joint = ..RefHM.Trunk.JointsLumbar.T12L1Jnt;
  DriverPos =  {0.000000, 0.000000, 0.0};
  DriverVel = {0,0,0};
  Reaction.Type = {0,0,0};
  };
  */
  
  AnyKinEqSimpleDriver T1C7JntDriver = {
    AnyJoint &C7T1Joint = ..RefHM.Trunk.JointsCervicalSpine.T1C7Jnt;
    DriverPos = {0,0,0};
    DriverVel = {0,0,-0.1*pi/180};
    Reaction.Type = {Off,Off,Off};
  };
  
  AnyKinEqSimpleDriver C7C6JntDriver = {
    AnyJoint &C7C6Joint = ..RefHM.Trunk.JointsCervicalSpine.C7C6Jnt;
    DriverPos = {0,0,0};
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off};
  };
  
  AnyKinEqSimpleDriver C6C5JntDriver = {
    AnyJoint &C6C5Joint = ..RefHM.Trunk.JointsCervicalSpine.C6C5Jnt;
    DriverPos = {0,0,0};
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off};
  };
  
  AnyKinEqSimpleDriver C5C4JntDriver = {
    AnyJoint &C5C4Joint = ..RefHM.Trunk.JointsCervicalSpine.C5C4Jnt;
    DriverPos = {0,0,0};
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off};
  };
  
  AnyKinEqSimpleDriver C4C3JntDriver = {
    AnyJoint &C4C3Joint = ..RefHM.Trunk.JointsCervicalSpine.C4C3Jnt;
    DriverPos = {0,0,0};
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off};
  };
  
  AnyKinEqSimpleDriver C3C2JntDriver = {
    AnyJoint &C3C2Joint = ..RefHM.Trunk.JointsCervicalSpine.C3C2Jnt;
    DriverPos = {0,0,0};
    DriverVel = {0,0,-0.1*pi/180};
    Reaction.Type = {Off,Off,Off};
  };
  
  AnyKinEqSimpleDriver C2C1JntDriver = {
    AnyJoint &C2C1Joint = ..RefHM.Trunk.JointsCervicalSpine.C2C1Jnt;
    DriverPos = {0};
    DriverVel = {0.0*pi/180};
    Reaction.Type = {Off};
  };
  
  AnyKinEqSimpleDriver C1C0JntDriver = {
    AnyJoint &C1C0Joint = ..RefHM.Trunk.JointsCervicalSpine.C1C0Jnt;
    DriverPos = {0};
    DriverVel = {-0.1*pi/180};
    Reaction.Type = {Off};
  };
  
};


AnyFolder DriversArms={
  
  // Aliases for convenient referencing
  AnyFolder &JntPos=..Mannequin.Posture;  
  AnyFolder &JntVel=..Mannequin.PostureVel;  
  
  
  //Sterno clavicular joint driver
  AnyKinEqSimpleDriver SCDriverRight ={
    AnyKinMeasureOrg &ref1 =..RefHM.Interface.Right.SternoClavicularProtraction;
    AnyKinMeasureOrg &ref2 =..RefHM.Interface.Right.SternoClavicularElevation;
    AnyKinMeasureOrg &ref3 =..RefHM.Interface.Right.SternoClavicularAxialRotation;
    DriverPos = pi/180*{
      .JntPos.Right.SternoClavicularProtraction,
      .JntPos.Right.SternoClavicularElevation,
      .JntPos.Right.SternoClavicularAxialRotation
    };
    DriverVel = {
      .JntVel.Right.SternoClavicularProtraction,
      .JntVel.Right.SternoClavicularElevation,
      .JntVel.Right.SternoClavicularAxialRotation
    };
    Reaction.Type={Off,Off,Off};
  };
  
  
  //Glenohumeral joint 
  AnyKinEqSimpleDriver GHDriverRight={
    AnyKinMeasureOrg &ref1 =..RefHM.Interface.Right.GlenohumeralAbduction;
    AnyKinMeasureOrg &ref2 =..RefHM.Interface.Right.GlenohumeralFlexion;
    AnyKinMeasureOrg &ref3 =..RefHM.Interface.Right.GlenohumeralExternalRotation;
    
    DriverPos=pi/180*{
      .JntPos.Right.GlenohumeralAbduction,  //GH joint
      .JntPos.Right.GlenohumeralFlexion,  //GH joint
      .JntPos.Right.GlenohumeralExternalRotation  //GH joint
    };
    DriverVel = pi/180*{
      .JntVel.Right.GlenohumeralAbduction,  //GH joint
      .JntVel.Right.GlenohumeralFlexion,  //GH joint
      .JntVel.Right.GlenohumeralExternalRotation  //GH joint
    };    
    Reaction.Type={Off,Off,Off};
  };
  
  
  //Elbow flexion driver  
  AnyKinEqSimpleDriver ElbowFlexionDriverRight={
    AnyKinMeasureOrg  &Elbow =..RefHM.Interface.Right.ElbowFlexion;
    DriverPos=pi/180*{.JntPos.Right.ElbowFlexion};  
    DriverVel = pi/180*{.JntVel.Right.ElbowFlexion};  
    Reaction.Type={Off};
  };
  
  //Elbow pronation driver
  AnyKinEqSimpleDriver ElbowPronationDriverRight={
    AnyKinMeasureOrg &Elbow =..RefHM.Interface.Right.ElbowPronation;
    DriverPos = pi/180*{.JntPos.Right.ElbowPronation };  
    
    DriverVel=pi/180*{.JntVel.Right.ElbowPronation };  
    Reaction.Type={Off};
  };
  
  //Wrist driver 
  AnyKinEqSimpleDriver WristDriverRight ={
    AnyKinMeasureOrg &ref1 =..RefHM.Interface.Right.WristFlexion;
    AnyKinMeasureOrg &ref2 =..RefHM.Interface.Right.WristAbduction;
    DriverPos = pi/180*{
      .JntPos.Right.WristFlexion,
      .JntPos.Right.WristAbduction
    };
    
    DriverVel = pi/180*{
      .JntVel.Right.WristFlexion,
      .JntVel.Right.WristAbduction};
    Reaction.Type={Off,Off};
  };
  

//Sterno clavicular joint driver
  AnyKinEqSimpleDriver SCDriverLeft ={
    AnyKinMeasureOrg &ref1 =..RefHM.Interface.Left.SternoClavicularProtraction;
    AnyKinMeasureOrg &ref2 =..RefHM.Interface.Left.SternoClavicularElevation;
    AnyKinMeasureOrg &ref3 =..RefHM.Interface.Left.SternoClavicularAxialRotation;
    DriverPos = pi/180*{
      .JntPos.Left.SternoClavicularProtraction,
      .JntPos.Left.SternoClavicularElevation,
      .JntPos.Left.SternoClavicularAxialRotation
    };
    DriverVel = {
      .JntVel.Left.SternoClavicularProtraction,
      .JntVel.Left.SternoClavicularElevation,
      .JntVel.Left.SternoClavicularAxialRotation
    };
    Reaction.Type={Off,Off,Off};
  };
  
  
  //Glenohumeral joint 
  AnyKinEqSimpleDriver GHDriverLeft={
    AnyKinMeasureOrg &ref1 =..RefHM.Interface.Left.GlenohumeralAbduction;
    AnyKinMeasureOrg &ref2 =..RefHM.Interface.Left.GlenohumeralFlexion;
    AnyKinMeasureOrg &ref3 =..RefHM.Interface.Left.GlenohumeralExternalRotation;
    
    DriverPos=pi/180*{
      .JntPos.Left.GlenohumeralAbduction,  //GH joint
      .JntPos.Left.GlenohumeralFlexion,  //GH joint
      .JntPos.Left.GlenohumeralExternalRotation  //GH joint
    };
    DriverVel = pi/180*{
      .JntVel.Left.GlenohumeralAbduction,  //GH joint
      .JntVel.Left.GlenohumeralFlexion,  //GH joint
      .JntVel.Left.GlenohumeralExternalRotation  //GH joint
    };    
    Reaction.Type={Off,Off,Off};
  };
  
  
  //Elbow flexion driver  
  AnyKinEqSimpleDriver ElbowFlexionDriverLeft={
    AnyKinMeasureOrg  &Elbow =..RefHM.Interface.Left.ElbowFlexion;
    DriverPos=pi/180*{.JntPos.Left.ElbowFlexion};  
    DriverVel = pi/180*{.JntVel.Left.ElbowFlexion};  
    Reaction.Type={Off};
  };
  
  //Elbow pronation driver
  AnyKinEqSimpleDriver ElbowPronationDriverLeft={
    AnyKinMeasureOrg &Elbow =..RefHM.Interface.Left.ElbowPronation;
    DriverPos = pi/180*{.JntPos.Left.ElbowPronation };  
    
    DriverVel=pi/180*{.JntVel.Left.ElbowPronation };  
    Reaction.Type={Off};
  };
  
  //Wrist driver 
  AnyKinEqSimpleDriver WristDriverLeft ={
    AnyKinMeasureOrg &ref1 =..RefHM.Interface.Left.WristFlexion;
    AnyKinMeasureOrg &ref2 =..RefHM.Interface.Left.WristAbduction;
    DriverPos = pi/180*{
      .JntPos.Left.WristFlexion,
      .JntPos.Left.WristAbduction
    };
    
    DriverVel = pi/180*{
      .JntVel.Left.WristFlexion,
      .JntVel.Left.WristAbduction};
    Reaction.Type={Off,Off};
  };

  
};
