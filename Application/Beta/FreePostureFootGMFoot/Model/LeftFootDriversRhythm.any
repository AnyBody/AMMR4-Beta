



//***************************
//Basic Rhythms (toe flexion) 
//***************************


//Toe flexion
  
  AnyVar LesserToeMedioDistalFlexCoeffLeft = 2.2;
  
  AnyKinEqSimpleDriver Toe2FlexRhytmLeft={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Left.ProximoMedialPhalange2DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Left.MedioDistalPhalange2DorsiFlexion;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffLeft} 
      };  
      OutDim = 1;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver Toe3FlexRhytmLeft={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Left.ProximoMedialPhalange3DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Left.MedioDistalPhalange3DorsiFlexion;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffLeft} 
      };   
      OutDim = 1;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver Toe4FlexRhytmLeft={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Left.ProximoMedialPhalange4DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Left.MedioDistalPhalange4DorsiFlexion;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffLeft} 
      };   
      OutDim = 1;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver Toe5FlexRhytmLeft={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Left.ProximoMedialPhalange5DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Left.MedioDistalPhalange5DorsiFlexion;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffLeft} 
      };    
      OutDim = 1;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  //MP joints flexion
  AnyKinMeasureLinComb MtPh1MtPh5LinCombLeft = {
    AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal1DorsiFlexion;
    AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal5DorsiFlexion;
    Coef={
      {1,-1}
    };      
  }; 
  
  
  AnyKinEqSimpleDriver MtPh2FlexRhytmLeft={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal2DorsiFlexion;
      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal1DorsiFlexion;
      AnyKinMeasure &ref3 = ..MtPh1MtPh5LinCombLeft;
      Coef={
        {1,-1,1/4}
      };
      //Const = {-11.25}*pi/180;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  AnyKinEqSimpleDriver MtPh3FlexRhytmLeft={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal3DorsiFlexion;
      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal1DorsiFlexion;
      AnyKinMeasure &ref3 = ..MtPh1MtPh5LinCombLeft;
      Coef={
        {1,-1,2/4}
      };   
      //Const = {-7.5}*pi/180;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  AnyKinEqSimpleDriver MtPh4FlexRhytmLeft={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal4DorsiFlexion;
      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal1DorsiFlexion;
      AnyKinMeasure &ref3 = ..MtPh1MtPh5LinCombLeft;
      Coef={
        {1,-1,3/4}
      };    
      //Const = {-3.75}*pi/180;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  
  
  
  
  
  //***************************************************************
  //Tarsal rhythm (from Nester, for stance phase of normal walking).
  //***************************************************************
  // stays in drivers, only for walking.

  
  AnyKinEqInterPolDriver TaloNavicularRhythmLeft = 
  {
//    AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.TaloNavicularDorsiFlexion;
    AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.TaloNavicularEversion;
    AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.TaloNavicularAbduction;
    Type = Bspline;
    BsplineOrder = 4;
    T = {Main.Study.tStart, 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*1/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*2/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*3/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*4/5), 
         Main.Study.tEnd};
//    Data = pi/180*{{1,1,1,1.5,0,-3},{-5,10,10,8,-2,-5},{-5,1,5,5,1,-2}};
//    Data = pi/180*{{-2,1,2,2,1,-2},{-5,10,10,8,-2,-5},{-5,1,5,5,1,-2}}; // estimeted
    Data = pi/180*{{0,0,0,0,0,0},{0,0,0,0,0,0}}; 
    Reaction.Type = {Off, Off};
  };

//  AnyKinEqInterPolDriver CalcaneoCuboidRhythmLeft = 
//  {
//    AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.CalcaneoCuboidDorsiFlexion;
////    AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.CalcaneoCuboidEversion;
////    AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.CalcaneoCuboidAbduction;
//    Type = Bspline;
//    BsplineOrder = 4;
//    T = {Main.Study.tStart, 
//         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*1/5), 
//         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*2/5), 
//         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*3/5), 
//         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*4/5), 
//         Main.Study.tEnd};
////    Data = pi/180*{{-6,-4.5,-3.5,-2,-2,-3},{-8,-6.5,-5.5,-4,-4,-5},{-5,-2,0,0,-2,-5}};
//    Data = pi/180*{{-2,1,2,2,1,-2}}; //estimated
//  };
  
  
  
  AnyKinEqInterPolDriver MedialCuneoNavicularRhythmLeft = 
  {
//    AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.NaviculoMedialCuneiformDorsiFlexion;
    AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.NaviculoMedialCuneiformEversion;
    AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.NaviculoMedialCuneiformAbduction;
    Type = Bspline;
    BsplineOrder = 4;
    T = {Main.Study.tStart, 
      Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*1/5), 
      Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*2/5), 
      Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*3/5), 
      Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*4/5), 
      Main.Study.tEnd};
//      Data = pi/180*{{-5,-2,0,-0.5,-3,-5},{0,-3,-3,-3,-2.5,2},{0,0,0,0,0,0}};
//      Data = pi/180*{{0,-3,-3,-3,-2.5,2},{0,0,0,0,0,0}};
      Data = pi/180*{{0,0,0,0,0,0},{0,0,0,0,0,0}};
      Reaction.Type = {Off, Off};
  };
  
  
    
  
  
  
  //*****************************************************************************
  //Transverse Arch at MP joints (corresponds to tarsometa flexion and abduction)
  //*****************************************************************************

  
  AnySeg MPJointsArchDummySegLeft = 
  {
    r0 = ...HumanModel.Left.Leg.Seg.Metatarsal1.r0 + ...HumanModel.Left.Leg.Seg.Metatarsal1.MTHeadPlantarNode.sRel *...HumanModel.Left.Leg.Seg.Metatarsal1.Axes0';
    Axes0 = RotMat(r0, ...HumanModel.Left.Leg.Seg.Metatarsal5.r0 + ...HumanModel.Left.Leg.Seg.Metatarsal5.MTHeadPlantarNode.sRel *...HumanModel.Left.Leg.Seg.Metatarsal5.Axes0', r0+{1,0,0}*...HumanModel.Left.Leg.Seg.Metatarsal1.Axes0')*RotMat(-pi/2,y)*RotMat(pi/2,z);
    Mass = 0;
    Jii = {0, 0, 0};
    AnyDrawRefFrame drw = {ScaleXYZ = 0.03*{1,1,1};};
  };
  
  
  AnyUniversalJoint MPJointsArchDummySegJointLeft = 
  {
    Axis1 = x;
    Axis2 = y;
    AnyRefFrame &Metatarsal1 = ...HumanModel.Left.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
    AnyRefFrame &DummySeg = .MPJointsArchDummySegLeft;
  };
  
  AnyKinEq MPJointsArchDummySegDriverLeft = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,1};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...MPJointsArchDummySegLeft;
        AnyRefFrame &MT5 = .....HumanModel.Left.Leg.Seg.Metatarsal5.MTHeadPlantarNode;
      };
    };
    Reaction.Type = {On, On};
  };
  
  
  AnyKinEq MPJointsArchRhythmLeft = {
    AnyKinMeasureLinComb MPJointsArchLinComb = 
    {
      AnyKinMeasureOrg MeasureOrgMT2 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....MPJointsArchDummySegLeft;
          AnyRefFrame &MT2 = ......HumanModel.Left.Leg.Seg.Metatarsal2.MTHeadPlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT3 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....MPJointsArchDummySegLeft;
          AnyRefFrame &MT2 = ......HumanModel.Left.Leg.Seg.Metatarsal3.MTHeadPlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT4 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....MPJointsArchDummySegLeft;
          AnyRefFrame &MT2 = ......HumanModel.Left.Leg.Seg.Metatarsal4.MTHeadPlantarNode;
        };
      };
      
      Coef = {{2/3, -1, 0},{1.5/3, 0, -1}}; //estimated
//      Coef = {{-1, 0.5, 0},{0, 0.5, -1}}; //estimated
    };
    Reaction.Type = {Off, Off};
  };
  
  
  AnyKinEqInterPolDriver MPJointsArchDriverLeft = 
  {
    Type = Bspline;
    BsplineOrder = 4;
    T = {Main.Study.tStart-0.02, 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*1/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*2/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*3/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*4/5), 
         Main.Study.tEnd+0.02};
    Data = {.MPJointsArchMaxHeightLeft * .MPJointsArchFlateningCoefLeft};
    AnyKinMeasure &Ref1 = .MPJointsArchRhythmLeft.MPJointsArchLinComb.MeasureOrgMT2;
    Reaction.Type = {Off};
  };

  
  AnyVar MPJointsArchMaxHeightLeft = 0.0037; //To be deterimed automatically somehow
  AnyVector MPJointsArchFlateningCoefLeft = {1, 1, 1, 1, 1, 1}; //To be optimized
  
  
  
  

  
  
  
  //***************************************************************************************
  //Transverse Arch at tarso metatarsal joints (replaces cunei flexion and cuboid eversion)
  //***************************************************************************************
  
  
  AnySeg TMTJointsArchDummySegLeft = 
  {
    r0 = ...HumanModel.Left.Leg.Seg.Metatarsal1.r0 + ...HumanModel.Left.Leg.Seg.Metatarsal1.MTBasePlantarNode.sRel *...HumanModel.Left.Leg.Seg.Metatarsal1.Axes0';
//    Axes0 = ...HumanModel.Left.Leg.Seg.Metatarsal1.Axes0;
    Axes0 = RotMat(r0, ...HumanModel.Left.Leg.Seg.Metatarsal5.r0 + ...HumanModel.Left.Leg.Seg.Metatarsal5.MTBasePlantarNode.sRel *...HumanModel.Left.Leg.Seg.Metatarsal5.Axes0', r0+{1,0,0}*...HumanModel.Left.Leg.Seg.Metatarsal1.Axes0')*RotMat(-pi/2,y)*RotMat(pi/2,z);
    Mass = 0;
    Jii = {0, 0, 0};
    AnyDrawRefFrame drw = {ScaleXYZ = 0.03*{1,1,1};};
  };
  
  AnyUniversalJoint TMTJointsArchDummySegJointLeft = 
  {
    Axis1 = x;
    Axis2 = y;
    AnyRefFrame &Metatarsal1 = ...HumanModel.Left.Leg.Seg.Metatarsal1.MTBasePlantarNode;
    AnyRefFrame &DummySeg = .TMTJointsArchDummySegLeft;
  };
  
  AnyKinEq TMTJointsArchDummySegDriverLeft = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,1};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...TMTJointsArchDummySegLeft;
        AnyRefFrame &MT5 = .....HumanModel.Left.Leg.Seg.Metatarsal5.MTBasePlantarNode;
      };
    };
    Reaction.Type = {On, On};
  };
  
  
  AnyKinEq TMTJointsArchRhythmLeft = {
    AnyKinMeasureLinComb TMTJointsArchLinComb = 
    {
      AnyKinMeasureOrg MeasureOrgMT2 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....TMTJointsArchDummySegLeft;
          AnyRefFrame &MT2 = ......HumanModel.Left.Leg.Seg.Metatarsal2.MTBasePlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT3 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....TMTJointsArchDummySegLeft;
          AnyRefFrame &MT2 = ......HumanModel.Left.Leg.Seg.Metatarsal3.MTBasePlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT4 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....TMTJointsArchDummySegLeft;
          AnyRefFrame &MT2 = ......HumanModel.Left.Leg.Seg.Metatarsal4.MTBasePlantarNode;
        };
      };
      
      Coef = {{0, 0.6, -1}};
    };
    Reaction.Type = {Off};
  };
  
  
  AnyKinEq TMTJointsArchRhythmLeft2 = {
    AnyKinMeasureLinComb TMTJointsArchLinComb = 
    {      
      AnyKinMeasureOrg &MeasureOrgIntCunei = ....HumanModel.Interface.Left.NaviculoIntermediateCuneiformDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgLatCunei = ....HumanModel.Interface.Left.NaviculoLateralCuneiformDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta2 = ....HumanModel.Interface.Left.TarsoMetatarsal2DorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta3 = ....HumanModel.Interface.Left.TarsoMetatarsal3DorsiFlexion;
      
      Coef = {{1, 0, -1, 0},{0, 1, 0, -1}};
    };
    Reaction.Type = {Off, Off};
  };

  
  
  
  
  
  
  //***************************************************************************************
  //Longitudinal Medial Arch ()
  //***************************************************************************************
  
  
  AnySeg LongitudinalMedialArchDummySegLeft = 
  {
    r0 = ...HumanModel.Left.Leg.Seg.Calcaneus.r0 + ...HumanModel.Left.Leg.Seg.Calcaneus.LongitudinalMedialArchNode.sRel *...HumanModel.Left.Leg.Seg.Calcaneus.Axes0';
//    Axes0 = ...HumanModel.Left.Leg.Seg.Calcaneus.Axes0;
    Axes0 = RotMat(r0, ...HumanModel.Left.Leg.Seg.Metatarsal1.r0 + ...HumanModel.Left.Leg.Seg.Metatarsal1.MTHeadPlantarNode.sRel *...HumanModel.Left.Leg.Seg.Metatarsal1.Axes0', r0+{1,0,0}*...HumanModel.Left.Leg.Seg.Calcaneus.Axes0')*RotMat(pi/2,z);
    Mass = 0;
    Jii = {0, 0, 0};
    AnyDrawRefFrame drw = {ScaleXYZ = 0.03*{1,1,1};};
  };
  
  AnyUniversalJoint LongitudinalMedialArchDummySegJointLeft = 
  {
    Axis1 = x;
    Axis2 = z;
    AnyRefFrame &Calcaneus = ...HumanModel.Left.Leg.Seg.Calcaneus.LongitudinalMedialArchNode;
    AnyRefFrame &DummySeg = .LongitudinalMedialArchDummySegLeft;
  };
  
  AnyKinEq LongitudinalMedialArchDummySegDriverLeft = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,2};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...LongitudinalMedialArchDummySegLeft;
        AnyRefFrame &MT1 = .....HumanModel.Left.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
      };
    };
    Reaction.Type = {On, On};
  };
  
  
  
  AnyKinEq LongitudinalMedialArchRhythmLeft = {
    AnyKinMeasureLinComb LongitudinalMedialArchLinComb = 
    {      
      AnyKinMeasureOrg &MeasureOrgNavi = ....HumanModel.Interface.Left.TaloNavicularDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMedCunei = ....HumanModel.Interface.Left.NaviculoMedialCuneiformDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta1 = ....HumanModel.Interface.Left.TarsoMetatarsal1DorsiFlexion;
      
      Coef = {{0.5, -1, 0},{0.5, 0, -1}};
    };
    Reaction.Type = {Off, Off};
  };
  
  
  AnyKinEqInterPolDriver LongitudinalMedialArchDriverLeft = 
  {
    Type = Bspline;
    BsplineOrder = 4;
    T = {Main.Study.tStart-0.0, 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*1/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*2/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*3/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*4/5), 
         Main.Study.tEnd+0.0};
    Data = {.LongitudinalMedialArchMaxHeightLeft * .LongitudinalMedialArchFlateningCoefLeft};
    AnyKinMeasureOrg MeasureOrgNavi = {
      MeasureOrganizer = {0};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...LongitudinalMedialArchDummySegLeft;
        AnyRefFrame &Navi = .....HumanModel.Left.Leg.Seg.Navicular.LongitudinalMedialArchNode;
      };
    };
    Reaction.Type = {Off};
  };

  
  AnyVar LongitudinalMedialArchMaxHeightLeft = 0.0350; //To be deterimed automatically somehow
  AnyVector LongitudinalMedialArchFlateningCoefLeft = {1, 1, 1, 1, 1, 1}; //To be optimized
  
  
  
  
  
  
  //***************************************************************************************
  //Longitudinal Lateral Arch ()
  //***************************************************************************************
  
  
  AnySeg LongitudinalLateralArchDummySegLeft = 
  {
    r0 = ...HumanModel.Left.Leg.Seg.Calcaneus.r0 + ...HumanModel.Left.Leg.Seg.Calcaneus.LongitudinalLateralArchNode.sRel *...HumanModel.Left.Leg.Seg.Calcaneus.Axes0';
//    Axes0 = ...HumanModel.Left.Leg.Seg.Calcaneus.Axes0;
    Axes0 = RotMat(r0, ...HumanModel.Left.Leg.Seg.Metatarsal5.r0 + ...HumanModel.Left.Leg.Seg.Metatarsal5.MTHeadPlantarNode.sRel *...HumanModel.Left.Leg.Seg.Metatarsal5.Axes0', r0+{1,0,0}*...HumanModel.Left.Leg.Seg.Calcaneus.Axes0')*RotMat(pi/2,z);
    Mass = 0;
    Jii = {0, 0, 0};
    AnyDrawRefFrame drw = {ScaleXYZ = 0.03*{1,1,1};};
  };
  
  AnyUniversalJoint LongitudinalLateralArchDummySegJointLeft = 
  {
    Axis1 = x;
    Axis2 = z;
    AnyRefFrame &Calcaneus = ...HumanModel.Left.Leg.Seg.Calcaneus.LongitudinalLateralArchNode;
    AnyRefFrame &DummySeg = .LongitudinalLateralArchDummySegLeft;
  };
  
  
  
  AnyKinEq LongitudinalLateralArchDummySegDriverLeft = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,2};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...LongitudinalLateralArchDummySegLeft;
        AnyRefFrame &MT5 = .....HumanModel.Left.Leg.Seg.Metatarsal5.MTHeadPlantarNode;
      };
    };
    Reaction.Type = {On, On};
  };
  
  
  AnyKinEq LongitudinalLateralArchRhythmLeft = {
    AnyKinMeasureLinComb LongitudinalLateralArchLinComb = 
    {
      AnyKinMeasureOrg &MeasureOrgCuboid = ....HumanModel.Interface.Left.CalcaneoCuboidDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta5 = ....HumanModel.Interface.Left.TarsoMetatarsal5SkewDorsiFlexion;
      
      Coef = {{0.5, -1}};
    };
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqInterPolDriver LongitudinalLateralArchDriverLeft = 
  {
    Type = Bspline;
    BsplineOrder = 4;
    T = {Main.Study.tStart-0.0, 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*1/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*2/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*3/5), 
         Main.Study.tStart+((Main.Study.tEnd-Main.Study.tStart)*4/5), 
         Main.Study.tEnd+0.0};
    Data = {.LongitudinalLateralArchMaxHeightLeft * .LongitudinalLateralArchFlateningCoefLeft};
    AnyKinMeasureOrg MeasureOrgCuboid = {
      MeasureOrganizer = {0};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...LongitudinalLateralArchDummySegLeft;
        AnyRefFrame &Navi = .....HumanModel.Left.Leg.Seg.Cuboid.LongitudinalLateralArchNode;
      };
    };
    Reaction.Type = {Off};
  };

  
  AnyVar LongitudinalLateralArchMaxHeightLeft = 0.0140; //To be deterimed automatically somehow
  AnyVector LongitudinalLateralArchFlateningCoefLeft = {1, 1, 1, 1, 1, 1}; //To be optimized
  
  
  
  
  
  AnyFolder DrawArchesL = {
    AnyKinPLine MetatarsalTranverse = {
      AnyRefNode &node1 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
      AnyRefNode &node2 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal2.MTHeadPlantarNode;
      AnyRefNode &node3 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal3.MTHeadPlantarNode;
      AnyRefNode &node4 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal4.MTHeadPlantarNode;
      AnyRefNode &node5 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal5.MTHeadPlantarNode;
      AnyRefNode &node6 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
    
    AnyKinPLine TarsalTranverse = {
      AnyRefNode &node1 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal1.MTBasePlantarNode;
      AnyRefNode &node2 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal2.MTBasePlantarNode;
      AnyRefNode &node3 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal3.MTBasePlantarNode;
      AnyRefNode &node4 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal4.MTBasePlantarNode;
      AnyRefNode &node5 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal5.MTBasePlantarNode;
      AnyRefNode &node6 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal1.MTBasePlantarNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
    
    AnyKinPLine LongitudinalMedial = {
      AnyRefNode &node1 = Main.HumanModel.BodyModel.Left.Leg.Seg.Calcaneus.LongitudinalMedialArchNode;
      AnyRefNode &node2 = Main.HumanModel.BodyModel.Left.Leg.Seg.Navicular.LongitudinalMedialArchNode;
//      AnyRefNode &node3 = Main.HumanModel.BodyModel.Left.Leg.Seg.MedialCuneiform.LongitudinalMedialArchNode;
//      AnyRefNode &node4 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal1.MTBasePlantarNode;
      AnyRefNode &node5 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
      AnyRefNode &node6 = Main.HumanModel.BodyModel.Left.Leg.Seg.Calcaneus.LongitudinalMedialArchNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
    
    AnyKinPLine LongitudinalLateral = {
      AnyRefNode &node1 = Main.HumanModel.BodyModel.Left.Leg.Seg.Calcaneus.LongitudinalLateralArchNode;
      AnyRefNode &node2 = Main.HumanModel.BodyModel.Left.Leg.Seg.Cuboid.LongitudinalLateralArchNode;
//      AnyRefNode &node3 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal5.MTBasePlantarNode;
      AnyRefNode &node4 = Main.HumanModel.BodyModel.Left.Leg.Seg.Metatarsal5.MTHeadPlantarNode;
      AnyRefNode &node5 = Main.HumanModel.BodyModel.Left.Leg.Seg.Calcaneus.LongitudinalLateralArchNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
  };

  

  
  
  
  
  
  
  
  
  


  

  //************************************************
  //              DriverIntertarsal
  //************************************************
  

//    AnyKinEqSimpleDriver JntTaloNaviLeft = 
//    { // 0: Rot, 1: Ad/Ab 2: Df/Pf
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.TaloNavicularEversion;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.TaloNavicularAbduction;
//      AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.TaloNavicularDorsiFlexion;
////      MeasureOrganizer = {0,2};
//      DriverPos = {
//      .JntPos.Left.TaloNavicularEversion,
//      .JntPos.Left.TaloNavicularAbduction,
//      .JntPos.Left.TaloNavicularDorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.TaloNavicularEversion,
//      .JntVel.Left.TaloNavicularAbduction,
//      .JntVel.Left.TaloNavicularDorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On,On,On};
//    };
    
//     AnyKinEqSimpleDriver JntNaviCuneiMedLeft = 
//    {  // 0: Rot, 1: Ad/Ab 2: Df/Pf
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.NaviculoMedialCuneiformEversion;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.NaviculoMedialCuneiformAbduction;
//      AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.NaviculoMedialCuneiformDorsiFlexion;
////      MeasureOrganizer = {0};
//      DriverPos = {
//      .JntPos.Left.NaviculoMedialCuneiformEversion,
//      .JntPos.Left.NaviculoMedialCuneiformAbduction,
//      .JntPos.Left.NaviculoMedialCuneiformDorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.NaviculoMedialCuneiformEversion,
//      .JntVel.Left.NaviculoMedialCuneiformAbduction,
//      .JntVel.Left.NaviculoMedialCuneiformDorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On,On,On};
//    };
    
//    AnyKinEqSimpleDriver JntNaviCuneiIntLeft = 
//    { // 0: Ad/Ab 1: Df/Pf
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.NaviculoIntermediateCuneiformAbduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.NaviculoIntermediateCuneiformDorsiFlexion;
//      DriverPos = {
//      .JntPos.Left.NaviculoIntermediateCuneiformAbduction,
//      .JntPos.Left.NaviculoIntermediateCuneiformDorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.NaviculoIntermediateCuneiformAbduction,
//      .JntVel.Left.NaviculoIntermediateCuneiformDorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On, On};   
//    };
    
//    AnyKinEqSimpleDriver JntNaviCuneiLatLeft = 
//    {// 0: Ad/Ab 1: Df/Pf
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.NaviculoLateralCuneiformAbduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.NaviculoLateralCuneiformDorsiFlexion;
//      DriverPos = {
//      .JntPos.Left.NaviculoLateralCuneiformAbduction,
//      .JntPos.Left.NaviculoLateralCuneiformDorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.NaviculoLateralCuneiformAbduction,
//      .JntVel.Left.NaviculoLateralCuneiformDorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On, On};    
//};
    
//    AnyKinEqSimpleDriver JntCalCuboidLeft = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.CalcaneoCuboidEversion;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.CalcaneoCuboidAbduction;
//      AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.CalcaneoCuboidDorsiFlexion;
//      DriverPos = {
//      .JntPos.Left.CalcaneoCuboidEversion,
//      .JntPos.Left.CalcaneoCuboidAbduction,
//      .JntPos.Left.CalcaneoCuboidDorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.CalcaneoCuboidEversion,
//      .JntVel.Left.CalcaneoCuboidAbduction,
//      .JntVel.Left.CalcaneoCuboidDorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On, On, On};
//    };    
    
    
    
  //************************************************
  //              DriverTarsoMt
  //************************************************
  
    
    AnyKinEqSimpleDriver JntTarsoMt1Left = 
    { // 0: Rot, 1: Ad/Ab 2: Df/Pf
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal1Eversion;
      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal1Abduction;
//      AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal1DorsiFlexion;
//      MeasureOrganizer = {0};
      DriverPos = {
      .JntPos.Left.TarsoMetatarsal1Eversion,
      .JntPos.Left.TarsoMetatarsal1Abduction
//      .JntPos.Left.TarsoMetatarsal1DorsiFlexion
      }*pi/180;
      DriverVel = {
      .JntVel.Left.TarsoMetatarsal1Eversion,
      .JntVel.Left.TarsoMetatarsal1Abduction
//      .JntVel.Left.TarsoMetatarsal1DorsiFlexion
      }*pi/180;
      Reaction.Type = {Off,Off};
    };
    
    
//    AnyKinEqSimpleDriver JntTarsoMt2Left = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal2Abduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal2DorsiFlexion;
//      DriverPos = {
//      .JntPos.Left.TarsoMetatarsal2Abduction,
//      .JntPos.Left.TarsoMetatarsal2DorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.TarsoMetatarsal2Abduction,
//      .JntVel.Left.TarsoMetatarsal2DorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On, Off};
//    };
//    
//    
//    AnyKinEqSimpleDriver JntTarsoMt3Left = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal3Abduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal3DorsiFlexion;
//      DriverPos = {
//      .JntPos.Left.TarsoMetatarsal3Abduction,
//      .JntPos.Left.TarsoMetatarsal3DorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.TarsoMetatarsal3Abduction,
//      .JntVel.Left.TarsoMetatarsal3DorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On, Off};
//    };
//    
//    
//    AnyKinEqSimpleDriver JntTarsoMt4Left = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal4Abduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal4DorsiFlexion;
//      DriverPos = {
//      .JntPos.Left.TarsoMetatarsal4Abduction,
//      .JntPos.Left.TarsoMetatarsal4DorsiFlexion
//      }*pi/180;
//      DriverVel = {
//      .JntVel.Left.TarsoMetatarsal4Abduction,
//      .JntVel.Left.TarsoMetatarsal4DorsiFlexion
//      }*pi/180;
//      Reaction.Type = {On, Off};
//    };
    
    
    AnyKinEqSimpleDriver JntTarsoMt5Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal5SkewEversion;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal5Abduction; //Replaced by metatarsal head contact
//      AnyKinMeasure &ref3 = Main.HumanModel.BodyModel.Interface.Left.TarsoMetatarsal5SkewDorsiFlexion;
      DriverPos = {
      .JntPos.Left.TarsoMetatarsal5SkewEversion
//      .JntPos.Left.TarsoMetatarsal5Abduction,
//      .JntPos.Left.TarsoMetatarsal5SkewDorsiFlexion
      }*pi/180;
      DriverVel = {
      .JntVel.Left.TarsoMetatarsal5SkewEversion
//      .JntVel.Left.TarsoMetatarsal5Abduction,
//      .JntVel.Left.TarsoMetatarsal5SkewDorsiFlexion
      }*pi/180;
      Reaction.Type = {Off};
    };
    
  
  //************************************************
  //              DriverJntMtPhal
  //************************************************
  
    
    AnyKinEqSimpleDriver JntMtPhal1Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal1Abduction;
      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal1DorsiFlexion;
      DriverPos = {
      .JntPos.Left.MetatarsoPhalangeal1Abduction,
      .JntPos.Left.MetatarsoPhalangeal1DorsiFlexion
      }*pi/180;
      DriverVel = {
      .JntVel.Left.MetatarsoPhalangeal1Abduction,
      .JntVel.Left.MetatarsoPhalangeal1DorsiFlexion
      }*pi/180;
      Reaction.Type = {Off, Off};
    };

    
    AnyKinEqSimpleDriver JntMtPhal2Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal2Abduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal2DorsiFlexion;
      DriverPos = {
      .JntPos.Left.MetatarsoPhalangeal2Abduction
//      .JntPos.Left.MetatarsoPhalangeal2DorsiFlexion
      }*pi/180;
      DriverVel = {
      .JntVel.Left.MetatarsoPhalangeal2Abduction
//      .JntVel.Left.MetatarsoPhalangeal2DorsiFlexion
      }*pi/180;
      Reaction.Type = {Off};
    };    
    
    AnyKinEqSimpleDriver JntMtPhal3Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal3Abduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal3DorsiFlexion;
      DriverPos = {
      .JntPos.Left.MetatarsoPhalangeal3Abduction
//      .JntPos.Left.MetatarsoPhalangeal3DorsiFlexion
      }*pi/180;
      DriverVel = {
      .JntVel.Left.MetatarsoPhalangeal3Abduction
//      .JntVel.Left.MetatarsoPhalangeal3DorsiFlexion
      }*pi/180;
      Reaction.Type = {Off};
    };
    
    
    AnyKinEqSimpleDriver JntMtPhal4Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal4Abduction;
//      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal4DorsiFlexion;
      DriverPos = {
      .JntPos.Left.MetatarsoPhalangeal4Abduction
//      .JntPos.Left.MetatarsoPhalangeal4DorsiFlexion
      }*pi/180;
      DriverVel = {
      .JntVel.Left.MetatarsoPhalangeal4Abduction
//      .JntVel.Left.MetatarsoPhalangeal4DorsiFlexion
      }*pi/180;
      Reaction.Type = {Off};
    };
    
    
    AnyKinEqSimpleDriver JntMtPhal5Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal5Abduction;
      AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal5DorsiFlexion;
      DriverPos = {
      .JntPos.Left.MetatarsoPhalangeal5Abduction,
      .JntPos.Left.MetatarsoPhalangeal5DorsiFlexion
      }*pi/180;
      DriverVel = {
      .JntVel.Left.MetatarsoPhalangeal5Abduction,
      .JntVel.Left.MetatarsoPhalangeal5DorsiFlexion
      }*pi/180;
      Reaction.Type = {Off, Off};
    };
    
  
  //************************************************
  //              DriverJntProxPhal
  //************************************************
  
    
    AnyKinEqSimpleDriver JntProxPhal1Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.ProximoDistalPhalange1DorsiFlexion;
      DriverPos = {.JntPos.Left.ProximoDistalPhalange1DorsiFlexion}*pi/180;
      DriverVel = {.JntVel.Left.ProximoDistalPhalange1DorsiFlexion}*pi/180;
      Reaction.Type = {Off};
    };
    
    
    AnyKinEqSimpleDriver JntProxPhal2Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.ProximoMedialPhalange2DorsiFlexion;
      DriverPos = {.JntPos.Left.ProximoMedialPhalange2DorsiFlexion}*pi/180;
      DriverVel = {.JntVel.Left.ProximoMedialPhalange2DorsiFlexion}*pi/180;
      Reaction.Type = {Off};
    };
    
    
    AnyKinEqSimpleDriver JntProxPhal3Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.ProximoMedialPhalange3DorsiFlexion;
      DriverPos = {.JntPos.Left.ProximoMedialPhalange3DorsiFlexion}*pi/180;
      DriverVel = {.JntVel.Left.ProximoMedialPhalange3DorsiFlexion}*pi/180;
      Reaction.Type = {Off};
    };
    
    
    AnyKinEqSimpleDriver JntProxPhal4Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.ProximoMedialPhalange4DorsiFlexion;
      DriverPos = {.JntPos.Left.ProximoMedialPhalange4DorsiFlexion}*pi/180;
      DriverVel = {.JntVel.Left.ProximoMedialPhalange4DorsiFlexion}*pi/180;
      Reaction.Type = {Off};
    };
    
    
    AnyKinEqSimpleDriver JntProxPhal5Left = 
    {
      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.ProximoMedialPhalange5DorsiFlexion;
      DriverPos = {.JntPos.Left.ProximoMedialPhalange5DorsiFlexion}*pi/180;
      DriverVel = {.JntVel.Left.ProximoMedialPhalange5DorsiFlexion}*pi/180;
      Reaction.Type = {Off};
    };
    
  
  //************************************************
  //              DriverJntDistPhal
  //************************************************
  
  
    
   
//    AnyKinEqSimpleDriver JntDistPhal2Left = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MedioDistalPhalange2DorsiFlexion;
//      DriverPos = {.JntPos.Left.MedioDistalPhalange2DorsiFlexion}*pi/180;
//      DriverVel = {.JntVel.Left.MedioDistalPhalange2DorsiFlexion}*pi/180;
//      Reaction.Type = {On};
//    };
//    
//    
//    AnyKinEqSimpleDriver JntDistPhal3Left = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MedioDistalPhalange3DorsiFlexion;
//      DriverPos = {.JntPos.Left.MedioDistalPhalange3DorsiFlexion}*pi/180;
//      DriverVel = {.JntVel.Left.MedioDistalPhalange3DorsiFlexion}*pi/180;
//      Reaction.Type = {On};
//    };
//    
//    
//    AnyKinEqSimpleDriver JntDistPhal4Left = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MedioDistalPhalange4DorsiFlexion;
//      DriverPos = {.JntPos.Left.MedioDistalPhalange4DorsiFlexion}*pi/180;
//      DriverVel = {.JntVel.Left.MedioDistalPhalange4DorsiFlexion}*pi/180;
//      Reaction.Type = {On};
//    };
//    
//    
//    AnyKinEqSimpleDriver JntDistPhal5Left = 
//    {
//      AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Left.MedioDistalPhalange5DorsiFlexion;
//      DriverPos = {.JntPos.Left.MedioDistalPhalange5DorsiFlexion}*pi/180;
//      DriverVel = {.JntVel.Left.MedioDistalPhalange5DorsiFlexion}*pi/180;
//      Reaction.Type = {On};
//    };
    
