
//could use a switch USE_RHYTHMS



//***************************
//Basic Rhythms (toe flexion) 
//***************************
// can be in body part, general rhythm.

  
  AnyVar LesserToeMedioDistalFlexCoeffRight = 2.2;
  
  AnyKinEqSimpleDriver Toe2FlexRhytmRight={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Right.ProximoMedialPhalange2DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Right.MedioDistalPhalange2DorsiFlexion;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffRight} // to be optimized phase 1
      };  
      OutDim = 1;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver Toe3FlexRhytmRight={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Right.ProximoMedialPhalange3DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Right.MedioDistalPhalange3DorsiFlexion;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffRight} // to be optimized phase 1
      };   
      OutDim = 1;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver Toe4FlexRhytmRight={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Right.ProximoMedialPhalange4DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Right.MedioDistalPhalange4DorsiFlexion;
      OutDim = 1;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffRight} // to be optimized phase 1
      };   
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver Toe5FlexRhytmRight={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Right.ProximoMedialPhalange5DorsiFlexion;
      AnyKinMeasure &ref3 = ...HumanModel.Interface.Right.MedioDistalPhalange5DorsiFlexion;
      Coef={
        {-1,..LesserToeMedioDistalFlexCoeffRight} // to be optimized phase 1
      };    
      OutDim = 1;
    }; 
    DriverPos= {0};
    DriverVel={0};
    Reaction.Type = {Off};
  };

  
  //MP joints flexion
  AnyKinMeasureLinComb MtPh1MtPh5LinCombRight = {
    AnyKinMeasure &ref1 = ..HumanModel.Interface.Right.MetatarsoPhalangeal1DorsiFlexion;
    AnyKinMeasure &ref2 = ..HumanModel.Interface.Right.MetatarsoPhalangeal5DorsiFlexion;
    OutDim = 1;
    Coef={
      {1,-1}
    };      
  }; 
  
  
  AnyKinEqSimpleDriver MtPh2FlexRhytmRight={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref1 = ...HumanModel.Interface.Right.MetatarsoPhalangeal2DorsiFlexion;
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Right.MetatarsoPhalangeal1DorsiFlexion;
      AnyKinMeasure &ref3 = ..MtPh1MtPh5LinCombRight;
      OutDim = 1;
      Coef={
        {1,-1,1/4}
      };  
      //Const = {-11.25}*pi/180;
    }; 
    DriverPos= {0};
    DriverVel={0};
  };
  
  AnyKinEqSimpleDriver MtPh3FlexRhytmRight={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref1 = ...HumanModel.Interface.Right.MetatarsoPhalangeal3DorsiFlexion;
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Right.MetatarsoPhalangeal1DorsiFlexion;
      AnyKinMeasure &ref3 = ..MtPh1MtPh5LinCombRight;
      OutDim = 1;
      Coef={
        {1,-1,2/4}
      };    
      //Const = {-7.5}*pi/180;
    }; 
    DriverPos= {0};
    DriverVel={0};
  };
  
  AnyKinEqSimpleDriver MtPh4FlexRhytmRight={
    AnyKinMeasureLinComb LinComb = {
      AnyKinMeasure &ref1 = ...HumanModel.Interface.Right.MetatarsoPhalangeal4DorsiFlexion;
      AnyKinMeasure &ref2 = ...HumanModel.Interface.Right.MetatarsoPhalangeal1DorsiFlexion;
      AnyKinMeasure &ref3 = ..MtPh1MtPh5LinCombRight;
      OutDim = 1;
      Coef={
        {1,-1,3/4}
      };   
      //Const = {-3.75}*pi/180;
    }; 
    DriverPos= {0};
    DriverVel={0};
  };
  
  
  
  
  
  
  
  //***************************************************************
  //Tarsal rhythm (from Nester, for stance phase of normal walking).
  //***************************************************************
  // stays in drivers, only for walking.
  
  
  AnyKinEqInterPolDriver TaloNavicularRhythmRight = 
  {
//    AnyKinMeasure &ref3 = ..HumanModel.Interface.Right.TaloNavicularDorsiFlexion;
    AnyKinMeasure &ref1 = ..HumanModel.Interface.Right.TaloNavicularEversion;
    AnyKinMeasure &ref2 = ..HumanModel.Interface.Right.TaloNavicularAbduction;
    Type = Bspline;
    BsplineOrder = 4;
    T = {Main.TrialSpecificData.tStart, 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*1/5), 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*2/5), 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*3/5), 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*4/5), 
         Main.TrialSpecificData.tEnd};
    Data = pi/180*{{0,0,0,0,0,0},{0,0,0,0,0,0}}; 
  };

  AnyKinEqInterPolDriver CalcaneoCuboidRhythmRight = 
  {
//    AnyKinMeasure &ref3 = ..HumanModel.Interface.Right.CalcaneoCuboidDorsiFlexion;
    AnyKinMeasure &ref1 = ..HumanModel.Interface.Right.CalcaneoCuboidEversion;
//    AnyKinMeasure &ref2 = ..HumanModel.Interface.Right.CalcaneoCuboidAbduction;
    Type = Bspline;
    BsplineOrder = 4;
    T = {Main.TrialSpecificData.tStart, 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*1/5), 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*2/5), 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*3/5), 
         Main.TrialSpecificData.tStart+((Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)*4/5), 
         Main.TrialSpecificData.tEnd};
    Data = pi/180*{{0,0,0,0,0,0}}; 
  };
  
  
  
  

    
    
  
  
  
  //*****************************************************************************
  //Transverse Arch at MP joints (corresponds to tarsometa flexion and abduction)
  //*****************************************************************************
  // abduction part can be in body part, it is general rhythm due to ligament.
  // rhythm only (not flatening coef) for flexion can also be in body part.
  
  
  AnySeg MPJointsArchDummySegRight = 
  {
    r0 = ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.r0 + ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTHeadPlantarNode.sRel *...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.Axes0';
    Axes0 = RotMat(r0, ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.r0 + ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTHeadPlantarNode.sRel *...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.Axes0', r0+{1,0,0}*...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.Axes0')*RotMat(pi/2,y)*RotMat(pi/2,z);
    Mass = 0;
    Jii = {0, 0, 0};
  };
  
  AnyUniversalJoint MPJointsArchDummySegJointRight = 
  {
    Axis1 = x;
    Axis2 = y;
    AnyRefFrame &Metatarsal1 = ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
    AnyRefFrame &DummySeg = .MPJointsArchDummySegRight;
  };
  
  AnyKinEq MPJointsArchDummySegDriverRight = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,1};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...MPJointsArchDummySegRight;
        AnyRefFrame &MT5 = .....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTHeadPlantarNode;
      };
    };
    Reaction.Type = {On, On};
  };
  
  
  
  AnyKinEq MPJointsArchRhythmRight = {
    AnyKinMeasureLinComb MPJointsArchLinComb = 
    {
      AnyKinMeasureOrg MeasureOrgMT2 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....MPJointsArchDummySegRight;
          AnyRefFrame &MT2 = ......HumanModel.BodyModel.Right.Leg.Seg.Metatarsal2.MTHeadPlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT3 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....MPJointsArchDummySegRight;
          AnyRefFrame &MT2 = ......HumanModel.BodyModel.Right.Leg.Seg.Metatarsal3.MTHeadPlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT4 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....MPJointsArchDummySegRight;
          AnyRefFrame &MT2 = ......HumanModel.BodyModel.Right.Leg.Seg.Metatarsal4.MTHeadPlantarNode;
        };
      };
      
      OutDim = 2;
      Coef = {{-1, 0.5, 0},{0, 0.5, -1}}; //estimated
    };
    Reaction.Type = {Off, Off};
  };
  
  

  
  //***************************************************************************************
  //Transverse Arch at tarso metatarsal joints (replaces cunei flexion and cuboid eversion)
  //***************************************************************************************
  // rhythm only (not flatening coef) for flexion can be in body part.
  
  
  AnySeg TMTJointsArchDummySegRight = 
  {
    r0 = ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.r0 + ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTBasePlantarNode.sRel *...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.Axes0';
    Axes0 = RotMat(r0, ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.r0 + ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTBasePlantarNode.sRel *...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.Axes0', r0+{1,0,0}*...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.Axes0')*RotMat(pi/2,y)*RotMat(pi/2,z);
    Mass = 0;
    Jii = {0, 0, 0};
  };
  
  AnyUniversalJoint TMTJointsArchDummySegJointRight = 
  {
    Axis1 = x;
    Axis2 = y;
    AnyRefFrame &Metatarsal1 = ...HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTBasePlantarNode;
    AnyRefFrame &DummySeg = .TMTJointsArchDummySegRight;
  };
  
  AnyKinEq TMTJointsArchDummySegDriverRight = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,1};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...TMTJointsArchDummySegRight;
        AnyRefFrame &MT5 = .....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTBasePlantarNode;
      };
    };
    Reaction.Type = {On, On};
  };
  
  
  AnyKinEq TMTJointsArchRhythmRight1 = {
    AnyKinMeasureLinComb TMTJointsArchLinComb = 
    {
      AnyKinMeasureOrg MeasureOrgMT2 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....TMTJointsArchDummySegRight;
          AnyRefFrame &MT2 = ......HumanModel.BodyModel.Right.Leg.Seg.Metatarsal2.MTBasePlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT3 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....TMTJointsArchDummySegRight;
          AnyRefFrame &MT2 = ......HumanModel.BodyModel.Right.Leg.Seg.Metatarsal3.MTBasePlantarNode;
        };
      };
      
      AnyKinMeasureOrg MeasureOrgMT4 = {
        MeasureOrganizer = {0};
        AnyKinLinear Lin = 
        {
          Ref = 0;
          AnyRefFrame &DummySeg = ....TMTJointsArchDummySegRight;
          AnyRefFrame &MT2 = ......HumanModel.BodyModel.Right.Leg.Seg.Metatarsal4.MTBasePlantarNode;
        };
      };
      OutDim = 1;
      Coef = {{0, 0.6, -1}};
    };
    Reaction.Type = {Off};
  };
  
  
  
  AnyKinEq TMTJointsArchRhythmRight2 = {
    AnyKinMeasureLinComb TMTJointsArchLinComb = 
    {      
      AnyKinMeasureOrg &MeasureOrgIntCunei = ....HumanModel.BodyModel.Interface.Right.NaviculoIntermediateCuneiformDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgLatCunei = ....HumanModel.BodyModel.Interface.Right.NaviculoLateralCuneiformDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta2 = ....HumanModel.BodyModel.Interface.Right.TarsoMetatarsal2DorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta3 = ....HumanModel.BodyModel.Interface.Right.TarsoMetatarsal3DorsiFlexion;
      
      OutDim = 2;
      Coef = {{1, 0, -1, 0},{0, 1, 0, -1}};
    };
    Reaction.Type = {Off, Off};
  };

  
  AnyKinEqInterPolDriver SecondRayDriverRight = 
  {
    Type = Bspline;
    BsplineOrder = 4;
    T = (.DorsiFlexionMedialData.T * (Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)) + Main.TrialSpecificData.tStart;
    Data = (.DorsiFlexionMedialData.Data * (pi/180) * .SecondRayCoefRight) + .SecondRayOffsetRight;
    AnyKinMeasureOrg &MeasureOrgIntCunei = ...HumanModel.BodyModel.Interface.Right.NaviculoIntermediateCuneiformDorsiFlexion;
    Reaction.Type = {Off};
  };
  AnyVar SecondRayCoefRight = 1; //To be optimized
  AnyVar SecondRayOffsetRight = -0.1; //To be optimized
  
  
  
  
  //***************************************************************************************
  //Longitudinal Medial Arch ()
  //***************************************************************************************
    
  
  AnyFunButterworthFilter LowPassFilter = {
      FilterForwardBackwardOnOff = On;
      AutomaticInitialConditionOnOff = On;
      N = 2;
      W = {0.4};
      Type = LowPass;
    };
  
  
  AnyInputFile DorsiFlexionMedialData = 
  {
    FileName = "../Input/DorsiFlexionMedial.txt";
  };

  
  
  AnyKinEqInterPolDriver LongitudinalMedialArchDriverRight = 
  {
    Type = Bspline;
    BsplineOrder = 4;
    T = (.DorsiFlexionMedialData.T * (Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)) + Main.TrialSpecificData.tStart;
    Data = (.LowPassFilter(.DorsiFlexionMedialData.Data) * (pi/180) * .LongitudinalMedialArchCoefRight) + .LongitudinalMedialArchOffsetRight;
    AnyKinMeasureOrg &MeasureOrgNavi = ...HumanModel.BodyModel.Interface.Right.TaloNavicularDorsiFlexion;
    Reaction.Type = {Off};
  };
  AnyVar LongitudinalMedialArchCoefRight = 1; //To be optimized
  AnyVar LongitudinalMedialArchOffsetRight = -0.15; //To be optimized
  
  
  
  
  AnyKinEq LongitudinalMedialArchRhythmRight = {
    AnyKinMeasureLinComb LongitudinalMedialArchLinComb = 
    {
      AnyKinMeasureOrg &MeasureOrgNavi = ....HumanModel.BodyModel.Interface.Right.TaloNavicularDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMedCunei = ....HumanModel.BodyModel.Interface.Right.NaviculoMedialCuneiformDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta1 = ....HumanModel.BodyModel.Interface.Right.TarsoMetatarsal1DorsiFlexion;
      
      OutDim = 2;
      Coef = {{0.6, -1, 0},{0.1, 0, -1}};
    };
    Reaction.Type = {Off, Off};
  };
  
  AnyKinEq LongitudinalMedialArchRhythmRight2 = {
    AnyKinMeasureLinComb LongitudinalMedialArchLinComb = 
    {
      AnyKinMeasureOrg &MeasureOrgNavi = ....HumanModel.BodyModel.Interface.Right.TaloNavicularAbduction;
      
      AnyKinMeasureOrg &MeasureOrgMedCunei = ....HumanModel.BodyModel.Interface.Right.NaviculoMedialCuneiformAbduction;
      
      AnyKinMeasureOrg &MeasureOrgMeta1 = ....HumanModel.BodyModel.Interface.Right.TarsoMetatarsal1Abduction;
      
      OutDim = 2;
      Coef = {{0.1, -1, 0},{0.1, 0, -1}};
    };
    Reaction.Type = {Off, Off};
  };
  
  
  
  
  
  
  
  
  //***************************************************************************************
  //Longitudinal Lateral Arch ()
  //***************************************************************************************
    
  
  
  AnyInputFile DorsiFlexionLateralData = 
  {
    FileName = "../Input/DorsiFlexionLateral.txt";
  };

  
  AnyKinEqInterPolDriver LongitudinalLateralArchDriverRight = 
  {
    Type = Bspline;
    BsplineOrder = 4;
    T = (.DorsiFlexionLateralData.T * (Main.TrialSpecificData.tEnd-Main.TrialSpecificData.tStart)) + Main.TrialSpecificData.tStart;
    Data = (.LowPassFilter(.DorsiFlexionLateralData.Data) * (pi/180) * .LongitudinalLateralArchCoefRight) + .LongitudinalLateralArchOffsetRight;
    AnyKinMeasureOrg &MeasureOrgCuboid = ...HumanModel.BodyModel.Interface.Right.CalcaneoCuboidDorsiFlexion;
    Reaction.Type = {Off};
  };
  AnyVar LongitudinalLateralArchCoefRight = 1; //To be optimized
  AnyVar LongitudinalLateralArchOffsetRight = -0.24; //To be optimized

  
  
  AnyKinEq LongitudinalLateralArchRhythmRight = {
    AnyKinMeasureLinComb LongitudinalLateralArchLinComb = 
    {
      AnyKinMeasureOrg &MeasureOrgCuboid = ....HumanModel.BodyModel.Interface.Right.CalcaneoCuboidDorsiFlexion;
      
      AnyKinMeasureOrg &MeasureOrgMeta5 = ....HumanModel.BodyModel.Interface.Right.TarsoMetatarsal5SkewDorsiFlexion;

      OutDim = 1;
      Coef = {{1, -1}};
    };
    Reaction.Type = {Off};
  };
  
  
  
  

  
  
  
  
  //***************************************************************************************
  //draw arches
  //***************************************************************************************
  
  
  
  AnyFolder DrawArchesR = {
    AnyKinPLine MetatarsalTranverse = {
      AnyRefNode &node1 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
      AnyRefNode &node2 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal2.MTHeadPlantarNode;
      AnyRefNode &node3 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal3.MTHeadPlantarNode;
      AnyRefNode &node4 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal4.MTHeadPlantarNode;
      AnyRefNode &node5 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTHeadPlantarNode;
      AnyRefNode &node6 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
    
    AnyKinPLine TarsalTranverse = {
      AnyRefNode &node1 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTBasePlantarNode;
      AnyRefNode &node2 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal2.MTBasePlantarNode;
      AnyRefNode &node3 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal3.MTBasePlantarNode;
      AnyRefNode &node4 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal4.MTBasePlantarNode;
      AnyRefNode &node5 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTBasePlantarNode;
      AnyRefNode &node6 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTBasePlantarNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
    
    AnyKinPLine LongitudinalMedial = {
      AnyRefNode &node1 = ....HumanModel.BodyModel.Right.Leg.Seg.Calcaneus.LongitudinalMedialArchNode;
      AnyRefNode &node2 = ....HumanModel.BodyModel.Right.Leg.Seg.Navicular.LongitudinalMedialArchNode;
//      AnyRefNode &node3 = ....HumanModel.BodyModel.Right.Leg.Seg.MedialCuneiform.LongitudinalMedialArchNode;
//      AnyRefNode &node4 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTBasePlantarNode;
      AnyRefNode &node5 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal1.MTHeadPlantarNode;
      AnyRefNode &node6 = ....HumanModel.BodyModel.Right.Leg.Seg.Calcaneus.LongitudinalMedialArchNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
    
    AnyKinPLine LongitudinalLateral = {
      AnyRefNode &node1 = ....HumanModel.BodyModel.Right.Leg.Seg.Calcaneus.LongitudinalLateralArchNode;
      AnyRefNode &node2 = ....HumanModel.BodyModel.Right.Leg.Seg.Cuboid.LongitudinalLateralArchNode;
//      AnyRefNode &node3 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTBasePlantarNode;
      AnyRefNode &node4 = ....HumanModel.BodyModel.Right.Leg.Seg.Metatarsal5.MTHeadPlantarNode;
      AnyRefNode &node5 = ....HumanModel.BodyModel.Right.Leg.Seg.Calcaneus.LongitudinalLateralArchNode;
      AnyDrawPLine Draw = 
      {
        Opacity = 0.6;
        Thickness = 0.002;
        RGB = Main.DrawSettings.Colors.AnyBodyYellow;
      };
    };
  };

    
 
